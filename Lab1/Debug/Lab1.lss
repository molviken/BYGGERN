
Lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000041e  000004b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000041e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  000004b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004b8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000001d1  00000000  00000000  00000538  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000014f  00000000  00000000  00000709  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000193  00000000  00000000  00000858  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  000009ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000014b  00000000  00000000  00000a54  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000026  00000000  00000000  00000b9f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00000bc5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee e1       	ldi	r30, 0x1E	; 30
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 31       	cpi	r26, 0x10	; 16
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 0d 02 	jmp	0x41a	; 0x41a <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include "uart.h"

int main(void)
{

    USART_Init(31);
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 6d 00 	call	0xda	; 0xda <USART_Init>
	//printf("Hei det funker enda\n");
	set_bit(PORTA, PA0);
  b6:	d8 9a       	sbi	0x1b, 0	; 27
	set_bit(PORTA, PA1);
  b8:	d9 9a       	sbi	0x1b, 1	; 27
	set_bit(PORTA, PA2);
  ba:	da 9a       	sbi	0x1b, 2	; 27
	set_bit(PORTA, PA3);
  bc:	db 9a       	sbi	0x1b, 3	; 27
	set_bit(PORTA, PA4);
  be:	dc 9a       	sbi	0x1b, 4	; 27
	set_bit(PORTA, PA5);
  c0:	dd 9a       	sbi	0x1b, 5	; 27
	set_bit(PORTA, PA6);
  c2:	de 9a       	sbi	0x1b, 6	; 27
	set_bit(PORTA, PA7);
  c4:	df 9a       	sbi	0x1b, 7	; 27
	set_bit(PORTE, PE1);
  c6:	39 9a       	sbi	0x07, 1	; 7
  c8:	ff cf       	rjmp	.-2      	; 0xc8 <main+0x1a>

000000ca <USART_Transmit>:
}

void USART_Transmit( unsigned char data ){

// Wait for empty transmit buffer
	while( !( UCSR0A & (1<<UDRE0)) );
  ca:	5d 9b       	sbis	0x0b, 5	; 11
  cc:	fe cf       	rjmp	.-4      	; 0xca <USART_Transmit>
  
//Put data into buffer, sends the data
	UDR0 = data;
  ce:	8c b9       	out	0x0c, r24	; 12
  d0:	08 95       	ret

000000d2 <USART_Receive>:
}

unsigned char USART_Receive( void ){

//Wait for data to be received
	while ( !(UCSR0A & (1<<RXC0)) );
  d2:	5f 9b       	sbis	0x0b, 7	; 11
  d4:	fe cf       	rjmp	.-4      	; 0xd2 <USART_Receive>
//Get and return received data from buffer
	return UDR0;
  d6:	8c b1       	in	r24, 0x0c	; 12
  d8:	08 95       	ret

000000da <USART_Init>:
#include "uart.h"


void USART_Init( unsigned int ubrr){
	// Set baud rate
	UBRR0H = (unsigned char) (ubrr>>8);
  da:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) ubrr;
  dc:	89 b9       	out	0x09, r24	; 9
	
	/* Enable receiver and transmitter	*/
	UCSR0B = (1<<TXEN0)|(1<<RXEN0);
  de:	88 e1       	ldi	r24, 0x18	; 24
  e0:	8a b9       	out	0x0a, r24	; 10
	fdevopen(USART_Transmit,USART_Receive);
  e2:	69 e6       	ldi	r22, 0x69	; 105
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	85 e6       	ldi	r24, 0x65	; 101
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	0e 94 78 00 	call	0xf0	; 0xf0 <fdevopen>
  ee:	08 95       	ret

000000f0 <fdevopen>:
  f0:	0f 93       	push	r16
  f2:	1f 93       	push	r17
  f4:	cf 93       	push	r28
  f6:	df 93       	push	r29
  f8:	ec 01       	movw	r28, r24
  fa:	8b 01       	movw	r16, r22
  fc:	00 97       	sbiw	r24, 0x00	; 0
  fe:	31 f4       	brne	.+12     	; 0x10c <fdevopen+0x1c>
 100:	61 15       	cp	r22, r1
 102:	71 05       	cpc	r23, r1
 104:	19 f4       	brne	.+6      	; 0x10c <fdevopen+0x1c>
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	38 c0       	rjmp	.+112    	; 0x17c <fdevopen+0x8c>
 10c:	6e e0       	ldi	r22, 0x0E	; 14
 10e:	70 e0       	ldi	r23, 0x00	; 0
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	0e 94 c3 00 	call	0x186	; 0x186 <calloc>
 118:	fc 01       	movw	r30, r24
 11a:	00 97       	sbiw	r24, 0x00	; 0
 11c:	a1 f3       	breq	.-24     	; 0x106 <fdevopen+0x16>
 11e:	80 e8       	ldi	r24, 0x80	; 128
 120:	83 83       	std	Z+3, r24	; 0x03
 122:	01 15       	cp	r16, r1
 124:	11 05       	cpc	r17, r1
 126:	71 f0       	breq	.+28     	; 0x144 <fdevopen+0x54>
 128:	13 87       	std	Z+11, r17	; 0x0b
 12a:	02 87       	std	Z+10, r16	; 0x0a
 12c:	81 e8       	ldi	r24, 0x81	; 129
 12e:	83 83       	std	Z+3, r24	; 0x03
 130:	80 91 06 01 	lds	r24, 0x0106
 134:	90 91 07 01 	lds	r25, 0x0107
 138:	89 2b       	or	r24, r25
 13a:	21 f4       	brne	.+8      	; 0x144 <fdevopen+0x54>
 13c:	f0 93 07 01 	sts	0x0107, r31
 140:	e0 93 06 01 	sts	0x0106, r30
 144:	20 97       	sbiw	r28, 0x00	; 0
 146:	c9 f0       	breq	.+50     	; 0x17a <fdevopen+0x8a>
 148:	d1 87       	std	Z+9, r29	; 0x09
 14a:	c0 87       	std	Z+8, r28	; 0x08
 14c:	83 81       	ldd	r24, Z+3	; 0x03
 14e:	82 60       	ori	r24, 0x02	; 2
 150:	83 83       	std	Z+3, r24	; 0x03
 152:	80 91 08 01 	lds	r24, 0x0108
 156:	90 91 09 01 	lds	r25, 0x0109
 15a:	89 2b       	or	r24, r25
 15c:	71 f4       	brne	.+28     	; 0x17a <fdevopen+0x8a>
 15e:	f0 93 09 01 	sts	0x0109, r31
 162:	e0 93 08 01 	sts	0x0108, r30
 166:	80 91 0a 01 	lds	r24, 0x010A
 16a:	90 91 0b 01 	lds	r25, 0x010B
 16e:	89 2b       	or	r24, r25
 170:	21 f4       	brne	.+8      	; 0x17a <fdevopen+0x8a>
 172:	f0 93 0b 01 	sts	0x010B, r31
 176:	e0 93 0a 01 	sts	0x010A, r30
 17a:	cf 01       	movw	r24, r30
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	1f 91       	pop	r17
 182:	0f 91       	pop	r16
 184:	08 95       	ret

00000186 <calloc>:
 186:	0f 93       	push	r16
 188:	1f 93       	push	r17
 18a:	cf 93       	push	r28
 18c:	df 93       	push	r29
 18e:	86 9f       	mul	r24, r22
 190:	80 01       	movw	r16, r0
 192:	87 9f       	mul	r24, r23
 194:	10 0d       	add	r17, r0
 196:	96 9f       	mul	r25, r22
 198:	10 0d       	add	r17, r0
 19a:	11 24       	eor	r1, r1
 19c:	c8 01       	movw	r24, r16
 19e:	0e 94 df 00 	call	0x1be	; 0x1be <malloc>
 1a2:	ec 01       	movw	r28, r24
 1a4:	00 97       	sbiw	r24, 0x00	; 0
 1a6:	29 f0       	breq	.+10     	; 0x1b2 <calloc+0x2c>
 1a8:	a8 01       	movw	r20, r16
 1aa:	60 e0       	ldi	r22, 0x00	; 0
 1ac:	70 e0       	ldi	r23, 0x00	; 0
 1ae:	0e 94 06 02 	call	0x40c	; 0x40c <memset>
 1b2:	ce 01       	movw	r24, r28
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	1f 91       	pop	r17
 1ba:	0f 91       	pop	r16
 1bc:	08 95       	ret

000001be <malloc>:
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	82 30       	cpi	r24, 0x02	; 2
 1c4:	91 05       	cpc	r25, r1
 1c6:	10 f4       	brcc	.+4      	; 0x1cc <malloc+0xe>
 1c8:	82 e0       	ldi	r24, 0x02	; 2
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	e0 91 0e 01 	lds	r30, 0x010E
 1d0:	f0 91 0f 01 	lds	r31, 0x010F
 1d4:	20 e0       	ldi	r18, 0x00	; 0
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	a0 e0       	ldi	r26, 0x00	; 0
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	30 97       	sbiw	r30, 0x00	; 0
 1de:	39 f1       	breq	.+78     	; 0x22e <malloc+0x70>
 1e0:	40 81       	ld	r20, Z
 1e2:	51 81       	ldd	r21, Z+1	; 0x01
 1e4:	48 17       	cp	r20, r24
 1e6:	59 07       	cpc	r21, r25
 1e8:	b8 f0       	brcs	.+46     	; 0x218 <malloc+0x5a>
 1ea:	48 17       	cp	r20, r24
 1ec:	59 07       	cpc	r21, r25
 1ee:	71 f4       	brne	.+28     	; 0x20c <malloc+0x4e>
 1f0:	82 81       	ldd	r24, Z+2	; 0x02
 1f2:	93 81       	ldd	r25, Z+3	; 0x03
 1f4:	10 97       	sbiw	r26, 0x00	; 0
 1f6:	29 f0       	breq	.+10     	; 0x202 <malloc+0x44>
 1f8:	13 96       	adiw	r26, 0x03	; 3
 1fa:	9c 93       	st	X, r25
 1fc:	8e 93       	st	-X, r24
 1fe:	12 97       	sbiw	r26, 0x02	; 2
 200:	2c c0       	rjmp	.+88     	; 0x25a <malloc+0x9c>
 202:	90 93 0f 01 	sts	0x010F, r25
 206:	80 93 0e 01 	sts	0x010E, r24
 20a:	27 c0       	rjmp	.+78     	; 0x25a <malloc+0x9c>
 20c:	21 15       	cp	r18, r1
 20e:	31 05       	cpc	r19, r1
 210:	31 f0       	breq	.+12     	; 0x21e <malloc+0x60>
 212:	42 17       	cp	r20, r18
 214:	53 07       	cpc	r21, r19
 216:	18 f0       	brcs	.+6      	; 0x21e <malloc+0x60>
 218:	a9 01       	movw	r20, r18
 21a:	db 01       	movw	r26, r22
 21c:	01 c0       	rjmp	.+2      	; 0x220 <malloc+0x62>
 21e:	ef 01       	movw	r28, r30
 220:	9a 01       	movw	r18, r20
 222:	bd 01       	movw	r22, r26
 224:	df 01       	movw	r26, r30
 226:	02 80       	ldd	r0, Z+2	; 0x02
 228:	f3 81       	ldd	r31, Z+3	; 0x03
 22a:	e0 2d       	mov	r30, r0
 22c:	d7 cf       	rjmp	.-82     	; 0x1dc <malloc+0x1e>
 22e:	21 15       	cp	r18, r1
 230:	31 05       	cpc	r19, r1
 232:	f9 f0       	breq	.+62     	; 0x272 <malloc+0xb4>
 234:	28 1b       	sub	r18, r24
 236:	39 0b       	sbc	r19, r25
 238:	24 30       	cpi	r18, 0x04	; 4
 23a:	31 05       	cpc	r19, r1
 23c:	80 f4       	brcc	.+32     	; 0x25e <malloc+0xa0>
 23e:	8a 81       	ldd	r24, Y+2	; 0x02
 240:	9b 81       	ldd	r25, Y+3	; 0x03
 242:	61 15       	cp	r22, r1
 244:	71 05       	cpc	r23, r1
 246:	21 f0       	breq	.+8      	; 0x250 <malloc+0x92>
 248:	fb 01       	movw	r30, r22
 24a:	93 83       	std	Z+3, r25	; 0x03
 24c:	82 83       	std	Z+2, r24	; 0x02
 24e:	04 c0       	rjmp	.+8      	; 0x258 <malloc+0x9a>
 250:	90 93 0f 01 	sts	0x010F, r25
 254:	80 93 0e 01 	sts	0x010E, r24
 258:	fe 01       	movw	r30, r28
 25a:	32 96       	adiw	r30, 0x02	; 2
 25c:	44 c0       	rjmp	.+136    	; 0x2e6 <malloc+0x128>
 25e:	fe 01       	movw	r30, r28
 260:	e2 0f       	add	r30, r18
 262:	f3 1f       	adc	r31, r19
 264:	81 93       	st	Z+, r24
 266:	91 93       	st	Z+, r25
 268:	22 50       	subi	r18, 0x02	; 2
 26a:	31 09       	sbc	r19, r1
 26c:	39 83       	std	Y+1, r19	; 0x01
 26e:	28 83       	st	Y, r18
 270:	3a c0       	rjmp	.+116    	; 0x2e6 <malloc+0x128>
 272:	20 91 0c 01 	lds	r18, 0x010C
 276:	30 91 0d 01 	lds	r19, 0x010D
 27a:	23 2b       	or	r18, r19
 27c:	41 f4       	brne	.+16     	; 0x28e <malloc+0xd0>
 27e:	20 91 02 01 	lds	r18, 0x0102
 282:	30 91 03 01 	lds	r19, 0x0103
 286:	30 93 0d 01 	sts	0x010D, r19
 28a:	20 93 0c 01 	sts	0x010C, r18
 28e:	20 91 00 01 	lds	r18, 0x0100
 292:	30 91 01 01 	lds	r19, 0x0101
 296:	21 15       	cp	r18, r1
 298:	31 05       	cpc	r19, r1
 29a:	41 f4       	brne	.+16     	; 0x2ac <malloc+0xee>
 29c:	2d b7       	in	r18, 0x3d	; 61
 29e:	3e b7       	in	r19, 0x3e	; 62
 2a0:	40 91 04 01 	lds	r20, 0x0104
 2a4:	50 91 05 01 	lds	r21, 0x0105
 2a8:	24 1b       	sub	r18, r20
 2aa:	35 0b       	sbc	r19, r21
 2ac:	e0 91 0c 01 	lds	r30, 0x010C
 2b0:	f0 91 0d 01 	lds	r31, 0x010D
 2b4:	e2 17       	cp	r30, r18
 2b6:	f3 07       	cpc	r31, r19
 2b8:	a0 f4       	brcc	.+40     	; 0x2e2 <malloc+0x124>
 2ba:	2e 1b       	sub	r18, r30
 2bc:	3f 0b       	sbc	r19, r31
 2be:	28 17       	cp	r18, r24
 2c0:	39 07       	cpc	r19, r25
 2c2:	78 f0       	brcs	.+30     	; 0x2e2 <malloc+0x124>
 2c4:	ac 01       	movw	r20, r24
 2c6:	4e 5f       	subi	r20, 0xFE	; 254
 2c8:	5f 4f       	sbci	r21, 0xFF	; 255
 2ca:	24 17       	cp	r18, r20
 2cc:	35 07       	cpc	r19, r21
 2ce:	48 f0       	brcs	.+18     	; 0x2e2 <malloc+0x124>
 2d0:	4e 0f       	add	r20, r30
 2d2:	5f 1f       	adc	r21, r31
 2d4:	50 93 0d 01 	sts	0x010D, r21
 2d8:	40 93 0c 01 	sts	0x010C, r20
 2dc:	81 93       	st	Z+, r24
 2de:	91 93       	st	Z+, r25
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <malloc+0x128>
 2e2:	e0 e0       	ldi	r30, 0x00	; 0
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	cf 01       	movw	r24, r30
 2e8:	df 91       	pop	r29
 2ea:	cf 91       	pop	r28
 2ec:	08 95       	ret

000002ee <free>:
 2ee:	cf 93       	push	r28
 2f0:	df 93       	push	r29
 2f2:	00 97       	sbiw	r24, 0x00	; 0
 2f4:	09 f4       	brne	.+2      	; 0x2f8 <free+0xa>
 2f6:	87 c0       	rjmp	.+270    	; 0x406 <free+0x118>
 2f8:	fc 01       	movw	r30, r24
 2fa:	32 97       	sbiw	r30, 0x02	; 2
 2fc:	13 82       	std	Z+3, r1	; 0x03
 2fe:	12 82       	std	Z+2, r1	; 0x02
 300:	c0 91 0e 01 	lds	r28, 0x010E
 304:	d0 91 0f 01 	lds	r29, 0x010F
 308:	20 97       	sbiw	r28, 0x00	; 0
 30a:	81 f4       	brne	.+32     	; 0x32c <free+0x3e>
 30c:	20 81       	ld	r18, Z
 30e:	31 81       	ldd	r19, Z+1	; 0x01
 310:	28 0f       	add	r18, r24
 312:	39 1f       	adc	r19, r25
 314:	80 91 0c 01 	lds	r24, 0x010C
 318:	90 91 0d 01 	lds	r25, 0x010D
 31c:	82 17       	cp	r24, r18
 31e:	93 07       	cpc	r25, r19
 320:	79 f5       	brne	.+94     	; 0x380 <free+0x92>
 322:	f0 93 0d 01 	sts	0x010D, r31
 326:	e0 93 0c 01 	sts	0x010C, r30
 32a:	6d c0       	rjmp	.+218    	; 0x406 <free+0x118>
 32c:	de 01       	movw	r26, r28
 32e:	20 e0       	ldi	r18, 0x00	; 0
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	ae 17       	cp	r26, r30
 334:	bf 07       	cpc	r27, r31
 336:	50 f4       	brcc	.+20     	; 0x34c <free+0x5e>
 338:	12 96       	adiw	r26, 0x02	; 2
 33a:	4d 91       	ld	r20, X+
 33c:	5c 91       	ld	r21, X
 33e:	13 97       	sbiw	r26, 0x03	; 3
 340:	9d 01       	movw	r18, r26
 342:	41 15       	cp	r20, r1
 344:	51 05       	cpc	r21, r1
 346:	09 f1       	breq	.+66     	; 0x38a <free+0x9c>
 348:	da 01       	movw	r26, r20
 34a:	f3 cf       	rjmp	.-26     	; 0x332 <free+0x44>
 34c:	b3 83       	std	Z+3, r27	; 0x03
 34e:	a2 83       	std	Z+2, r26	; 0x02
 350:	40 81       	ld	r20, Z
 352:	51 81       	ldd	r21, Z+1	; 0x01
 354:	84 0f       	add	r24, r20
 356:	95 1f       	adc	r25, r21
 358:	8a 17       	cp	r24, r26
 35a:	9b 07       	cpc	r25, r27
 35c:	71 f4       	brne	.+28     	; 0x37a <free+0x8c>
 35e:	8d 91       	ld	r24, X+
 360:	9c 91       	ld	r25, X
 362:	11 97       	sbiw	r26, 0x01	; 1
 364:	84 0f       	add	r24, r20
 366:	95 1f       	adc	r25, r21
 368:	02 96       	adiw	r24, 0x02	; 2
 36a:	91 83       	std	Z+1, r25	; 0x01
 36c:	80 83       	st	Z, r24
 36e:	12 96       	adiw	r26, 0x02	; 2
 370:	8d 91       	ld	r24, X+
 372:	9c 91       	ld	r25, X
 374:	13 97       	sbiw	r26, 0x03	; 3
 376:	93 83       	std	Z+3, r25	; 0x03
 378:	82 83       	std	Z+2, r24	; 0x02
 37a:	21 15       	cp	r18, r1
 37c:	31 05       	cpc	r19, r1
 37e:	29 f4       	brne	.+10     	; 0x38a <free+0x9c>
 380:	f0 93 0f 01 	sts	0x010F, r31
 384:	e0 93 0e 01 	sts	0x010E, r30
 388:	3e c0       	rjmp	.+124    	; 0x406 <free+0x118>
 38a:	d9 01       	movw	r26, r18
 38c:	13 96       	adiw	r26, 0x03	; 3
 38e:	fc 93       	st	X, r31
 390:	ee 93       	st	-X, r30
 392:	12 97       	sbiw	r26, 0x02	; 2
 394:	4d 91       	ld	r20, X+
 396:	5d 91       	ld	r21, X+
 398:	a4 0f       	add	r26, r20
 39a:	b5 1f       	adc	r27, r21
 39c:	ea 17       	cp	r30, r26
 39e:	fb 07       	cpc	r31, r27
 3a0:	79 f4       	brne	.+30     	; 0x3c0 <free+0xd2>
 3a2:	80 81       	ld	r24, Z
 3a4:	91 81       	ldd	r25, Z+1	; 0x01
 3a6:	84 0f       	add	r24, r20
 3a8:	95 1f       	adc	r25, r21
 3aa:	02 96       	adiw	r24, 0x02	; 2
 3ac:	d9 01       	movw	r26, r18
 3ae:	11 96       	adiw	r26, 0x01	; 1
 3b0:	9c 93       	st	X, r25
 3b2:	8e 93       	st	-X, r24
 3b4:	82 81       	ldd	r24, Z+2	; 0x02
 3b6:	93 81       	ldd	r25, Z+3	; 0x03
 3b8:	13 96       	adiw	r26, 0x03	; 3
 3ba:	9c 93       	st	X, r25
 3bc:	8e 93       	st	-X, r24
 3be:	12 97       	sbiw	r26, 0x02	; 2
 3c0:	e0 e0       	ldi	r30, 0x00	; 0
 3c2:	f0 e0       	ldi	r31, 0x00	; 0
 3c4:	8a 81       	ldd	r24, Y+2	; 0x02
 3c6:	9b 81       	ldd	r25, Y+3	; 0x03
 3c8:	00 97       	sbiw	r24, 0x00	; 0
 3ca:	19 f0       	breq	.+6      	; 0x3d2 <free+0xe4>
 3cc:	fe 01       	movw	r30, r28
 3ce:	ec 01       	movw	r28, r24
 3d0:	f9 cf       	rjmp	.-14     	; 0x3c4 <free+0xd6>
 3d2:	ce 01       	movw	r24, r28
 3d4:	02 96       	adiw	r24, 0x02	; 2
 3d6:	28 81       	ld	r18, Y
 3d8:	39 81       	ldd	r19, Y+1	; 0x01
 3da:	82 0f       	add	r24, r18
 3dc:	93 1f       	adc	r25, r19
 3de:	20 91 0c 01 	lds	r18, 0x010C
 3e2:	30 91 0d 01 	lds	r19, 0x010D
 3e6:	28 17       	cp	r18, r24
 3e8:	39 07       	cpc	r19, r25
 3ea:	69 f4       	brne	.+26     	; 0x406 <free+0x118>
 3ec:	30 97       	sbiw	r30, 0x00	; 0
 3ee:	29 f4       	brne	.+10     	; 0x3fa <free+0x10c>
 3f0:	10 92 0f 01 	sts	0x010F, r1
 3f4:	10 92 0e 01 	sts	0x010E, r1
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <free+0x110>
 3fa:	13 82       	std	Z+3, r1	; 0x03
 3fc:	12 82       	std	Z+2, r1	; 0x02
 3fe:	d0 93 0d 01 	sts	0x010D, r29
 402:	c0 93 0c 01 	sts	0x010C, r28
 406:	df 91       	pop	r29
 408:	cf 91       	pop	r28
 40a:	08 95       	ret

0000040c <memset>:
 40c:	dc 01       	movw	r26, r24
 40e:	01 c0       	rjmp	.+2      	; 0x412 <memset+0x6>
 410:	6d 93       	st	X+, r22
 412:	41 50       	subi	r20, 0x01	; 1
 414:	50 40       	sbci	r21, 0x00	; 0
 416:	e0 f7       	brcc	.-8      	; 0x410 <memset+0x4>
 418:	08 95       	ret

0000041a <_exit>:
 41a:	f8 94       	cli

0000041c <__stop_program>:
 41c:	ff cf       	rjmp	.-2      	; 0x41c <__stop_program>
