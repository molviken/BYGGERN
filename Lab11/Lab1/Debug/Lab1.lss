
Lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000132  00800100  00001350  000013e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001350  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000037  00800232  00800232  00001516  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001516  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000260  00000000  00000000  00001572  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000244d  00000000  00000000  000017d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ccb  00000000  00000000  00003c1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c17  00000000  00000000  000048ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000051c  00000000  00000000  00005504  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000067d  00000000  00000000  00005a20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000eb6  00000000  00000000  0000609d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000200  00000000  00000000  00006f53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <puts+0x42>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e0 e5       	ldi	r30, 0x50	; 80
     37c:	f3 e1       	ldi	r31, 0x13	; 19
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a2 33       	cpi	r26, 0x32	; 50
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	a2 e3       	ldi	r26, 0x32	; 50
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a9 36       	cpi	r26, 0x69	; 105
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 1f 02 	call	0x43e	; 0x43e <main>
     39e:	0c 94 a6 09 	jmp	0x134c	; 0x134c <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_init>:
#include <string.h>
#include "uart.h"
#include <avr/io.h>
#include <util/delay.h>
void adc_init(void){
	set_bit(MCUCR,SRE);
     3a6:	85 b7       	in	r24, 0x35	; 53
     3a8:	80 68       	ori	r24, 0x80	; 128
     3aa:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR,XMM2);
     3ac:	80 b7       	in	r24, 0x30	; 48
     3ae:	80 62       	ori	r24, 0x20	; 32
     3b0:	80 bf       	out	0x30, r24	; 48
	clear_bit(DDRE,DDE0);
     3b2:	30 98       	cbi	0x06, 0	; 6
     3b4:	08 95       	ret

000003b6 <adc_read>:
}

uint8_t adc_read(uint8_t channel){
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
     3ba:	1f 92       	push	r1
     3bc:	cd b7       	in	r28, 0x3d	; 61
     3be:	de b7       	in	r29, 0x3e	; 62
	
	volatile char* adc_adr = (char *) 0x1400;
	adc_adr[0] = channel;
     3c0:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3c4:	92 e4       	ldi	r25, 0x42	; 66
     3c6:	9a 95       	dec	r25
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <adc_read+0x10>
     3ca:	00 c0       	rjmp	.+0      	; 0x3cc <adc_read+0x16>
	_delay_us(200);
	volatile uint8_t retreived_value = adc_adr[channel];
     3cc:	e8 2f       	mov	r30, r24
     3ce:	f0 e0       	ldi	r31, 0x00	; 0
     3d0:	fc 5e       	subi	r31, 0xEC	; 236
     3d2:	80 81       	ld	r24, Z
     3d4:	89 83       	std	Y+1, r24	; 0x01
	return retreived_value;
     3d6:	89 81       	ldd	r24, Y+1	; 0x01
	
}
     3d8:	0f 90       	pop	r0
     3da:	df 91       	pop	r29
     3dc:	cf 91       	pop	r28
     3de:	08 95       	ret

000003e0 <CAN_init>:
#include "MCPkontroll.h"

uint8_t rx_flag = 0;

void CAN_init(){
	MCP_init();
     3e0:	0e 94 82 02 	call	0x504	; 0x504 <MCP_init>
	// Turn mask/filters off
	MCP_bit_mod(MCP_RXB0CTRL, 0b01100100, 0xFF);
     3e4:	4f ef       	ldi	r20, 0xFF	; 255
     3e6:	64 e6       	ldi	r22, 0x64	; 100
     3e8:	80 e6       	ldi	r24, 0x60	; 96
     3ea:	0e 94 51 02 	call	0x4a2	; 0x4a2 <MCP_bit_mod>
	
	// Set LoopBack mode on
	MCP_bit_mod(MCP_CANCTRL, MODE_MASK, MODE_NORMAL); // MCP_CANCTRL = MODE_LOOPBACK;
     3ee:	40 e0       	ldi	r20, 0x00	; 0
     3f0:	60 ee       	ldi	r22, 0xE0	; 224
     3f2:	8f e0       	ldi	r24, 0x0F	; 15
     3f4:	0e 94 51 02 	call	0x4a2	; 0x4a2 <MCP_bit_mod>
	
	// Enable interrupt when a valid message has been received
	MCP_bit_mod(MCP_CANINTE, MCP_RX0IF, 1);
     3f8:	41 e0       	ldi	r20, 0x01	; 1
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	8b e2       	ldi	r24, 0x2B	; 43
     3fe:	0e 94 51 02 	call	0x4a2	; 0x4a2 <MCP_bit_mod>
	MCP_bit_mod(MCP_CANINTE, MCP_TX0IF, 1);
     402:	41 e0       	ldi	r20, 0x01	; 1
     404:	64 e0       	ldi	r22, 0x04	; 4
     406:	8b e2       	ldi	r24, 0x2B	; 43
     408:	0e 94 51 02 	call	0x4a2	; 0x4a2 <MCP_bit_mod>
	if ((MCP_read(MCP_CANSTAT) & MODE_MASK) != MODE_NORMAL)
     40c:	8e e0       	ldi	r24, 0x0E	; 14
     40e:	0e 94 3d 02 	call	0x47a	; 0x47a <MCP_read>
	{
		//printf("NOT in NORMAL mode!\n");
	}
	
	char temp = MCP_read(MCP_CANCTRL);
     412:	8f e0       	ldi	r24, 0x0F	; 15
     414:	0e 94 3d 02 	call	0x47a	; 0x47a <MCP_read>
     418:	08 95       	ret

0000041a <read_joystick_position>:
#define loop_until_bit_is_clear( reg, bit ) while( test_bit( reg, bit ) )
#include "joystick.h"
#include "adc.h"
#include <stdbool.h>
struct Menu_position pos;
struct Joystick read_joystick_position(uint8_t channel_one, uint8_t channel_two){
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
     41e:	d8 2f       	mov	r29, r24
     420:	86 2f       	mov	r24, r22
	int x_pos = (adc_read(channel_two));//-134)*0.8264462809917355;
     422:	0e 94 db 01 	call	0x3b6	; 0x3b6 <adc_read>
     426:	c8 2f       	mov	r28, r24
	int y_pos = (adc_read(channel_one));//-133)*0.819672131147541;
     428:	8d 2f       	mov	r24, r29
     42a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <adc_read>
     42e:	28 2f       	mov	r18, r24
	struct Joystick global_joystick;
	global_joystick.x_pos = x_pos;
	global_joystick.y_pos = y_pos;
	//printf("X: %i, Y: %i \n", x_pos,y_pos);

	return global_joystick;
     430:	6c 2f       	mov	r22, r28
     432:	70 e0       	ldi	r23, 0x00	; 0
     434:	82 2f       	mov	r24, r18
     436:	90 e0       	ldi	r25, 0x00	; 0
}
     438:	df 91       	pop	r29
     43a:	cf 91       	pop	r28
     43c:	08 95       	ret

0000043e <main>:
volatile char* adc_adresse = 0x1400;
volatile char* ram_adresse = 0x1800;
int main(void)
{
	
	DDRB = 0b00000000;
     43e:	17 ba       	out	0x17, r1	; 23

	EXT_MEM_Init();
     440:	0e 94 0f 05 	call	0xa1e	; 0xa1e <EXT_MEM_Init>
	USART_Init(31);				
     444:	8f e1       	ldi	r24, 0x1F	; 31
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	0e 94 16 05 	call	0xa2c	; 0xa2c <USART_Init>
	oled_init();
     44c:	0e 94 44 04 	call	0x888	; 0x888 <oled_init>
	oled_reset();
     450:	0e 94 7e 04 	call	0x8fc	; 0x8fc <oled_reset>
	adc_init();
     454:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_init>
	CAN_init();
     458:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <CAN_init>
	menu_system();
     45c:	0e 94 e5 03 	call	0x7ca	; 0x7ca <menu_system>
	menu_initialize();
     460:	0e 94 31 04 	call	0x862	; 0x862 <menu_initialize>
	printf("Init er good\n");
     464:	86 e0       	ldi	r24, 0x06	; 6
     466:	91 e0       	ldi	r25, 0x01	; 1
     468:	0e 94 80 05 	call	0xb00	; 0xb00 <puts>
	struct CAN_message usb_board;
	usb_board.id = 3;
	usb_board.length = 5;
	while(1)
    {
		menu_navigate();
     46c:	0e 94 72 03 	call	0x6e4	; 0x6e4 <menu_navigate>
     470:	fd cf       	rjmp	.-6      	; 0x46c <main+0x2e>

00000472 <select_CAN>:
#include "MCP2515.h"
#define DD_SS PB4


void select_CAN(void){
	clear_bit(PORTB, DD_SS);
     472:	c4 98       	cbi	0x18, 4	; 24
     474:	08 95       	ret

00000476 <deselect_CAN>:
}

void deselect_CAN(void){
	set_bit(PORTB, DD_SS);
     476:	c4 9a       	sbi	0x18, 4	; 24
     478:	08 95       	ret

0000047a <MCP_read>:
	SPI_MasterTransmit(address);
	SPI_MasterTransmit(data);
	deselect_CAN();
}

uint8_t MCP_read(uint8_t address){
     47a:	cf 93       	push	r28
     47c:	c8 2f       	mov	r28, r24
	uint8_t temp;
	
	select_CAN();
     47e:	0e 94 39 02 	call	0x472	; 0x472 <select_CAN>
	
	SPI_MasterTransmit(MCP_READ);
     482:	83 e0       	ldi	r24, 0x03	; 3
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	0e 94 fe 04 	call	0x9fc	; 0x9fc <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
     48a:	8c 2f       	mov	r24, r28
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	0e 94 fe 04 	call	0x9fc	; 0x9fc <SPI_MasterTransmit>
	temp = SPI_MasterReceive();
     492:	0e 94 02 05 	call	0xa04	; 0xa04 <SPI_MasterReceive>
     496:	c8 2f       	mov	r28, r24
	deselect_CAN();
     498:	0e 94 3b 02 	call	0x476	; 0x476 <deselect_CAN>
	// printf("I MCP_read, temp = %x, address = %x \n", temp, address);
	return temp;
}
     49c:	8c 2f       	mov	r24, r28
     49e:	cf 91       	pop	r28
     4a0:	08 95       	ret

000004a2 <MCP_bit_mod>:
	SPI_MasterTransmit(MCP_READ_STATUS);
	deselect_CAN();
	return SPI_MasterReceive();
}

void MCP_bit_mod(uint8_t address, uint8_t m_byte, uint8_t d_byte){
     4a2:	1f 93       	push	r17
     4a4:	cf 93       	push	r28
     4a6:	df 93       	push	r29
     4a8:	18 2f       	mov	r17, r24
     4aa:	d6 2f       	mov	r29, r22
     4ac:	c4 2f       	mov	r28, r20
	select_CAN();
     4ae:	0e 94 39 02 	call	0x472	; 0x472 <select_CAN>
	SPI_MasterTransmit(MCP_BITMOD);
     4b2:	85 e0       	ldi	r24, 0x05	; 5
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	0e 94 fe 04 	call	0x9fc	; 0x9fc <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
     4ba:	81 2f       	mov	r24, r17
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	0e 94 fe 04 	call	0x9fc	; 0x9fc <SPI_MasterTransmit>
	SPI_MasterTransmit(m_byte);
     4c2:	8d 2f       	mov	r24, r29
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	0e 94 fe 04 	call	0x9fc	; 0x9fc <SPI_MasterTransmit>
	SPI_MasterTransmit(d_byte);
     4ca:	8c 2f       	mov	r24, r28
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	0e 94 fe 04 	call	0x9fc	; 0x9fc <SPI_MasterTransmit>
	deselect_CAN();
     4d2:	0e 94 3b 02 	call	0x476	; 0x476 <deselect_CAN>
}
     4d6:	df 91       	pop	r29
     4d8:	cf 91       	pop	r28
     4da:	1f 91       	pop	r17
     4dc:	08 95       	ret

000004de <MCP_reset>:

void MCP_reset(){
	select_CAN();
     4de:	0e 94 39 02 	call	0x472	; 0x472 <select_CAN>
	SPI_MasterTransmit(MCP_RESET);
     4e2:	80 ec       	ldi	r24, 0xC0	; 192
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	0e 94 fe 04 	call	0x9fc	; 0x9fc <SPI_MasterTransmit>
	deselect_CAN();
     4ea:	0e 94 3b 02 	call	0x476	; 0x476 <deselect_CAN>
	uint8_t mode = MCP_read(MCP_CANSTAT);
     4ee:	8e e0       	ldi	r24, 0x0E	; 14
     4f0:	0e 94 3d 02 	call	0x47a	; 0x47a <MCP_read>
	if ((mode&MODE_MASK)!=MODE_CONFIG)
     4f4:	80 7e       	andi	r24, 0xE0	; 224
     4f6:	80 38       	cpi	r24, 0x80	; 128
     4f8:	21 f0       	breq	.+8      	; 0x502 <__stack+0x3>
	{
		printf("Not in config after reset\n");
     4fa:	83 e1       	ldi	r24, 0x13	; 19
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 80 05 	call	0xb00	; 0xb00 <puts>
     502:	08 95       	ret

00000504 <MCP_init>:
void deselect_CAN(void){
	set_bit(PORTB, DD_SS);
}

void MCP_init(){
	SPI_MasterInit();
     504:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <SPI_MasterInit>
	MCP_reset();
     508:	0e 94 6f 02 	call	0x4de	; 0x4de <MCP_reset>
     50c:	08 95       	ret

0000050e <move_hashtag>:
#include "joystick.h"
struct menu_element main_menu[5];
struct menu_element submain_menu1[5];
struct Hashtag hashtag;

void move_hashtag(int n, bool dir){
     50e:	1f 93       	push	r17
     510:	cf 93       	push	r28
     512:	df 93       	push	r29
     514:	ec 01       	movw	r28, r24
     516:	16 2f       	mov	r17, r22
	if(n<5 && n!= 0 && dir) {
     518:	85 30       	cpi	r24, 0x05	; 5
     51a:	91 05       	cpc	r25, r1
     51c:	7c f5       	brge	.+94     	; 0x57c <move_hashtag+0x6e>
     51e:	00 97       	sbiw	r24, 0x00	; 0
     520:	69 f1       	breq	.+90     	; 0x57c <move_hashtag+0x6e>
     522:	66 23       	and	r22, r22
     524:	09 f4       	brne	.+2      	; 0x528 <move_hashtag+0x1a>
     526:	8d c0       	rjmp	.+282    	; 0x642 <move_hashtag+0x134>
		
		oled_print_letter('#',main_menu[n].page, 0x00, 0x08);
     528:	fc 01       	movw	r30, r24
     52a:	ee 0f       	add	r30, r30
     52c:	ff 1f       	adc	r31, r31
     52e:	ee 0f       	add	r30, r30
     530:	ff 1f       	adc	r31, r31
     532:	e5 5b       	subi	r30, 0xB5	; 181
     534:	fd 4f       	sbci	r31, 0xFD	; 253
     536:	28 e0       	ldi	r18, 0x08	; 8
     538:	40 e0       	ldi	r20, 0x00	; 0
     53a:	63 81       	ldd	r22, Z+3	; 0x03
     53c:	83 e2       	ldi	r24, 0x23	; 35
     53e:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
		oled_print_letter(' ',main_menu[n-1].page, 0x00,0x08);
     542:	fe 01       	movw	r30, r28
     544:	ee 0f       	add	r30, r30
     546:	ff 1f       	adc	r31, r31
     548:	ee 0f       	add	r30, r30
     54a:	ff 1f       	adc	r31, r31
     54c:	e9 5b       	subi	r30, 0xB9	; 185
     54e:	fd 4f       	sbci	r31, 0xFD	; 253
     550:	28 e0       	ldi	r18, 0x08	; 8
     552:	40 e0       	ldi	r20, 0x00	; 0
     554:	63 81       	ldd	r22, Z+3	; 0x03
     556:	80 e2       	ldi	r24, 0x20	; 32
     558:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
		oled_print_letter('#',main_menu[0].page, 0x00, 0x08);
		oled_print_letter(' ',main_menu[n-1].page, 0x00,0x08);
		//printf("inni else\n");
		hashtag.chosen = 0;
	}
	printf("n: %i \n",n);
     55c:	df 93       	push	r29
     55e:	cf 93       	push	r28
     560:	8d e2       	ldi	r24, 0x2D	; 45
     562:	91 e0       	ldi	r25, 0x01	; 1
     564:	9f 93       	push	r25
     566:	8f 93       	push	r24
     568:	0e 94 6c 05 	call	0xad8	; 0xad8 <printf>
	if(n<5 && n !=-1 && !dir) {
     56c:	0f 90       	pop	r0
     56e:	0f 90       	pop	r0
     570:	0f 90       	pop	r0
     572:	0f 90       	pop	r0
     574:	21 96       	adiw	r28, 0x01	; 1
     576:	09 f0       	breq	.+2      	; 0x57a <move_hashtag+0x6c>
     578:	60 c0       	rjmp	.+192    	; 0x63a <move_hashtag+0x12c>
     57a:	49 c0       	rjmp	.+146    	; 0x60e <move_hashtag+0x100>
	if(n<5 && n!= 0 && dir) {
		
		oled_print_letter('#',main_menu[n].page, 0x00, 0x08);
		oled_print_letter(' ',main_menu[n-1].page, 0x00,0x08);
	}
	else if (dir){
     57c:	11 23       	and	r17, r17
     57e:	c1 f0       	breq	.+48     	; 0x5b0 <move_hashtag+0xa2>
		oled_print_letter('#',main_menu[0].page, 0x00, 0x08);
     580:	28 e0       	ldi	r18, 0x08	; 8
     582:	40 e0       	ldi	r20, 0x00	; 0
     584:	60 91 4e 02 	lds	r22, 0x024E
     588:	83 e2       	ldi	r24, 0x23	; 35
     58a:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
		oled_print_letter(' ',main_menu[n-1].page, 0x00,0x08);
     58e:	fe 01       	movw	r30, r28
     590:	ee 0f       	add	r30, r30
     592:	ff 1f       	adc	r31, r31
     594:	ee 0f       	add	r30, r30
     596:	ff 1f       	adc	r31, r31
     598:	e9 5b       	subi	r30, 0xB9	; 185
     59a:	fd 4f       	sbci	r31, 0xFD	; 253
     59c:	28 e0       	ldi	r18, 0x08	; 8
     59e:	40 e0       	ldi	r20, 0x00	; 0
     5a0:	63 81       	ldd	r22, Z+3	; 0x03
     5a2:	80 e2       	ldi	r24, 0x20	; 32
     5a4:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
		//printf("inni else\n");
		hashtag.chosen = 0;
     5a8:	10 92 48 02 	sts	0x0248, r1
     5ac:	10 92 47 02 	sts	0x0247, r1
	}
	printf("n: %i \n",n);
     5b0:	df 93       	push	r29
     5b2:	cf 93       	push	r28
     5b4:	8d e2       	ldi	r24, 0x2D	; 45
     5b6:	91 e0       	ldi	r25, 0x01	; 1
     5b8:	9f 93       	push	r25
     5ba:	8f 93       	push	r24
     5bc:	0e 94 6c 05 	call	0xad8	; 0xad8 <printf>
	if(n<5 && n !=-1 && !dir) {
     5c0:	0f 90       	pop	r0
     5c2:	0f 90       	pop	r0
     5c4:	0f 90       	pop	r0
     5c6:	0f 90       	pop	r0
     5c8:	c5 30       	cpi	r28, 0x05	; 5
     5ca:	d1 05       	cpc	r29, r1
     5cc:	04 f5       	brge	.+64     	; 0x60e <move_hashtag+0x100>
     5ce:	cf 3f       	cpi	r28, 0xFF	; 255
     5d0:	8f ef       	ldi	r24, 0xFF	; 255
     5d2:	d8 07       	cpc	r29, r24
     5d4:	e1 f0       	breq	.+56     	; 0x60e <move_hashtag+0x100>
     5d6:	11 11       	cpse	r17, r1
     5d8:	30 c0       	rjmp	.+96     	; 0x63a <move_hashtag+0x12c>
		oled_print_letter('#',main_menu[n].page, 0x00, 0x08);
     5da:	fe 01       	movw	r30, r28
     5dc:	ee 0f       	add	r30, r30
     5de:	ff 1f       	adc	r31, r31
     5e0:	ee 0f       	add	r30, r30
     5e2:	ff 1f       	adc	r31, r31
     5e4:	e5 5b       	subi	r30, 0xB5	; 181
     5e6:	fd 4f       	sbci	r31, 0xFD	; 253
     5e8:	28 e0       	ldi	r18, 0x08	; 8
     5ea:	40 e0       	ldi	r20, 0x00	; 0
     5ec:	63 81       	ldd	r22, Z+3	; 0x03
     5ee:	83 e2       	ldi	r24, 0x23	; 35
     5f0:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
		oled_print_letter(' ',main_menu[n+1].page, 0x00,0x08);
     5f4:	cc 0f       	add	r28, r28
     5f6:	dd 1f       	adc	r29, r29
     5f8:	cc 0f       	add	r28, r28
     5fa:	dd 1f       	adc	r29, r29
     5fc:	c1 5b       	subi	r28, 0xB1	; 177
     5fe:	dd 4f       	sbci	r29, 0xFD	; 253
     600:	28 e0       	ldi	r18, 0x08	; 8
     602:	40 e0       	ldi	r20, 0x00	; 0
     604:	6b 81       	ldd	r22, Y+3	; 0x03
     606:	80 e2       	ldi	r24, 0x20	; 32
     608:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
     60c:	16 c0       	rjmp	.+44     	; 0x63a <move_hashtag+0x12c>
	}
	else if (!dir){
     60e:	11 11       	cpse	r17, r1
     610:	14 c0       	rjmp	.+40     	; 0x63a <move_hashtag+0x12c>
		oled_print_letter('#',main_menu[4].page, 0x00, 0x08);
     612:	28 e0       	ldi	r18, 0x08	; 8
     614:	40 e0       	ldi	r20, 0x00	; 0
     616:	60 91 5e 02 	lds	r22, 0x025E
     61a:	83 e2       	ldi	r24, 0x23	; 35
     61c:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
		oled_print_letter(' ',main_menu[0].page, 0x00,0x08);
     620:	28 e0       	ldi	r18, 0x08	; 8
     622:	40 e0       	ldi	r20, 0x00	; 0
     624:	60 91 4e 02 	lds	r22, 0x024E
     628:	80 e2       	ldi	r24, 0x20	; 32
     62a:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
		hashtag.chosen = 8;
     62e:	88 e0       	ldi	r24, 0x08	; 8
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	90 93 48 02 	sts	0x0248, r25
     636:	80 93 47 02 	sts	0x0247, r24
	}
	//printf("n: %i		page: %d \n",n, main_menu[n].page);
	hashtag.moveY = true;
     63a:	81 e0       	ldi	r24, 0x01	; 1
     63c:	80 93 49 02 	sts	0x0249, r24
     640:	0d c0       	rjmp	.+26     	; 0x65c <move_hashtag+0x14e>
		oled_print_letter('#',main_menu[0].page, 0x00, 0x08);
		oled_print_letter(' ',main_menu[n-1].page, 0x00,0x08);
		//printf("inni else\n");
		hashtag.chosen = 0;
	}
	printf("n: %i \n",n);
     642:	df 93       	push	r29
     644:	cf 93       	push	r28
     646:	8d e2       	ldi	r24, 0x2D	; 45
     648:	91 e0       	ldi	r25, 0x01	; 1
     64a:	9f 93       	push	r25
     64c:	8f 93       	push	r24
     64e:	0e 94 6c 05 	call	0xad8	; 0xad8 <printf>
     652:	0f 90       	pop	r0
     654:	0f 90       	pop	r0
     656:	0f 90       	pop	r0
     658:	0f 90       	pop	r0
     65a:	b9 cf       	rjmp	.-142    	; 0x5ce <move_hashtag+0xc0>
		oled_print_letter(' ',main_menu[0].page, 0x00,0x08);
		hashtag.chosen = 8;
	}
	//printf("n: %i		page: %d \n",n, main_menu[n].page);
	hashtag.moveY = true;
}
     65c:	df 91       	pop	r29
     65e:	cf 91       	pop	r28
     660:	1f 91       	pop	r17
     662:	08 95       	ret

00000664 <menu_sub_folder>:
void menu_sub_folder(int *chosen){
	int temp = chosen;
	switch(temp){
     664:	84 30       	cpi	r24, 0x04	; 4
     666:	91 05       	cpc	r25, r1
     668:	b1 f0       	breq	.+44     	; 0x696 <menu_sub_folder+0x32>
     66a:	2c f4       	brge	.+10     	; 0x676 <menu_sub_folder+0x12>
     66c:	00 97       	sbiw	r24, 0x00	; 0
     66e:	49 f0       	breq	.+18     	; 0x682 <menu_sub_folder+0x1e>
     670:	02 97       	sbiw	r24, 0x02	; 2
     672:	61 f0       	breq	.+24     	; 0x68c <menu_sub_folder+0x28>
     674:	1f c0       	rjmp	.+62     	; 0x6b4 <menu_sub_folder+0x50>
     676:	86 30       	cpi	r24, 0x06	; 6
     678:	91 05       	cpc	r25, r1
     67a:	91 f0       	breq	.+36     	; 0x6a0 <menu_sub_folder+0x3c>
     67c:	08 97       	sbiw	r24, 0x08	; 8
     67e:	a9 f0       	breq	.+42     	; 0x6aa <menu_sub_folder+0x46>
     680:	19 c0       	rjmp	.+50     	; 0x6b4 <menu_sub_folder+0x50>
		case 0:
			oled_print("sub11,sub12,sub13,sub14,sub15");
     682:	85 e3       	ldi	r24, 0x35	; 53
     684:	91 e0       	ldi	r25, 0x01	; 1
     686:	0e 94 b3 04 	call	0x966	; 0x966 <oled_print>
			break;
     68a:	18 c0       	rjmp	.+48     	; 0x6bc <menu_sub_folder+0x58>
		case 2:
			oled_print("sub21,sub22,sub23,sub24,sub25");
     68c:	83 e5       	ldi	r24, 0x53	; 83
     68e:	91 e0       	ldi	r25, 0x01	; 1
     690:	0e 94 b3 04 	call	0x966	; 0x966 <oled_print>
			break;
     694:	13 c0       	rjmp	.+38     	; 0x6bc <menu_sub_folder+0x58>
		case 4:
			oled_print("sub31,sub32,sub33,sub34,sub35");
     696:	81 e7       	ldi	r24, 0x71	; 113
     698:	91 e0       	ldi	r25, 0x01	; 1
     69a:	0e 94 b3 04 	call	0x966	; 0x966 <oled_print>
			break;
     69e:	0e c0       	rjmp	.+28     	; 0x6bc <menu_sub_folder+0x58>
		case 6:
			oled_print("sub41,sub42,sub43,sub44,sub45");
     6a0:	8f e8       	ldi	r24, 0x8F	; 143
     6a2:	91 e0       	ldi	r25, 0x01	; 1
     6a4:	0e 94 b3 04 	call	0x966	; 0x966 <oled_print>
			break;
     6a8:	09 c0       	rjmp	.+18     	; 0x6bc <menu_sub_folder+0x58>
		case 8:
			oled_print("sub51,sub52,sub53,sub54,sub55");
     6aa:	8d ea       	ldi	r24, 0xAD	; 173
     6ac:	91 e0       	ldi	r25, 0x01	; 1
     6ae:	0e 94 b3 04 	call	0x966	; 0x966 <oled_print>
			break;
     6b2:	04 c0       	rjmp	.+8      	; 0x6bc <menu_sub_folder+0x58>
		default:
			printf("Invalid option\n");
     6b4:	8b ec       	ldi	r24, 0xCB	; 203
     6b6:	91 e0       	ldi	r25, 0x01	; 1
     6b8:	0e 94 80 05 	call	0xb00	; 0xb00 <puts>
			break;
	}
	hashtag.moveX = true;
     6bc:	81 e0       	ldi	r24, 0x01	; 1
     6be:	80 93 4a 02 	sts	0x024A, r24
	oled_reset();
     6c2:	0e 94 7e 04 	call	0x8fc	; 0x8fc <oled_reset>
	printf("hmmm\n");
     6c6:	8a ed       	ldi	r24, 0xDA	; 218
     6c8:	91 e0       	ldi	r25, 0x01	; 1
     6ca:	0e 94 80 05 	call	0xb00	; 0xb00 <puts>
	oled_print_letter('#',0x02, 0x00, 0x08);
     6ce:	28 e0       	ldi	r18, 0x08	; 8
     6d0:	40 e0       	ldi	r20, 0x00	; 0
     6d2:	62 e0       	ldi	r22, 0x02	; 2
     6d4:	83 e2       	ldi	r24, 0x23	; 35
     6d6:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
	hashtag.chosen = 0;
     6da:	10 92 48 02 	sts	0x0248, r1
     6de:	10 92 47 02 	sts	0x0247, r1
     6e2:	08 95       	ret

000006e4 <menu_navigate>:
	
}
void menu_navigate(){
     6e4:	cf 92       	push	r12
     6e6:	df 92       	push	r13
     6e8:	ef 92       	push	r14
     6ea:	ff 92       	push	r15
     6ec:	0f 93       	push	r16
     6ee:	1f 93       	push	r17
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
	int temp;
	int y = read_joystick_position(channel1,channel2).y_pos;
     6f4:	65 e0       	ldi	r22, 0x05	; 5
     6f6:	84 e0       	ldi	r24, 0x04	; 4
     6f8:	0e 94 0d 02 	call	0x41a	; 0x41a <read_joystick_position>
     6fc:	6b 01       	movw	r12, r22
     6fe:	7c 01       	movw	r14, r24
     700:	e7 01       	movw	r28, r14
	int x = read_joystick_position(channel1,channel2).x_pos;
     702:	65 e0       	ldi	r22, 0x05	; 5
     704:	84 e0       	ldi	r24, 0x04	; 4
     706:	0e 94 0d 02 	call	0x41a	; 0x41a <read_joystick_position>
     70a:	8b 01       	movw	r16, r22
	if (y<20 && !hashtag.moveY){
     70c:	c4 31       	cpi	r28, 0x14	; 20
     70e:	d1 05       	cpc	r29, r1
     710:	c4 f4       	brge	.+48     	; 0x742 <menu_navigate+0x5e>
     712:	80 91 49 02 	lds	r24, 0x0249
     716:	81 11       	cpse	r24, r1
     718:	14 c0       	rjmp	.+40     	; 0x742 <menu_navigate+0x5e>
		hashtag.direction = true;
     71a:	81 e0       	ldi	r24, 0x01	; 1
     71c:	80 93 46 02 	sts	0x0246, r24
		hashtag.chosen+=1;
     720:	e7 e4       	ldi	r30, 0x47	; 71
     722:	f2 e0       	ldi	r31, 0x02	; 2
     724:	20 81       	ld	r18, Z
     726:	31 81       	ldd	r19, Z+1	; 0x01
     728:	2e 5f       	subi	r18, 0xFE	; 254
     72a:	3f 4f       	sbci	r19, 0xFF	; 255
     72c:	31 83       	std	Z+1, r19	; 0x01
     72e:	20 83       	st	Z, r18
		temp = hashtag.chosen;
		move_hashtag(temp/2,hashtag.direction);
     730:	c9 01       	movw	r24, r18
     732:	99 23       	and	r25, r25
     734:	0c f4       	brge	.+2      	; 0x738 <menu_navigate+0x54>
     736:	01 96       	adiw	r24, 0x01	; 1
     738:	61 e0       	ldi	r22, 0x01	; 1
     73a:	95 95       	asr	r25
     73c:	87 95       	ror	r24
     73e:	0e 94 87 02 	call	0x50e	; 0x50e <move_hashtag>
	}
	if(y>230 && !hashtag.moveY){
     742:	c7 3e       	cpi	r28, 0xE7	; 231
     744:	d1 05       	cpc	r29, r1
     746:	c4 f0       	brlt	.+48     	; 0x778 <menu_navigate+0x94>
     748:	80 91 49 02 	lds	r24, 0x0249
     74c:	81 11       	cpse	r24, r1
     74e:	14 c0       	rjmp	.+40     	; 0x778 <menu_navigate+0x94>
		hashtag.direction = false;
     750:	10 92 46 02 	sts	0x0246, r1
		hashtag.chosen-=1;
     754:	e7 e4       	ldi	r30, 0x47	; 71
     756:	f2 e0       	ldi	r31, 0x02	; 2
     758:	20 81       	ld	r18, Z
     75a:	31 81       	ldd	r19, Z+1	; 0x01
     75c:	22 50       	subi	r18, 0x02	; 2
     75e:	31 09       	sbc	r19, r1
     760:	31 83       	std	Z+1, r19	; 0x01
     762:	20 83       	st	Z, r18
		temp = hashtag.chosen;
		move_hashtag(temp/2, hashtag.direction);
     764:	c9 01       	movw	r24, r18
     766:	99 23       	and	r25, r25
     768:	0c f4       	brge	.+2      	; 0x76c <menu_navigate+0x88>
     76a:	01 96       	adiw	r24, 0x01	; 1
     76c:	60 e0       	ldi	r22, 0x00	; 0
     76e:	95 95       	asr	r25
     770:	87 95       	ror	r24
     772:	0e 94 87 02 	call	0x50e	; 0x50e <move_hashtag>
     776:	0a c0       	rjmp	.+20     	; 0x78c <menu_navigate+0xa8>
	}
	else if(y>100 && y<150 && hashtag.moveY){
     778:	c7 01       	movw	r24, r14
     77a:	85 56       	subi	r24, 0x65	; 101
     77c:	91 09       	sbc	r25, r1
     77e:	c1 97       	sbiw	r24, 0x31	; 49
     780:	28 f4       	brcc	.+10     	; 0x78c <menu_navigate+0xa8>
     782:	80 91 49 02 	lds	r24, 0x0249
     786:	81 11       	cpse	r24, r1
		hashtag.moveY = false;
     788:	10 92 49 02 	sts	0x0249, r1
	}
	if (x > 200 && !hashtag.moveX){
     78c:	09 3c       	cpi	r16, 0xC9	; 201
     78e:	11 05       	cpc	r17, r1
     790:	5c f0       	brlt	.+22     	; 0x7a8 <menu_navigate+0xc4>
     792:	80 91 4a 02 	lds	r24, 0x024A
     796:	81 11       	cpse	r24, r1
     798:	07 c0       	rjmp	.+14     	; 0x7a8 <menu_navigate+0xc4>
		menu_sub_folder(hashtag.chosen);
     79a:	80 91 47 02 	lds	r24, 0x0247
     79e:	90 91 48 02 	lds	r25, 0x0248
     7a2:	0e 94 32 03 	call	0x664	; 0x664 <menu_sub_folder>
     7a6:	08 c0       	rjmp	.+16     	; 0x7b8 <menu_navigate+0xd4>
	}
	else if (x<180 && hashtag.moveX){
     7a8:	04 3b       	cpi	r16, 0xB4	; 180
     7aa:	11 05       	cpc	r17, r1
     7ac:	2c f4       	brge	.+10     	; 0x7b8 <menu_navigate+0xd4>
     7ae:	80 91 4a 02 	lds	r24, 0x024A
     7b2:	81 11       	cpse	r24, r1
		hashtag.moveX = false;
     7b4:	10 92 4a 02 	sts	0x024A, r1
	}
}
     7b8:	df 91       	pop	r29
     7ba:	cf 91       	pop	r28
     7bc:	1f 91       	pop	r17
     7be:	0f 91       	pop	r16
     7c0:	ff 90       	pop	r15
     7c2:	ef 90       	pop	r14
     7c4:	df 90       	pop	r13
     7c6:	cf 90       	pop	r12
     7c8:	08 95       	ret

000007ca <menu_system>:

void menu_system(){
	uint8_t page = 0x02;
	main_menu[0].word = "ain1";
     7ca:	8f ed       	ldi	r24, 0xDF	; 223
     7cc:	91 e0       	ldi	r25, 0x01	; 1
     7ce:	90 93 4c 02 	sts	0x024C, r25
     7d2:	80 93 4b 02 	sts	0x024B, r24
	main_menu[1].word = "ain2 ";
     7d6:	8c ee       	ldi	r24, 0xEC	; 236
     7d8:	91 e0       	ldi	r25, 0x01	; 1
     7da:	90 93 50 02 	sts	0x0250, r25
     7de:	80 93 4f 02 	sts	0x024F, r24
	main_menu[2].word = "ain3 ";
     7e2:	83 ef       	ldi	r24, 0xF3	; 243
     7e4:	91 e0       	ldi	r25, 0x01	; 1
     7e6:	90 93 54 02 	sts	0x0254, r25
     7ea:	80 93 53 02 	sts	0x0253, r24
	main_menu[3].word = "ain4 ";
     7ee:	8a ef       	ldi	r24, 0xFA	; 250
     7f0:	91 e0       	ldi	r25, 0x01	; 1
     7f2:	90 93 58 02 	sts	0x0258, r25
     7f6:	80 93 57 02 	sts	0x0257, r24
	main_menu[4].word = "ain5 ";
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	92 e0       	ldi	r25, 0x02	; 2
     7fe:	90 93 5c 02 	sts	0x025C, r25
     802:	80 93 5b 02 	sts	0x025B, r24
	submain_menu1[0].word = "Main1 ";
     806:	84 ee       	ldi	r24, 0xE4	; 228
     808:	91 e0       	ldi	r25, 0x01	; 1
     80a:	90 93 33 02 	sts	0x0233, r25
     80e:	80 93 32 02 	sts	0x0232, r24
	submain_menu1[1].word = "Main2 ";
     812:	8b ee       	ldi	r24, 0xEB	; 235
     814:	91 e0       	ldi	r25, 0x01	; 1
     816:	90 93 37 02 	sts	0x0237, r25
     81a:	80 93 36 02 	sts	0x0236, r24
	submain_menu1[2].word = "Main3 ";
     81e:	82 ef       	ldi	r24, 0xF2	; 242
     820:	91 e0       	ldi	r25, 0x01	; 1
     822:	90 93 3b 02 	sts	0x023B, r25
     826:	80 93 3a 02 	sts	0x023A, r24
	submain_menu1[3].word = "Main4 ";
     82a:	89 ef       	ldi	r24, 0xF9	; 249
     82c:	91 e0       	ldi	r25, 0x01	; 1
     82e:	90 93 3f 02 	sts	0x023F, r25
     832:	80 93 3e 02 	sts	0x023E, r24
	submain_menu1[4].word = "Main5 ";
     836:	80 e0       	ldi	r24, 0x00	; 0
     838:	92 e0       	ldi	r25, 0x02	; 2
     83a:	90 93 43 02 	sts	0x0243, r25
     83e:	80 93 42 02 	sts	0x0242, r24
     842:	80 e0       	ldi	r24, 0x00	; 0
     844:	90 e0       	ldi	r25, 0x00	; 0
		hashtag.moveX = false;
	}
}

void menu_system(){
	uint8_t page = 0x02;
     846:	22 e0       	ldi	r18, 0x02	; 2
     848:	fc 01       	movw	r30, r24
     84a:	e5 5b       	subi	r30, 0xB5	; 181
     84c:	fd 4f       	sbci	r31, 0xFD	; 253
	submain_menu1[1].word = "Main2 ";
	submain_menu1[2].word = "Main3 ";
	submain_menu1[3].word = "Main4 ";
	submain_menu1[4].word = "Main5 ";
	for(int i = 0;i<5;i++){
		main_menu[i].page = page;
     84e:	23 83       	std	Z+3, r18	; 0x03
     850:	fc 01       	movw	r30, r24
     852:	ee 5c       	subi	r30, 0xCE	; 206
     854:	fd 4f       	sbci	r31, 0xFD	; 253
		submain_menu1[i].page = page;
     856:	23 83       	std	Z+3, r18	; 0x03
		page += 0x01;
     858:	2f 5f       	subi	r18, 0xFF	; 255
     85a:	04 96       	adiw	r24, 0x04	; 4
	submain_menu1[0].word = "Main1 ";
	submain_menu1[1].word = "Main2 ";
	submain_menu1[2].word = "Main3 ";
	submain_menu1[3].word = "Main4 ";
	submain_menu1[4].word = "Main5 ";
	for(int i = 0;i<5;i++){
     85c:	27 30       	cpi	r18, 0x07	; 7
     85e:	a1 f7       	brne	.-24     	; 0x848 <menu_system+0x7e>
		main_menu[i].page = page;
		submain_menu1[i].page = page;
		page += 0x01;
	}
}
     860:	08 95       	ret

00000862 <menu_initialize>:
	////oled_print_letter(" ",0x00,0x2e,36);
	//oled_print_letter("M",0x00,0x37,0x3f);
	//oled_print_letter("E",0x00,0x40,0x48);
	//oled_print_letter("N",0x00,0x49,0x51);
	//oled_print_letter("U",0x00,0x52,0x5a);
	oled_print("Play,Difficulty,Highscores,next page,Exit");
     862:	87 e0       	ldi	r24, 0x07	; 7
     864:	92 e0       	ldi	r25, 0x02	; 2
     866:	0e 94 b3 04 	call	0x966	; 0x966 <oled_print>
	oled_print_letter('#',0x02, 0x00, 0x08);
     86a:	28 e0       	ldi	r18, 0x08	; 8
     86c:	40 e0       	ldi	r20, 0x00	; 0
     86e:	62 e0       	ldi	r22, 0x02	; 2
     870:	83 e2       	ldi	r24, 0x23	; 35
     872:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
	
	hashtag.chosen = 0;
     876:	10 92 48 02 	sts	0x0248, r1
     87a:	10 92 47 02 	sts	0x0247, r1
	hashtag.moveY = false;
     87e:	10 92 49 02 	sts	0x0249, r1
	hashtag.moveX = false;
     882:	10 92 4a 02 	sts	0x024A, r1
     886:	08 95       	ret

00000888 <oled_init>:

int coloumn_counter = 0;
int tall = 0;
void write_c(uint8_t command){
	volatile char *oled_c = (char *) 0x1000;
	oled_c[0] = command;
     888:	e0 e0       	ldi	r30, 0x00	; 0
     88a:	f0 e1       	ldi	r31, 0x10	; 16
     88c:	8e ea       	ldi	r24, 0xAE	; 174
     88e:	80 83       	st	Z, r24
     890:	81 ea       	ldi	r24, 0xA1	; 161
     892:	80 83       	st	Z, r24
     894:	8a ed       	ldi	r24, 0xDA	; 218
     896:	80 83       	st	Z, r24
     898:	82 e1       	ldi	r24, 0x12	; 18
     89a:	80 83       	st	Z, r24
     89c:	88 ec       	ldi	r24, 0xC8	; 200
     89e:	80 83       	st	Z, r24
     8a0:	88 ea       	ldi	r24, 0xA8	; 168
     8a2:	80 83       	st	Z, r24
     8a4:	8f e3       	ldi	r24, 0x3F	; 63
     8a6:	80 83       	st	Z, r24
     8a8:	85 ed       	ldi	r24, 0xD5	; 213
     8aa:	80 83       	st	Z, r24
     8ac:	80 e8       	ldi	r24, 0x80	; 128
     8ae:	80 83       	st	Z, r24
     8b0:	81 e8       	ldi	r24, 0x81	; 129
     8b2:	80 83       	st	Z, r24
     8b4:	80 e5       	ldi	r24, 0x50	; 80
     8b6:	80 83       	st	Z, r24
     8b8:	89 ed       	ldi	r24, 0xD9	; 217
     8ba:	80 83       	st	Z, r24
     8bc:	81 e2       	ldi	r24, 0x21	; 33
     8be:	80 83       	st	Z, r24
     8c0:	80 e2       	ldi	r24, 0x20	; 32
     8c2:	80 83       	st	Z, r24
     8c4:	82 e0       	ldi	r24, 0x02	; 2
     8c6:	80 83       	st	Z, r24
     8c8:	8b ed       	ldi	r24, 0xDB	; 219
     8ca:	80 83       	st	Z, r24
     8cc:	80 e3       	ldi	r24, 0x30	; 48
     8ce:	80 83       	st	Z, r24
     8d0:	8d ea       	ldi	r24, 0xAD	; 173
     8d2:	80 83       	st	Z, r24
     8d4:	10 82       	st	Z, r1
     8d6:	84 ea       	ldi	r24, 0xA4	; 164
     8d8:	80 83       	st	Z, r24
     8da:	86 ea       	ldi	r24, 0xA6	; 166
     8dc:	80 83       	st	Z, r24
     8de:	8f ea       	ldi	r24, 0xAF	; 175
     8e0:	80 83       	st	Z, r24
     8e2:	08 95       	ret

000008e4 <oled_clear_page>:
		oled_clear_page(i);
	}
	//oled_init();
}
void oled_goto_page(uint8_t page){
	uint8_t goto2 = 0xb0+page;
     8e4:	80 55       	subi	r24, 0x50	; 80

int coloumn_counter = 0;
int tall = 0;
void write_c(uint8_t command){
	volatile char *oled_c = (char *) 0x1000;
	oled_c[0] = command;
     8e6:	80 93 00 10 	sts	0x1000, r24
     8ea:	80 e8       	ldi	r24, 0x80	; 128
     8ec:	90 e0       	ldi	r25, 0x00	; 0
}
void write_d(uint8_t data){
	volatile char *oled_d = (char *) 0x1200;
	oled_d[0] = data;
     8ee:	e0 e0       	ldi	r30, 0x00	; 0
     8f0:	f2 e1       	ldi	r31, 0x12	; 18
     8f2:	10 82       	st	Z, r1
     8f4:	01 97       	sbiw	r24, 0x01	; 1
	write_c(coloumn_start);
	write_c(coloumn_end);
}
void oled_clear_page(page){
	oled_goto_page(page);
		for (int i = 0;i<128;i++){
     8f6:	00 97       	sbiw	r24, 0x00	; 0
     8f8:	e1 f7       	brne	.-8      	; 0x8f2 <oled_clear_page+0xe>
			write_d(0x00);
		}
}
     8fa:	08 95       	ret

000008fc <oled_reset>:
	write_c(0xa4);        //out  follows  RAM  content
	write_c(0xa6);        //set  normal  display
	write_c(0xaf);        //  display  on
}

void oled_reset(void){
     8fc:	cf 93       	push	r28
     8fe:	df 93       	push	r29
	for (int i=0; i<8;i++){
     900:	c0 e0       	ldi	r28, 0x00	; 0
     902:	d0 e0       	ldi	r29, 0x00	; 0
		oled_clear_page(i);
     904:	ce 01       	movw	r24, r28
     906:	0e 94 72 04 	call	0x8e4	; 0x8e4 <oled_clear_page>
	write_c(0xa6);        //set  normal  display
	write_c(0xaf);        //  display  on
}

void oled_reset(void){
	for (int i=0; i<8;i++){
     90a:	21 96       	adiw	r28, 0x01	; 1
     90c:	c8 30       	cpi	r28, 0x08	; 8
     90e:	d1 05       	cpc	r29, r1
     910:	c9 f7       	brne	.-14     	; 0x904 <oled_reset+0x8>
		oled_clear_page(i);
	}
	//oled_init();
}
     912:	df 91       	pop	r29
     914:	cf 91       	pop	r28
     916:	08 95       	ret

00000918 <oled_pos>:
void oled_goto_page(uint8_t page){
	uint8_t goto2 = 0xb0+page;
     918:	80 55       	subi	r24, 0x50	; 80

int coloumn_counter = 0;
int tall = 0;
void write_c(uint8_t command){
	volatile char *oled_c = (char *) 0x1000;
	oled_c[0] = command;
     91a:	e0 e0       	ldi	r30, 0x00	; 0
     91c:	f0 e1       	ldi	r31, 0x10	; 16
     91e:	80 83       	st	Z, r24
     920:	81 e2       	ldi	r24, 0x21	; 33
     922:	80 83       	st	Z, r24
     924:	60 83       	st	Z, r22
     926:	40 83       	st	Z, r20
     928:	08 95       	ret

0000092a <oled_print_letter>:
		for (int i = 0;i<128;i++){
			write_d(0x00);
		}
}

void oled_print_letter(char letter,uint8_t page, uint8_t coloumn_start,uint8_t coloumn_end){
     92a:	cf 93       	push	r28
     92c:	c8 2f       	mov	r28, r24
     92e:	86 2f       	mov	r24, r22
     930:	64 2f       	mov	r22, r20
	
	//uint8_t char_alfa[8] = font8[34];
	oled_pos(page, coloumn_start, coloumn_end);
     932:	42 2f       	mov	r20, r18
     934:	0e 94 8c 04 	call	0x918	; 0x918 <oled_pos>
     938:	ec 2f       	mov	r30, r28
     93a:	f0 e0       	ldi	r31, 0x00	; 0
     93c:	ee 0f       	add	r30, r30
     93e:	ff 1f       	adc	r31, r31
     940:	ee 0f       	add	r30, r30
     942:	ff 1f       	adc	r31, r31
     944:	ee 0f       	add	r30, r30
     946:	ff 1f       	adc	r31, r31
     948:	e0 59       	subi	r30, 0x90	; 144
     94a:	f0 40       	sbci	r31, 0x00	; 0
	int ltr;
	for (int i = 0;i<8;i++){
     94c:	80 e0       	ldi	r24, 0x00	; 0
     94e:	90 e0       	ldi	r25, 0x00	; 0
	volatile char *oled_c = (char *) 0x1000;
	oled_c[0] = command;
}
void write_d(uint8_t data){
	volatile char *oled_d = (char *) 0x1200;
	oled_d[0] = data;
     950:	a0 e0       	ldi	r26, 0x00	; 0
     952:	b2 e1       	ldi	r27, 0x12	; 18
	
	//uint8_t char_alfa[8] = font8[34];
	oled_pos(page, coloumn_start, coloumn_end);
	int ltr;
	for (int i = 0;i<8;i++){
		ltr = pgm_read_byte(&(font8[letter-32][i]));
     954:	24 91       	lpm	r18, Z
	volatile char *oled_c = (char *) 0x1000;
	oled_c[0] = command;
}
void write_d(uint8_t data){
	volatile char *oled_d = (char *) 0x1200;
	oled_d[0] = data;
     956:	2c 93       	st	X, r18
void oled_print_letter(char letter,uint8_t page, uint8_t coloumn_start,uint8_t coloumn_end){
	
	//uint8_t char_alfa[8] = font8[34];
	oled_pos(page, coloumn_start, coloumn_end);
	int ltr;
	for (int i = 0;i<8;i++){
     958:	01 96       	adiw	r24, 0x01	; 1
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	88 30       	cpi	r24, 0x08	; 8
     95e:	91 05       	cpc	r25, r1
     960:	c9 f7       	brne	.-14     	; 0x954 <oled_print_letter+0x2a>
		ltr = pgm_read_byte(&(font8[letter-32][i]));
		write_d(ltr);
	}
}
     962:	cf 91       	pop	r28
     964:	08 95       	ret

00000966 <oled_print>:
	oled_goto_page(page);
	oled_goto_coloumn(coloumn_start,coloumn_end);
}


void oled_print(char* word ){
     966:	bf 92       	push	r11
     968:	cf 92       	push	r12
     96a:	df 92       	push	r13
     96c:	ef 92       	push	r14
     96e:	ff 92       	push	r15
     970:	0f 93       	push	r16
     972:	1f 93       	push	r17
     974:	cf 93       	push	r28
     976:	df 93       	push	r29
     978:	8c 01       	movw	r16, r24
	
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x02;	
	for (int i = 0; word[i] != '\0'; i++){
     97a:	fc 01       	movw	r30, r24
     97c:	80 81       	ld	r24, Z
     97e:	88 23       	and	r24, r24
     980:	71 f1       	breq	.+92     	; 0x9de <oled_print+0x78>
     982:	c0 e0       	ldi	r28, 0x00	; 0
     984:	d0 e0       	ldi	r29, 0x00	; 0

void oled_print(char* word ){
	
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x02;	
     986:	68 94       	set
     988:	dd 24       	eor	r13, r13
     98a:	d1 f8       	bld	r13, 1


void oled_print(char* word ){
	
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
     98c:	0f 2e       	mov	r0, r31
     98e:	f1 e1       	ldi	r31, 0x11	; 17
     990:	ef 2e       	mov	r14, r31
     992:	f0 2d       	mov	r31, r0
}


void oled_print(char* word ){
	
	uint8_t coloumn_start = 0x09;
     994:	0f 2e       	mov	r0, r31
     996:	f9 e0       	ldi	r31, 0x09	; 9
     998:	ff 2e       	mov	r15, r31
     99a:	f0 2d       	mov	r31, r0
	uint8_t page = 0x02;	
	for (int i = 0; word[i] != '\0'; i++){
		if(word[i] == 44){
			page +=0x01;
			coloumn_start = 0x09;
			coloumn_end = 0x11;
     99c:	0f 2e       	mov	r0, r31
     99e:	f1 e1       	ldi	r31, 0x11	; 17
     9a0:	bf 2e       	mov	r11, r31
     9a2:	f0 2d       	mov	r31, r0
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x02;	
	for (int i = 0; word[i] != '\0'; i++){
		if(word[i] == 44){
			page +=0x01;
			coloumn_start = 0x09;
     9a4:	0f 2e       	mov	r0, r31
     9a6:	f9 e0       	ldi	r31, 0x09	; 9
     9a8:	cf 2e       	mov	r12, r31
     9aa:	f0 2d       	mov	r31, r0
	
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x02;	
	for (int i = 0; word[i] != '\0'; i++){
		if(word[i] == 44){
     9ac:	8c 32       	cpi	r24, 0x2C	; 44
     9ae:	21 f4       	brne	.+8      	; 0x9b8 <oled_print+0x52>
			page +=0x01;
     9b0:	d3 94       	inc	r13
			coloumn_start = 0x09;
			coloumn_end = 0x11;
			i++;
     9b2:	21 96       	adiw	r28, 0x01	; 1
	uint8_t page = 0x02;	
	for (int i = 0; word[i] != '\0'; i++){
		if(word[i] == 44){
			page +=0x01;
			coloumn_start = 0x09;
			coloumn_end = 0x11;
     9b4:	eb 2c       	mov	r14, r11
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x02;	
	for (int i = 0; word[i] != '\0'; i++){
		if(word[i] == 44){
			page +=0x01;
			coloumn_start = 0x09;
     9b6:	fc 2c       	mov	r15, r12
			coloumn_end = 0x11;
			i++;
		}			
		oled_print_letter(word[i], page, coloumn_start,coloumn_end);
     9b8:	f8 01       	movw	r30, r16
     9ba:	ec 0f       	add	r30, r28
     9bc:	fd 1f       	adc	r31, r29
     9be:	2e 2d       	mov	r18, r14
     9c0:	4f 2d       	mov	r20, r15
     9c2:	6d 2d       	mov	r22, r13
     9c4:	80 81       	ld	r24, Z
     9c6:	0e 94 95 04 	call	0x92a	; 0x92a <oled_print_letter>
		coloumn_start += 0x09;
     9ca:	f9 e0       	ldi	r31, 0x09	; 9
     9cc:	ff 0e       	add	r15, r31
		coloumn_end += 0x09;
     9ce:	ef 0e       	add	r14, r31
void oled_print(char* word ){
	
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x02;	
	for (int i = 0; word[i] != '\0'; i++){
     9d0:	21 96       	adiw	r28, 0x01	; 1
     9d2:	f8 01       	movw	r30, r16
     9d4:	ec 0f       	add	r30, r28
     9d6:	fd 1f       	adc	r31, r29
     9d8:	80 81       	ld	r24, Z
     9da:	81 11       	cpse	r24, r1
     9dc:	e7 cf       	rjmp	.-50     	; 0x9ac <oled_print+0x46>
		coloumn_end += 0x09;


	}
	
}
     9de:	df 91       	pop	r29
     9e0:	cf 91       	pop	r28
     9e2:	1f 91       	pop	r17
     9e4:	0f 91       	pop	r16
     9e6:	ff 90       	pop	r15
     9e8:	ef 90       	pop	r14
     9ea:	df 90       	pop	r13
     9ec:	cf 90       	pop	r12
     9ee:	bf 90       	pop	r11
     9f0:	08 95       	ret

000009f2 <SPI_MasterInit>:

#include "SPI.h"

void SPI_MasterInit(void){
	/* Set MOSI,SCK and SS output, all others input */
	DDRB = (1<<DD_MOSI) | (1<<DD_SCK) | (1 << DD_SS) | (1 << PB0);
     9f2:	81 eb       	ldi	r24, 0xB1	; 177
     9f4:	87 bb       	out	0x17, r24	; 23
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE) | (1<<MSTR) | (1<<SPR0);
     9f6:	81 e5       	ldi	r24, 0x51	; 81
     9f8:	8d b9       	out	0x0d, r24	; 13
     9fa:	08 95       	ret

000009fc <SPI_MasterTransmit>:
}
void SPI_MasterTransmit(char cData){
	/* Start transmission */
	SPDR = cData;
     9fc:	8f b9       	out	0x0f, r24	; 15
	
	/* Wait for transmission complete */
	while	(!(SPSR & (1<<SPIF)));
     9fe:	77 9b       	sbis	0x0e, 7	; 14
     a00:	fe cf       	rjmp	.-4      	; 0x9fe <SPI_MasterTransmit+0x2>
}
     a02:	08 95       	ret

00000a04 <SPI_MasterReceive>:

char SPI_MasterReceive(void){
	/* Send dummy data to read from slave */	
	SPI_MasterTransmit(0);
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	0e 94 fe 04 	call	0x9fc	; 0x9fc <SPI_MasterTransmit>
	
	/* Wait for reception complete */
	// while	(!(SPSR & (1<<SPIF)));
	
	/* Return data register */
	return	SPDR;
     a0a:	8f b1       	in	r24, 0x0f	; 15
     a0c:	08 95       	ret

00000a0e <USART_Transmit>:
}

void USART_Transmit( unsigned char data ){

// Wait for empty transmit buffer
	while( !( UCSR0A & (1<<UDRE0)) );
     a0e:	5d 9b       	sbis	0x0b, 5	; 11
     a10:	fe cf       	rjmp	.-4      	; 0xa0e <USART_Transmit>
  
//Put data into buffer, sends the data
	UDR0 = data;
     a12:	8c b9       	out	0x0c, r24	; 12
     a14:	08 95       	ret

00000a16 <USART_Receive>:
}

unsigned char USART_Receive( void ){

//Wait for data to be received
	while ( !(UCSR0A & (1<<RXC0)) );
     a16:	5f 9b       	sbis	0x0b, 7	; 11
     a18:	fe cf       	rjmp	.-4      	; 0xa16 <USART_Receive>
//Get and return received data from buffer
	return UDR0;
     a1a:	8c b1       	in	r24, 0x0c	; 12
}
     a1c:	08 95       	ret

00000a1e <EXT_MEM_Init>:
#include <avr/io.h>
#include "uart.h"
#include <stdlib.h>

void EXT_MEM_Init(void){
	set_bit(MCUCR,SRE);
     a1e:	85 b7       	in	r24, 0x35	; 53
     a20:	80 68       	ori	r24, 0x80	; 128
     a22:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR,XMM2);
     a24:	80 b7       	in	r24, 0x30	; 48
     a26:	80 62       	ori	r24, 0x20	; 32
     a28:	80 bf       	out	0x30, r24	; 48
     a2a:	08 95       	ret

00000a2c <USART_Init>:
	//set_bit(SFIOR,XMM0);
}
void USART_Init( unsigned int ubrr){
	// Set baud rate
	UBRR0H = (unsigned char) (ubrr>>8);
     a2c:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) ubrr;
     a2e:	89 b9       	out	0x09, r24	; 9
	
	/* Enable receiver and transmitter	*/
	UCSR0B = (1<<TXEN0)|(1<<RXEN0);
     a30:	88 e1       	ldi	r24, 0x18	; 24
     a32:	8a b9       	out	0x0a, r24	; 10
	fdevopen(USART_Transmit,USART_Receive);
     a34:	6b e0       	ldi	r22, 0x0B	; 11
     a36:	75 e0       	ldi	r23, 0x05	; 5
     a38:	87 e0       	ldi	r24, 0x07	; 7
     a3a:	95 e0       	ldi	r25, 0x05	; 5
     a3c:	0e 94 21 05 	call	0xa42	; 0xa42 <fdevopen>
     a40:	08 95       	ret

00000a42 <fdevopen>:
     a42:	0f 93       	push	r16
     a44:	1f 93       	push	r17
     a46:	cf 93       	push	r28
     a48:	df 93       	push	r29
     a4a:	ec 01       	movw	r28, r24
     a4c:	8b 01       	movw	r16, r22
     a4e:	00 97       	sbiw	r24, 0x00	; 0
     a50:	31 f4       	brne	.+12     	; 0xa5e <fdevopen+0x1c>
     a52:	61 15       	cp	r22, r1
     a54:	71 05       	cpc	r23, r1
     a56:	19 f4       	brne	.+6      	; 0xa5e <fdevopen+0x1c>
     a58:	80 e0       	ldi	r24, 0x00	; 0
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	38 c0       	rjmp	.+112    	; 0xace <fdevopen+0x8c>
     a5e:	6e e0       	ldi	r22, 0x0E	; 14
     a60:	70 e0       	ldi	r23, 0x00	; 0
     a62:	81 e0       	ldi	r24, 0x01	; 1
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	0e 94 7f 07 	call	0xefe	; 0xefe <calloc>
     a6a:	fc 01       	movw	r30, r24
     a6c:	00 97       	sbiw	r24, 0x00	; 0
     a6e:	a1 f3       	breq	.-24     	; 0xa58 <fdevopen+0x16>
     a70:	80 e8       	ldi	r24, 0x80	; 128
     a72:	83 83       	std	Z+3, r24	; 0x03
     a74:	01 15       	cp	r16, r1
     a76:	11 05       	cpc	r17, r1
     a78:	71 f0       	breq	.+28     	; 0xa96 <fdevopen+0x54>
     a7a:	13 87       	std	Z+11, r17	; 0x0b
     a7c:	02 87       	std	Z+10, r16	; 0x0a
     a7e:	81 e8       	ldi	r24, 0x81	; 129
     a80:	83 83       	std	Z+3, r24	; 0x03
     a82:	80 91 5f 02 	lds	r24, 0x025F
     a86:	90 91 60 02 	lds	r25, 0x0260
     a8a:	89 2b       	or	r24, r25
     a8c:	21 f4       	brne	.+8      	; 0xa96 <fdevopen+0x54>
     a8e:	f0 93 60 02 	sts	0x0260, r31
     a92:	e0 93 5f 02 	sts	0x025F, r30
     a96:	20 97       	sbiw	r28, 0x00	; 0
     a98:	c9 f0       	breq	.+50     	; 0xacc <fdevopen+0x8a>
     a9a:	d1 87       	std	Z+9, r29	; 0x09
     a9c:	c0 87       	std	Z+8, r28	; 0x08
     a9e:	83 81       	ldd	r24, Z+3	; 0x03
     aa0:	82 60       	ori	r24, 0x02	; 2
     aa2:	83 83       	std	Z+3, r24	; 0x03
     aa4:	80 91 61 02 	lds	r24, 0x0261
     aa8:	90 91 62 02 	lds	r25, 0x0262
     aac:	89 2b       	or	r24, r25
     aae:	71 f4       	brne	.+28     	; 0xacc <fdevopen+0x8a>
     ab0:	f0 93 62 02 	sts	0x0262, r31
     ab4:	e0 93 61 02 	sts	0x0261, r30
     ab8:	80 91 63 02 	lds	r24, 0x0263
     abc:	90 91 64 02 	lds	r25, 0x0264
     ac0:	89 2b       	or	r24, r25
     ac2:	21 f4       	brne	.+8      	; 0xacc <fdevopen+0x8a>
     ac4:	f0 93 64 02 	sts	0x0264, r31
     ac8:	e0 93 63 02 	sts	0x0263, r30
     acc:	cf 01       	movw	r24, r30
     ace:	df 91       	pop	r29
     ad0:	cf 91       	pop	r28
     ad2:	1f 91       	pop	r17
     ad4:	0f 91       	pop	r16
     ad6:	08 95       	ret

00000ad8 <printf>:
     ad8:	a0 e0       	ldi	r26, 0x00	; 0
     ada:	b0 e0       	ldi	r27, 0x00	; 0
     adc:	e2 e7       	ldi	r30, 0x72	; 114
     ade:	f5 e0       	ldi	r31, 0x05	; 5
     ae0:	0c 94 7f 09 	jmp	0x12fe	; 0x12fe <__prologue_saves__+0x20>
     ae4:	fe 01       	movw	r30, r28
     ae6:	35 96       	adiw	r30, 0x05	; 5
     ae8:	61 91       	ld	r22, Z+
     aea:	71 91       	ld	r23, Z+
     aec:	af 01       	movw	r20, r30
     aee:	80 91 61 02 	lds	r24, 0x0261
     af2:	90 91 62 02 	lds	r25, 0x0262
     af6:	0e 94 ad 05 	call	0xb5a	; 0xb5a <vfprintf>
     afa:	e2 e0       	ldi	r30, 0x02	; 2
     afc:	0c 94 9b 09 	jmp	0x1336	; 0x1336 <__epilogue_restores__+0x20>

00000b00 <puts>:
     b00:	0f 93       	push	r16
     b02:	1f 93       	push	r17
     b04:	cf 93       	push	r28
     b06:	df 93       	push	r29
     b08:	e0 91 61 02 	lds	r30, 0x0261
     b0c:	f0 91 62 02 	lds	r31, 0x0262
     b10:	23 81       	ldd	r18, Z+3	; 0x03
     b12:	21 ff       	sbrs	r18, 1
     b14:	1b c0       	rjmp	.+54     	; 0xb4c <puts+0x4c>
     b16:	ec 01       	movw	r28, r24
     b18:	00 e0       	ldi	r16, 0x00	; 0
     b1a:	10 e0       	ldi	r17, 0x00	; 0
     b1c:	89 91       	ld	r24, Y+
     b1e:	60 91 61 02 	lds	r22, 0x0261
     b22:	70 91 62 02 	lds	r23, 0x0262
     b26:	db 01       	movw	r26, r22
     b28:	18 96       	adiw	r26, 0x08	; 8
     b2a:	ed 91       	ld	r30, X+
     b2c:	fc 91       	ld	r31, X
     b2e:	19 97       	sbiw	r26, 0x09	; 9
     b30:	88 23       	and	r24, r24
     b32:	31 f0       	breq	.+12     	; 0xb40 <puts+0x40>
     b34:	09 95       	icall
     b36:	89 2b       	or	r24, r25
     b38:	89 f3       	breq	.-30     	; 0xb1c <puts+0x1c>
     b3a:	0f ef       	ldi	r16, 0xFF	; 255
     b3c:	1f ef       	ldi	r17, 0xFF	; 255
     b3e:	ee cf       	rjmp	.-36     	; 0xb1c <puts+0x1c>
     b40:	8a e0       	ldi	r24, 0x0A	; 10
     b42:	09 95       	icall
     b44:	89 2b       	or	r24, r25
     b46:	11 f4       	brne	.+4      	; 0xb4c <puts+0x4c>
     b48:	c8 01       	movw	r24, r16
     b4a:	02 c0       	rjmp	.+4      	; 0xb50 <puts+0x50>
     b4c:	8f ef       	ldi	r24, 0xFF	; 255
     b4e:	9f ef       	ldi	r25, 0xFF	; 255
     b50:	df 91       	pop	r29
     b52:	cf 91       	pop	r28
     b54:	1f 91       	pop	r17
     b56:	0f 91       	pop	r16
     b58:	08 95       	ret

00000b5a <vfprintf>:
     b5a:	ac e0       	ldi	r26, 0x0C	; 12
     b5c:	b0 e0       	ldi	r27, 0x00	; 0
     b5e:	e3 eb       	ldi	r30, 0xB3	; 179
     b60:	f5 e0       	ldi	r31, 0x05	; 5
     b62:	0c 94 6f 09 	jmp	0x12de	; 0x12de <__prologue_saves__>
     b66:	7c 01       	movw	r14, r24
     b68:	6b 01       	movw	r12, r22
     b6a:	8a 01       	movw	r16, r20
     b6c:	fc 01       	movw	r30, r24
     b6e:	17 82       	std	Z+7, r1	; 0x07
     b70:	16 82       	std	Z+6, r1	; 0x06
     b72:	83 81       	ldd	r24, Z+3	; 0x03
     b74:	81 ff       	sbrs	r24, 1
     b76:	bd c1       	rjmp	.+890    	; 0xef2 <vfprintf+0x398>
     b78:	ce 01       	movw	r24, r28
     b7a:	01 96       	adiw	r24, 0x01	; 1
     b7c:	4c 01       	movw	r8, r24
     b7e:	f7 01       	movw	r30, r14
     b80:	93 81       	ldd	r25, Z+3	; 0x03
     b82:	f6 01       	movw	r30, r12
     b84:	93 fd       	sbrc	r25, 3
     b86:	85 91       	lpm	r24, Z+
     b88:	93 ff       	sbrs	r25, 3
     b8a:	81 91       	ld	r24, Z+
     b8c:	6f 01       	movw	r12, r30
     b8e:	88 23       	and	r24, r24
     b90:	09 f4       	brne	.+2      	; 0xb94 <vfprintf+0x3a>
     b92:	ab c1       	rjmp	.+854    	; 0xeea <vfprintf+0x390>
     b94:	85 32       	cpi	r24, 0x25	; 37
     b96:	39 f4       	brne	.+14     	; 0xba6 <vfprintf+0x4c>
     b98:	93 fd       	sbrc	r25, 3
     b9a:	85 91       	lpm	r24, Z+
     b9c:	93 ff       	sbrs	r25, 3
     b9e:	81 91       	ld	r24, Z+
     ba0:	6f 01       	movw	r12, r30
     ba2:	85 32       	cpi	r24, 0x25	; 37
     ba4:	29 f4       	brne	.+10     	; 0xbb0 <vfprintf+0x56>
     ba6:	b7 01       	movw	r22, r14
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	0e 94 df 08 	call	0x11be	; 0x11be <fputc>
     bae:	e7 cf       	rjmp	.-50     	; 0xb7e <vfprintf+0x24>
     bb0:	51 2c       	mov	r5, r1
     bb2:	31 2c       	mov	r3, r1
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	20 32       	cpi	r18, 0x20	; 32
     bb8:	a0 f4       	brcc	.+40     	; 0xbe2 <vfprintf+0x88>
     bba:	8b 32       	cpi	r24, 0x2B	; 43
     bbc:	69 f0       	breq	.+26     	; 0xbd8 <vfprintf+0x7e>
     bbe:	30 f4       	brcc	.+12     	; 0xbcc <vfprintf+0x72>
     bc0:	80 32       	cpi	r24, 0x20	; 32
     bc2:	59 f0       	breq	.+22     	; 0xbda <vfprintf+0x80>
     bc4:	83 32       	cpi	r24, 0x23	; 35
     bc6:	69 f4       	brne	.+26     	; 0xbe2 <vfprintf+0x88>
     bc8:	20 61       	ori	r18, 0x10	; 16
     bca:	2c c0       	rjmp	.+88     	; 0xc24 <vfprintf+0xca>
     bcc:	8d 32       	cpi	r24, 0x2D	; 45
     bce:	39 f0       	breq	.+14     	; 0xbde <vfprintf+0x84>
     bd0:	80 33       	cpi	r24, 0x30	; 48
     bd2:	39 f4       	brne	.+14     	; 0xbe2 <vfprintf+0x88>
     bd4:	21 60       	ori	r18, 0x01	; 1
     bd6:	26 c0       	rjmp	.+76     	; 0xc24 <vfprintf+0xca>
     bd8:	22 60       	ori	r18, 0x02	; 2
     bda:	24 60       	ori	r18, 0x04	; 4
     bdc:	23 c0       	rjmp	.+70     	; 0xc24 <vfprintf+0xca>
     bde:	28 60       	ori	r18, 0x08	; 8
     be0:	21 c0       	rjmp	.+66     	; 0xc24 <vfprintf+0xca>
     be2:	27 fd       	sbrc	r18, 7
     be4:	27 c0       	rjmp	.+78     	; 0xc34 <vfprintf+0xda>
     be6:	30 ed       	ldi	r19, 0xD0	; 208
     be8:	38 0f       	add	r19, r24
     bea:	3a 30       	cpi	r19, 0x0A	; 10
     bec:	78 f4       	brcc	.+30     	; 0xc0c <vfprintf+0xb2>
     bee:	26 ff       	sbrs	r18, 6
     bf0:	06 c0       	rjmp	.+12     	; 0xbfe <vfprintf+0xa4>
     bf2:	fa e0       	ldi	r31, 0x0A	; 10
     bf4:	5f 9e       	mul	r5, r31
     bf6:	30 0d       	add	r19, r0
     bf8:	11 24       	eor	r1, r1
     bfa:	53 2e       	mov	r5, r19
     bfc:	13 c0       	rjmp	.+38     	; 0xc24 <vfprintf+0xca>
     bfe:	8a e0       	ldi	r24, 0x0A	; 10
     c00:	38 9e       	mul	r3, r24
     c02:	30 0d       	add	r19, r0
     c04:	11 24       	eor	r1, r1
     c06:	33 2e       	mov	r3, r19
     c08:	20 62       	ori	r18, 0x20	; 32
     c0a:	0c c0       	rjmp	.+24     	; 0xc24 <vfprintf+0xca>
     c0c:	8e 32       	cpi	r24, 0x2E	; 46
     c0e:	21 f4       	brne	.+8      	; 0xc18 <vfprintf+0xbe>
     c10:	26 fd       	sbrc	r18, 6
     c12:	6b c1       	rjmp	.+726    	; 0xeea <vfprintf+0x390>
     c14:	20 64       	ori	r18, 0x40	; 64
     c16:	06 c0       	rjmp	.+12     	; 0xc24 <vfprintf+0xca>
     c18:	8c 36       	cpi	r24, 0x6C	; 108
     c1a:	11 f4       	brne	.+4      	; 0xc20 <vfprintf+0xc6>
     c1c:	20 68       	ori	r18, 0x80	; 128
     c1e:	02 c0       	rjmp	.+4      	; 0xc24 <vfprintf+0xca>
     c20:	88 36       	cpi	r24, 0x68	; 104
     c22:	41 f4       	brne	.+16     	; 0xc34 <vfprintf+0xda>
     c24:	f6 01       	movw	r30, r12
     c26:	93 fd       	sbrc	r25, 3
     c28:	85 91       	lpm	r24, Z+
     c2a:	93 ff       	sbrs	r25, 3
     c2c:	81 91       	ld	r24, Z+
     c2e:	6f 01       	movw	r12, r30
     c30:	81 11       	cpse	r24, r1
     c32:	c1 cf       	rjmp	.-126    	; 0xbb6 <vfprintf+0x5c>
     c34:	98 2f       	mov	r25, r24
     c36:	9f 7d       	andi	r25, 0xDF	; 223
     c38:	95 54       	subi	r25, 0x45	; 69
     c3a:	93 30       	cpi	r25, 0x03	; 3
     c3c:	28 f4       	brcc	.+10     	; 0xc48 <vfprintf+0xee>
     c3e:	0c 5f       	subi	r16, 0xFC	; 252
     c40:	1f 4f       	sbci	r17, 0xFF	; 255
     c42:	ff e3       	ldi	r31, 0x3F	; 63
     c44:	f9 83       	std	Y+1, r31	; 0x01
     c46:	0d c0       	rjmp	.+26     	; 0xc62 <vfprintf+0x108>
     c48:	83 36       	cpi	r24, 0x63	; 99
     c4a:	31 f0       	breq	.+12     	; 0xc58 <vfprintf+0xfe>
     c4c:	83 37       	cpi	r24, 0x73	; 115
     c4e:	71 f0       	breq	.+28     	; 0xc6c <vfprintf+0x112>
     c50:	83 35       	cpi	r24, 0x53	; 83
     c52:	09 f0       	breq	.+2      	; 0xc56 <vfprintf+0xfc>
     c54:	5b c0       	rjmp	.+182    	; 0xd0c <vfprintf+0x1b2>
     c56:	22 c0       	rjmp	.+68     	; 0xc9c <vfprintf+0x142>
     c58:	f8 01       	movw	r30, r16
     c5a:	80 81       	ld	r24, Z
     c5c:	89 83       	std	Y+1, r24	; 0x01
     c5e:	0e 5f       	subi	r16, 0xFE	; 254
     c60:	1f 4f       	sbci	r17, 0xFF	; 255
     c62:	44 24       	eor	r4, r4
     c64:	43 94       	inc	r4
     c66:	51 2c       	mov	r5, r1
     c68:	54 01       	movw	r10, r8
     c6a:	15 c0       	rjmp	.+42     	; 0xc96 <vfprintf+0x13c>
     c6c:	38 01       	movw	r6, r16
     c6e:	f2 e0       	ldi	r31, 0x02	; 2
     c70:	6f 0e       	add	r6, r31
     c72:	71 1c       	adc	r7, r1
     c74:	f8 01       	movw	r30, r16
     c76:	a0 80       	ld	r10, Z
     c78:	b1 80       	ldd	r11, Z+1	; 0x01
     c7a:	26 ff       	sbrs	r18, 6
     c7c:	03 c0       	rjmp	.+6      	; 0xc84 <vfprintf+0x12a>
     c7e:	65 2d       	mov	r22, r5
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <vfprintf+0x12e>
     c84:	6f ef       	ldi	r22, 0xFF	; 255
     c86:	7f ef       	ldi	r23, 0xFF	; 255
     c88:	c5 01       	movw	r24, r10
     c8a:	2c 87       	std	Y+12, r18	; 0x0c
     c8c:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <strnlen>
     c90:	2c 01       	movw	r4, r24
     c92:	83 01       	movw	r16, r6
     c94:	2c 85       	ldd	r18, Y+12	; 0x0c
     c96:	2f 77       	andi	r18, 0x7F	; 127
     c98:	22 2e       	mov	r2, r18
     c9a:	17 c0       	rjmp	.+46     	; 0xcca <vfprintf+0x170>
     c9c:	38 01       	movw	r6, r16
     c9e:	f2 e0       	ldi	r31, 0x02	; 2
     ca0:	6f 0e       	add	r6, r31
     ca2:	71 1c       	adc	r7, r1
     ca4:	f8 01       	movw	r30, r16
     ca6:	a0 80       	ld	r10, Z
     ca8:	b1 80       	ldd	r11, Z+1	; 0x01
     caa:	26 ff       	sbrs	r18, 6
     cac:	03 c0       	rjmp	.+6      	; 0xcb4 <vfprintf+0x15a>
     cae:	65 2d       	mov	r22, r5
     cb0:	70 e0       	ldi	r23, 0x00	; 0
     cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <vfprintf+0x15e>
     cb4:	6f ef       	ldi	r22, 0xFF	; 255
     cb6:	7f ef       	ldi	r23, 0xFF	; 255
     cb8:	c5 01       	movw	r24, r10
     cba:	2c 87       	std	Y+12, r18	; 0x0c
     cbc:	0e 94 c2 08 	call	0x1184	; 0x1184 <strnlen_P>
     cc0:	2c 01       	movw	r4, r24
     cc2:	2c 85       	ldd	r18, Y+12	; 0x0c
     cc4:	20 68       	ori	r18, 0x80	; 128
     cc6:	22 2e       	mov	r2, r18
     cc8:	83 01       	movw	r16, r6
     cca:	23 fc       	sbrc	r2, 3
     ccc:	1b c0       	rjmp	.+54     	; 0xd04 <vfprintf+0x1aa>
     cce:	83 2d       	mov	r24, r3
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	48 16       	cp	r4, r24
     cd4:	59 06       	cpc	r5, r25
     cd6:	b0 f4       	brcc	.+44     	; 0xd04 <vfprintf+0x1aa>
     cd8:	b7 01       	movw	r22, r14
     cda:	80 e2       	ldi	r24, 0x20	; 32
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	0e 94 df 08 	call	0x11be	; 0x11be <fputc>
     ce2:	3a 94       	dec	r3
     ce4:	f4 cf       	rjmp	.-24     	; 0xcce <vfprintf+0x174>
     ce6:	f5 01       	movw	r30, r10
     ce8:	27 fc       	sbrc	r2, 7
     cea:	85 91       	lpm	r24, Z+
     cec:	27 fe       	sbrs	r2, 7
     cee:	81 91       	ld	r24, Z+
     cf0:	5f 01       	movw	r10, r30
     cf2:	b7 01       	movw	r22, r14
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	0e 94 df 08 	call	0x11be	; 0x11be <fputc>
     cfa:	31 10       	cpse	r3, r1
     cfc:	3a 94       	dec	r3
     cfe:	f1 e0       	ldi	r31, 0x01	; 1
     d00:	4f 1a       	sub	r4, r31
     d02:	51 08       	sbc	r5, r1
     d04:	41 14       	cp	r4, r1
     d06:	51 04       	cpc	r5, r1
     d08:	71 f7       	brne	.-36     	; 0xce6 <vfprintf+0x18c>
     d0a:	e5 c0       	rjmp	.+458    	; 0xed6 <vfprintf+0x37c>
     d0c:	84 36       	cpi	r24, 0x64	; 100
     d0e:	11 f0       	breq	.+4      	; 0xd14 <vfprintf+0x1ba>
     d10:	89 36       	cpi	r24, 0x69	; 105
     d12:	39 f5       	brne	.+78     	; 0xd62 <vfprintf+0x208>
     d14:	f8 01       	movw	r30, r16
     d16:	27 ff       	sbrs	r18, 7
     d18:	07 c0       	rjmp	.+14     	; 0xd28 <vfprintf+0x1ce>
     d1a:	60 81       	ld	r22, Z
     d1c:	71 81       	ldd	r23, Z+1	; 0x01
     d1e:	82 81       	ldd	r24, Z+2	; 0x02
     d20:	93 81       	ldd	r25, Z+3	; 0x03
     d22:	0c 5f       	subi	r16, 0xFC	; 252
     d24:	1f 4f       	sbci	r17, 0xFF	; 255
     d26:	08 c0       	rjmp	.+16     	; 0xd38 <vfprintf+0x1de>
     d28:	60 81       	ld	r22, Z
     d2a:	71 81       	ldd	r23, Z+1	; 0x01
     d2c:	88 27       	eor	r24, r24
     d2e:	77 fd       	sbrc	r23, 7
     d30:	80 95       	com	r24
     d32:	98 2f       	mov	r25, r24
     d34:	0e 5f       	subi	r16, 0xFE	; 254
     d36:	1f 4f       	sbci	r17, 0xFF	; 255
     d38:	2f 76       	andi	r18, 0x6F	; 111
     d3a:	b2 2e       	mov	r11, r18
     d3c:	97 ff       	sbrs	r25, 7
     d3e:	09 c0       	rjmp	.+18     	; 0xd52 <vfprintf+0x1f8>
     d40:	90 95       	com	r25
     d42:	80 95       	com	r24
     d44:	70 95       	com	r23
     d46:	61 95       	neg	r22
     d48:	7f 4f       	sbci	r23, 0xFF	; 255
     d4a:	8f 4f       	sbci	r24, 0xFF	; 255
     d4c:	9f 4f       	sbci	r25, 0xFF	; 255
     d4e:	20 68       	ori	r18, 0x80	; 128
     d50:	b2 2e       	mov	r11, r18
     d52:	2a e0       	ldi	r18, 0x0A	; 10
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	a4 01       	movw	r20, r8
     d58:	0e 94 11 09 	call	0x1222	; 0x1222 <__ultoa_invert>
     d5c:	a8 2e       	mov	r10, r24
     d5e:	a8 18       	sub	r10, r8
     d60:	44 c0       	rjmp	.+136    	; 0xdea <vfprintf+0x290>
     d62:	85 37       	cpi	r24, 0x75	; 117
     d64:	29 f4       	brne	.+10     	; 0xd70 <vfprintf+0x216>
     d66:	2f 7e       	andi	r18, 0xEF	; 239
     d68:	b2 2e       	mov	r11, r18
     d6a:	2a e0       	ldi	r18, 0x0A	; 10
     d6c:	30 e0       	ldi	r19, 0x00	; 0
     d6e:	25 c0       	rjmp	.+74     	; 0xdba <vfprintf+0x260>
     d70:	f2 2f       	mov	r31, r18
     d72:	f9 7f       	andi	r31, 0xF9	; 249
     d74:	bf 2e       	mov	r11, r31
     d76:	8f 36       	cpi	r24, 0x6F	; 111
     d78:	c1 f0       	breq	.+48     	; 0xdaa <vfprintf+0x250>
     d7a:	18 f4       	brcc	.+6      	; 0xd82 <vfprintf+0x228>
     d7c:	88 35       	cpi	r24, 0x58	; 88
     d7e:	79 f0       	breq	.+30     	; 0xd9e <vfprintf+0x244>
     d80:	b4 c0       	rjmp	.+360    	; 0xeea <vfprintf+0x390>
     d82:	80 37       	cpi	r24, 0x70	; 112
     d84:	19 f0       	breq	.+6      	; 0xd8c <vfprintf+0x232>
     d86:	88 37       	cpi	r24, 0x78	; 120
     d88:	21 f0       	breq	.+8      	; 0xd92 <vfprintf+0x238>
     d8a:	af c0       	rjmp	.+350    	; 0xeea <vfprintf+0x390>
     d8c:	2f 2f       	mov	r18, r31
     d8e:	20 61       	ori	r18, 0x10	; 16
     d90:	b2 2e       	mov	r11, r18
     d92:	b4 fe       	sbrs	r11, 4
     d94:	0d c0       	rjmp	.+26     	; 0xdb0 <vfprintf+0x256>
     d96:	8b 2d       	mov	r24, r11
     d98:	84 60       	ori	r24, 0x04	; 4
     d9a:	b8 2e       	mov	r11, r24
     d9c:	09 c0       	rjmp	.+18     	; 0xdb0 <vfprintf+0x256>
     d9e:	24 ff       	sbrs	r18, 4
     da0:	0a c0       	rjmp	.+20     	; 0xdb6 <vfprintf+0x25c>
     da2:	9f 2f       	mov	r25, r31
     da4:	96 60       	ori	r25, 0x06	; 6
     da6:	b9 2e       	mov	r11, r25
     da8:	06 c0       	rjmp	.+12     	; 0xdb6 <vfprintf+0x25c>
     daa:	28 e0       	ldi	r18, 0x08	; 8
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	05 c0       	rjmp	.+10     	; 0xdba <vfprintf+0x260>
     db0:	20 e1       	ldi	r18, 0x10	; 16
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	02 c0       	rjmp	.+4      	; 0xdba <vfprintf+0x260>
     db6:	20 e1       	ldi	r18, 0x10	; 16
     db8:	32 e0       	ldi	r19, 0x02	; 2
     dba:	f8 01       	movw	r30, r16
     dbc:	b7 fe       	sbrs	r11, 7
     dbe:	07 c0       	rjmp	.+14     	; 0xdce <vfprintf+0x274>
     dc0:	60 81       	ld	r22, Z
     dc2:	71 81       	ldd	r23, Z+1	; 0x01
     dc4:	82 81       	ldd	r24, Z+2	; 0x02
     dc6:	93 81       	ldd	r25, Z+3	; 0x03
     dc8:	0c 5f       	subi	r16, 0xFC	; 252
     dca:	1f 4f       	sbci	r17, 0xFF	; 255
     dcc:	06 c0       	rjmp	.+12     	; 0xdda <vfprintf+0x280>
     dce:	60 81       	ld	r22, Z
     dd0:	71 81       	ldd	r23, Z+1	; 0x01
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	0e 5f       	subi	r16, 0xFE	; 254
     dd8:	1f 4f       	sbci	r17, 0xFF	; 255
     dda:	a4 01       	movw	r20, r8
     ddc:	0e 94 11 09 	call	0x1222	; 0x1222 <__ultoa_invert>
     de0:	a8 2e       	mov	r10, r24
     de2:	a8 18       	sub	r10, r8
     de4:	fb 2d       	mov	r31, r11
     de6:	ff 77       	andi	r31, 0x7F	; 127
     de8:	bf 2e       	mov	r11, r31
     dea:	b6 fe       	sbrs	r11, 6
     dec:	0b c0       	rjmp	.+22     	; 0xe04 <vfprintf+0x2aa>
     dee:	2b 2d       	mov	r18, r11
     df0:	2e 7f       	andi	r18, 0xFE	; 254
     df2:	a5 14       	cp	r10, r5
     df4:	50 f4       	brcc	.+20     	; 0xe0a <vfprintf+0x2b0>
     df6:	b4 fe       	sbrs	r11, 4
     df8:	0a c0       	rjmp	.+20     	; 0xe0e <vfprintf+0x2b4>
     dfa:	b2 fc       	sbrc	r11, 2
     dfc:	08 c0       	rjmp	.+16     	; 0xe0e <vfprintf+0x2b4>
     dfe:	2b 2d       	mov	r18, r11
     e00:	2e 7e       	andi	r18, 0xEE	; 238
     e02:	05 c0       	rjmp	.+10     	; 0xe0e <vfprintf+0x2b4>
     e04:	7a 2c       	mov	r7, r10
     e06:	2b 2d       	mov	r18, r11
     e08:	03 c0       	rjmp	.+6      	; 0xe10 <vfprintf+0x2b6>
     e0a:	7a 2c       	mov	r7, r10
     e0c:	01 c0       	rjmp	.+2      	; 0xe10 <vfprintf+0x2b6>
     e0e:	75 2c       	mov	r7, r5
     e10:	24 ff       	sbrs	r18, 4
     e12:	0d c0       	rjmp	.+26     	; 0xe2e <vfprintf+0x2d4>
     e14:	fe 01       	movw	r30, r28
     e16:	ea 0d       	add	r30, r10
     e18:	f1 1d       	adc	r31, r1
     e1a:	80 81       	ld	r24, Z
     e1c:	80 33       	cpi	r24, 0x30	; 48
     e1e:	11 f4       	brne	.+4      	; 0xe24 <vfprintf+0x2ca>
     e20:	29 7e       	andi	r18, 0xE9	; 233
     e22:	09 c0       	rjmp	.+18     	; 0xe36 <vfprintf+0x2dc>
     e24:	22 ff       	sbrs	r18, 2
     e26:	06 c0       	rjmp	.+12     	; 0xe34 <vfprintf+0x2da>
     e28:	73 94       	inc	r7
     e2a:	73 94       	inc	r7
     e2c:	04 c0       	rjmp	.+8      	; 0xe36 <vfprintf+0x2dc>
     e2e:	82 2f       	mov	r24, r18
     e30:	86 78       	andi	r24, 0x86	; 134
     e32:	09 f0       	breq	.+2      	; 0xe36 <vfprintf+0x2dc>
     e34:	73 94       	inc	r7
     e36:	23 fd       	sbrc	r18, 3
     e38:	13 c0       	rjmp	.+38     	; 0xe60 <vfprintf+0x306>
     e3a:	20 ff       	sbrs	r18, 0
     e3c:	06 c0       	rjmp	.+12     	; 0xe4a <vfprintf+0x2f0>
     e3e:	5a 2c       	mov	r5, r10
     e40:	73 14       	cp	r7, r3
     e42:	18 f4       	brcc	.+6      	; 0xe4a <vfprintf+0x2f0>
     e44:	53 0c       	add	r5, r3
     e46:	57 18       	sub	r5, r7
     e48:	73 2c       	mov	r7, r3
     e4a:	73 14       	cp	r7, r3
     e4c:	68 f4       	brcc	.+26     	; 0xe68 <vfprintf+0x30e>
     e4e:	b7 01       	movw	r22, r14
     e50:	80 e2       	ldi	r24, 0x20	; 32
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	2c 87       	std	Y+12, r18	; 0x0c
     e56:	0e 94 df 08 	call	0x11be	; 0x11be <fputc>
     e5a:	73 94       	inc	r7
     e5c:	2c 85       	ldd	r18, Y+12	; 0x0c
     e5e:	f5 cf       	rjmp	.-22     	; 0xe4a <vfprintf+0x2f0>
     e60:	73 14       	cp	r7, r3
     e62:	10 f4       	brcc	.+4      	; 0xe68 <vfprintf+0x30e>
     e64:	37 18       	sub	r3, r7
     e66:	01 c0       	rjmp	.+2      	; 0xe6a <vfprintf+0x310>
     e68:	31 2c       	mov	r3, r1
     e6a:	24 ff       	sbrs	r18, 4
     e6c:	12 c0       	rjmp	.+36     	; 0xe92 <vfprintf+0x338>
     e6e:	b7 01       	movw	r22, r14
     e70:	80 e3       	ldi	r24, 0x30	; 48
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	2c 87       	std	Y+12, r18	; 0x0c
     e76:	0e 94 df 08 	call	0x11be	; 0x11be <fputc>
     e7a:	2c 85       	ldd	r18, Y+12	; 0x0c
     e7c:	22 ff       	sbrs	r18, 2
     e7e:	17 c0       	rjmp	.+46     	; 0xeae <vfprintf+0x354>
     e80:	21 ff       	sbrs	r18, 1
     e82:	03 c0       	rjmp	.+6      	; 0xe8a <vfprintf+0x330>
     e84:	88 e5       	ldi	r24, 0x58	; 88
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <vfprintf+0x334>
     e8a:	88 e7       	ldi	r24, 0x78	; 120
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	b7 01       	movw	r22, r14
     e90:	0c c0       	rjmp	.+24     	; 0xeaa <vfprintf+0x350>
     e92:	82 2f       	mov	r24, r18
     e94:	86 78       	andi	r24, 0x86	; 134
     e96:	59 f0       	breq	.+22     	; 0xeae <vfprintf+0x354>
     e98:	21 fd       	sbrc	r18, 1
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <vfprintf+0x346>
     e9c:	80 e2       	ldi	r24, 0x20	; 32
     e9e:	01 c0       	rjmp	.+2      	; 0xea2 <vfprintf+0x348>
     ea0:	8b e2       	ldi	r24, 0x2B	; 43
     ea2:	27 fd       	sbrc	r18, 7
     ea4:	8d e2       	ldi	r24, 0x2D	; 45
     ea6:	b7 01       	movw	r22, r14
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	0e 94 df 08 	call	0x11be	; 0x11be <fputc>
     eae:	a5 14       	cp	r10, r5
     eb0:	38 f4       	brcc	.+14     	; 0xec0 <vfprintf+0x366>
     eb2:	b7 01       	movw	r22, r14
     eb4:	80 e3       	ldi	r24, 0x30	; 48
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	0e 94 df 08 	call	0x11be	; 0x11be <fputc>
     ebc:	5a 94       	dec	r5
     ebe:	f7 cf       	rjmp	.-18     	; 0xeae <vfprintf+0x354>
     ec0:	aa 94       	dec	r10
     ec2:	f4 01       	movw	r30, r8
     ec4:	ea 0d       	add	r30, r10
     ec6:	f1 1d       	adc	r31, r1
     ec8:	80 81       	ld	r24, Z
     eca:	b7 01       	movw	r22, r14
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	0e 94 df 08 	call	0x11be	; 0x11be <fputc>
     ed2:	a1 10       	cpse	r10, r1
     ed4:	f5 cf       	rjmp	.-22     	; 0xec0 <vfprintf+0x366>
     ed6:	33 20       	and	r3, r3
     ed8:	09 f4       	brne	.+2      	; 0xedc <vfprintf+0x382>
     eda:	51 ce       	rjmp	.-862    	; 0xb7e <vfprintf+0x24>
     edc:	b7 01       	movw	r22, r14
     ede:	80 e2       	ldi	r24, 0x20	; 32
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	0e 94 df 08 	call	0x11be	; 0x11be <fputc>
     ee6:	3a 94       	dec	r3
     ee8:	f6 cf       	rjmp	.-20     	; 0xed6 <vfprintf+0x37c>
     eea:	f7 01       	movw	r30, r14
     eec:	86 81       	ldd	r24, Z+6	; 0x06
     eee:	97 81       	ldd	r25, Z+7	; 0x07
     ef0:	02 c0       	rjmp	.+4      	; 0xef6 <vfprintf+0x39c>
     ef2:	8f ef       	ldi	r24, 0xFF	; 255
     ef4:	9f ef       	ldi	r25, 0xFF	; 255
     ef6:	2c 96       	adiw	r28, 0x0c	; 12
     ef8:	e2 e1       	ldi	r30, 0x12	; 18
     efa:	0c 94 8b 09 	jmp	0x1316	; 0x1316 <__epilogue_restores__>

00000efe <calloc>:
     efe:	0f 93       	push	r16
     f00:	1f 93       	push	r17
     f02:	cf 93       	push	r28
     f04:	df 93       	push	r29
     f06:	86 9f       	mul	r24, r22
     f08:	80 01       	movw	r16, r0
     f0a:	87 9f       	mul	r24, r23
     f0c:	10 0d       	add	r17, r0
     f0e:	96 9f       	mul	r25, r22
     f10:	10 0d       	add	r17, r0
     f12:	11 24       	eor	r1, r1
     f14:	c8 01       	movw	r24, r16
     f16:	0e 94 9b 07 	call	0xf36	; 0xf36 <malloc>
     f1a:	ec 01       	movw	r28, r24
     f1c:	00 97       	sbiw	r24, 0x00	; 0
     f1e:	29 f0       	breq	.+10     	; 0xf2a <calloc+0x2c>
     f20:	a8 01       	movw	r20, r16
     f22:	60 e0       	ldi	r22, 0x00	; 0
     f24:	70 e0       	ldi	r23, 0x00	; 0
     f26:	0e 94 cd 08 	call	0x119a	; 0x119a <memset>
     f2a:	ce 01       	movw	r24, r28
     f2c:	df 91       	pop	r29
     f2e:	cf 91       	pop	r28
     f30:	1f 91       	pop	r17
     f32:	0f 91       	pop	r16
     f34:	08 95       	ret

00000f36 <malloc>:
     f36:	cf 93       	push	r28
     f38:	df 93       	push	r29
     f3a:	82 30       	cpi	r24, 0x02	; 2
     f3c:	91 05       	cpc	r25, r1
     f3e:	10 f4       	brcc	.+4      	; 0xf44 <malloc+0xe>
     f40:	82 e0       	ldi	r24, 0x02	; 2
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	e0 91 67 02 	lds	r30, 0x0267
     f48:	f0 91 68 02 	lds	r31, 0x0268
     f4c:	20 e0       	ldi	r18, 0x00	; 0
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	a0 e0       	ldi	r26, 0x00	; 0
     f52:	b0 e0       	ldi	r27, 0x00	; 0
     f54:	30 97       	sbiw	r30, 0x00	; 0
     f56:	39 f1       	breq	.+78     	; 0xfa6 <malloc+0x70>
     f58:	40 81       	ld	r20, Z
     f5a:	51 81       	ldd	r21, Z+1	; 0x01
     f5c:	48 17       	cp	r20, r24
     f5e:	59 07       	cpc	r21, r25
     f60:	b8 f0       	brcs	.+46     	; 0xf90 <malloc+0x5a>
     f62:	48 17       	cp	r20, r24
     f64:	59 07       	cpc	r21, r25
     f66:	71 f4       	brne	.+28     	; 0xf84 <malloc+0x4e>
     f68:	82 81       	ldd	r24, Z+2	; 0x02
     f6a:	93 81       	ldd	r25, Z+3	; 0x03
     f6c:	10 97       	sbiw	r26, 0x00	; 0
     f6e:	29 f0       	breq	.+10     	; 0xf7a <malloc+0x44>
     f70:	13 96       	adiw	r26, 0x03	; 3
     f72:	9c 93       	st	X, r25
     f74:	8e 93       	st	-X, r24
     f76:	12 97       	sbiw	r26, 0x02	; 2
     f78:	2c c0       	rjmp	.+88     	; 0xfd2 <malloc+0x9c>
     f7a:	90 93 68 02 	sts	0x0268, r25
     f7e:	80 93 67 02 	sts	0x0267, r24
     f82:	27 c0       	rjmp	.+78     	; 0xfd2 <malloc+0x9c>
     f84:	21 15       	cp	r18, r1
     f86:	31 05       	cpc	r19, r1
     f88:	31 f0       	breq	.+12     	; 0xf96 <malloc+0x60>
     f8a:	42 17       	cp	r20, r18
     f8c:	53 07       	cpc	r21, r19
     f8e:	18 f0       	brcs	.+6      	; 0xf96 <malloc+0x60>
     f90:	a9 01       	movw	r20, r18
     f92:	db 01       	movw	r26, r22
     f94:	01 c0       	rjmp	.+2      	; 0xf98 <malloc+0x62>
     f96:	ef 01       	movw	r28, r30
     f98:	9a 01       	movw	r18, r20
     f9a:	bd 01       	movw	r22, r26
     f9c:	df 01       	movw	r26, r30
     f9e:	02 80       	ldd	r0, Z+2	; 0x02
     fa0:	f3 81       	ldd	r31, Z+3	; 0x03
     fa2:	e0 2d       	mov	r30, r0
     fa4:	d7 cf       	rjmp	.-82     	; 0xf54 <malloc+0x1e>
     fa6:	21 15       	cp	r18, r1
     fa8:	31 05       	cpc	r19, r1
     faa:	f9 f0       	breq	.+62     	; 0xfea <malloc+0xb4>
     fac:	28 1b       	sub	r18, r24
     fae:	39 0b       	sbc	r19, r25
     fb0:	24 30       	cpi	r18, 0x04	; 4
     fb2:	31 05       	cpc	r19, r1
     fb4:	80 f4       	brcc	.+32     	; 0xfd6 <malloc+0xa0>
     fb6:	8a 81       	ldd	r24, Y+2	; 0x02
     fb8:	9b 81       	ldd	r25, Y+3	; 0x03
     fba:	61 15       	cp	r22, r1
     fbc:	71 05       	cpc	r23, r1
     fbe:	21 f0       	breq	.+8      	; 0xfc8 <malloc+0x92>
     fc0:	fb 01       	movw	r30, r22
     fc2:	93 83       	std	Z+3, r25	; 0x03
     fc4:	82 83       	std	Z+2, r24	; 0x02
     fc6:	04 c0       	rjmp	.+8      	; 0xfd0 <malloc+0x9a>
     fc8:	90 93 68 02 	sts	0x0268, r25
     fcc:	80 93 67 02 	sts	0x0267, r24
     fd0:	fe 01       	movw	r30, r28
     fd2:	32 96       	adiw	r30, 0x02	; 2
     fd4:	44 c0       	rjmp	.+136    	; 0x105e <malloc+0x128>
     fd6:	fe 01       	movw	r30, r28
     fd8:	e2 0f       	add	r30, r18
     fda:	f3 1f       	adc	r31, r19
     fdc:	81 93       	st	Z+, r24
     fde:	91 93       	st	Z+, r25
     fe0:	22 50       	subi	r18, 0x02	; 2
     fe2:	31 09       	sbc	r19, r1
     fe4:	39 83       	std	Y+1, r19	; 0x01
     fe6:	28 83       	st	Y, r18
     fe8:	3a c0       	rjmp	.+116    	; 0x105e <malloc+0x128>
     fea:	20 91 65 02 	lds	r18, 0x0265
     fee:	30 91 66 02 	lds	r19, 0x0266
     ff2:	23 2b       	or	r18, r19
     ff4:	41 f4       	brne	.+16     	; 0x1006 <malloc+0xd0>
     ff6:	20 91 02 01 	lds	r18, 0x0102
     ffa:	30 91 03 01 	lds	r19, 0x0103
     ffe:	30 93 66 02 	sts	0x0266, r19
    1002:	20 93 65 02 	sts	0x0265, r18
    1006:	20 91 00 01 	lds	r18, 0x0100
    100a:	30 91 01 01 	lds	r19, 0x0101
    100e:	21 15       	cp	r18, r1
    1010:	31 05       	cpc	r19, r1
    1012:	41 f4       	brne	.+16     	; 0x1024 <malloc+0xee>
    1014:	2d b7       	in	r18, 0x3d	; 61
    1016:	3e b7       	in	r19, 0x3e	; 62
    1018:	40 91 04 01 	lds	r20, 0x0104
    101c:	50 91 05 01 	lds	r21, 0x0105
    1020:	24 1b       	sub	r18, r20
    1022:	35 0b       	sbc	r19, r21
    1024:	e0 91 65 02 	lds	r30, 0x0265
    1028:	f0 91 66 02 	lds	r31, 0x0266
    102c:	e2 17       	cp	r30, r18
    102e:	f3 07       	cpc	r31, r19
    1030:	a0 f4       	brcc	.+40     	; 0x105a <malloc+0x124>
    1032:	2e 1b       	sub	r18, r30
    1034:	3f 0b       	sbc	r19, r31
    1036:	28 17       	cp	r18, r24
    1038:	39 07       	cpc	r19, r25
    103a:	78 f0       	brcs	.+30     	; 0x105a <malloc+0x124>
    103c:	ac 01       	movw	r20, r24
    103e:	4e 5f       	subi	r20, 0xFE	; 254
    1040:	5f 4f       	sbci	r21, 0xFF	; 255
    1042:	24 17       	cp	r18, r20
    1044:	35 07       	cpc	r19, r21
    1046:	48 f0       	brcs	.+18     	; 0x105a <malloc+0x124>
    1048:	4e 0f       	add	r20, r30
    104a:	5f 1f       	adc	r21, r31
    104c:	50 93 66 02 	sts	0x0266, r21
    1050:	40 93 65 02 	sts	0x0265, r20
    1054:	81 93       	st	Z+, r24
    1056:	91 93       	st	Z+, r25
    1058:	02 c0       	rjmp	.+4      	; 0x105e <malloc+0x128>
    105a:	e0 e0       	ldi	r30, 0x00	; 0
    105c:	f0 e0       	ldi	r31, 0x00	; 0
    105e:	cf 01       	movw	r24, r30
    1060:	df 91       	pop	r29
    1062:	cf 91       	pop	r28
    1064:	08 95       	ret

00001066 <free>:
    1066:	cf 93       	push	r28
    1068:	df 93       	push	r29
    106a:	00 97       	sbiw	r24, 0x00	; 0
    106c:	09 f4       	brne	.+2      	; 0x1070 <free+0xa>
    106e:	87 c0       	rjmp	.+270    	; 0x117e <free+0x118>
    1070:	fc 01       	movw	r30, r24
    1072:	32 97       	sbiw	r30, 0x02	; 2
    1074:	13 82       	std	Z+3, r1	; 0x03
    1076:	12 82       	std	Z+2, r1	; 0x02
    1078:	c0 91 67 02 	lds	r28, 0x0267
    107c:	d0 91 68 02 	lds	r29, 0x0268
    1080:	20 97       	sbiw	r28, 0x00	; 0
    1082:	81 f4       	brne	.+32     	; 0x10a4 <free+0x3e>
    1084:	20 81       	ld	r18, Z
    1086:	31 81       	ldd	r19, Z+1	; 0x01
    1088:	28 0f       	add	r18, r24
    108a:	39 1f       	adc	r19, r25
    108c:	80 91 65 02 	lds	r24, 0x0265
    1090:	90 91 66 02 	lds	r25, 0x0266
    1094:	82 17       	cp	r24, r18
    1096:	93 07       	cpc	r25, r19
    1098:	79 f5       	brne	.+94     	; 0x10f8 <free+0x92>
    109a:	f0 93 66 02 	sts	0x0266, r31
    109e:	e0 93 65 02 	sts	0x0265, r30
    10a2:	6d c0       	rjmp	.+218    	; 0x117e <free+0x118>
    10a4:	de 01       	movw	r26, r28
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	ae 17       	cp	r26, r30
    10ac:	bf 07       	cpc	r27, r31
    10ae:	50 f4       	brcc	.+20     	; 0x10c4 <free+0x5e>
    10b0:	12 96       	adiw	r26, 0x02	; 2
    10b2:	4d 91       	ld	r20, X+
    10b4:	5c 91       	ld	r21, X
    10b6:	13 97       	sbiw	r26, 0x03	; 3
    10b8:	9d 01       	movw	r18, r26
    10ba:	41 15       	cp	r20, r1
    10bc:	51 05       	cpc	r21, r1
    10be:	09 f1       	breq	.+66     	; 0x1102 <free+0x9c>
    10c0:	da 01       	movw	r26, r20
    10c2:	f3 cf       	rjmp	.-26     	; 0x10aa <free+0x44>
    10c4:	b3 83       	std	Z+3, r27	; 0x03
    10c6:	a2 83       	std	Z+2, r26	; 0x02
    10c8:	40 81       	ld	r20, Z
    10ca:	51 81       	ldd	r21, Z+1	; 0x01
    10cc:	84 0f       	add	r24, r20
    10ce:	95 1f       	adc	r25, r21
    10d0:	8a 17       	cp	r24, r26
    10d2:	9b 07       	cpc	r25, r27
    10d4:	71 f4       	brne	.+28     	; 0x10f2 <free+0x8c>
    10d6:	8d 91       	ld	r24, X+
    10d8:	9c 91       	ld	r25, X
    10da:	11 97       	sbiw	r26, 0x01	; 1
    10dc:	84 0f       	add	r24, r20
    10de:	95 1f       	adc	r25, r21
    10e0:	02 96       	adiw	r24, 0x02	; 2
    10e2:	91 83       	std	Z+1, r25	; 0x01
    10e4:	80 83       	st	Z, r24
    10e6:	12 96       	adiw	r26, 0x02	; 2
    10e8:	8d 91       	ld	r24, X+
    10ea:	9c 91       	ld	r25, X
    10ec:	13 97       	sbiw	r26, 0x03	; 3
    10ee:	93 83       	std	Z+3, r25	; 0x03
    10f0:	82 83       	std	Z+2, r24	; 0x02
    10f2:	21 15       	cp	r18, r1
    10f4:	31 05       	cpc	r19, r1
    10f6:	29 f4       	brne	.+10     	; 0x1102 <free+0x9c>
    10f8:	f0 93 68 02 	sts	0x0268, r31
    10fc:	e0 93 67 02 	sts	0x0267, r30
    1100:	3e c0       	rjmp	.+124    	; 0x117e <free+0x118>
    1102:	d9 01       	movw	r26, r18
    1104:	13 96       	adiw	r26, 0x03	; 3
    1106:	fc 93       	st	X, r31
    1108:	ee 93       	st	-X, r30
    110a:	12 97       	sbiw	r26, 0x02	; 2
    110c:	4d 91       	ld	r20, X+
    110e:	5d 91       	ld	r21, X+
    1110:	a4 0f       	add	r26, r20
    1112:	b5 1f       	adc	r27, r21
    1114:	ea 17       	cp	r30, r26
    1116:	fb 07       	cpc	r31, r27
    1118:	79 f4       	brne	.+30     	; 0x1138 <free+0xd2>
    111a:	80 81       	ld	r24, Z
    111c:	91 81       	ldd	r25, Z+1	; 0x01
    111e:	84 0f       	add	r24, r20
    1120:	95 1f       	adc	r25, r21
    1122:	02 96       	adiw	r24, 0x02	; 2
    1124:	d9 01       	movw	r26, r18
    1126:	11 96       	adiw	r26, 0x01	; 1
    1128:	9c 93       	st	X, r25
    112a:	8e 93       	st	-X, r24
    112c:	82 81       	ldd	r24, Z+2	; 0x02
    112e:	93 81       	ldd	r25, Z+3	; 0x03
    1130:	13 96       	adiw	r26, 0x03	; 3
    1132:	9c 93       	st	X, r25
    1134:	8e 93       	st	-X, r24
    1136:	12 97       	sbiw	r26, 0x02	; 2
    1138:	e0 e0       	ldi	r30, 0x00	; 0
    113a:	f0 e0       	ldi	r31, 0x00	; 0
    113c:	8a 81       	ldd	r24, Y+2	; 0x02
    113e:	9b 81       	ldd	r25, Y+3	; 0x03
    1140:	00 97       	sbiw	r24, 0x00	; 0
    1142:	19 f0       	breq	.+6      	; 0x114a <free+0xe4>
    1144:	fe 01       	movw	r30, r28
    1146:	ec 01       	movw	r28, r24
    1148:	f9 cf       	rjmp	.-14     	; 0x113c <free+0xd6>
    114a:	ce 01       	movw	r24, r28
    114c:	02 96       	adiw	r24, 0x02	; 2
    114e:	28 81       	ld	r18, Y
    1150:	39 81       	ldd	r19, Y+1	; 0x01
    1152:	82 0f       	add	r24, r18
    1154:	93 1f       	adc	r25, r19
    1156:	20 91 65 02 	lds	r18, 0x0265
    115a:	30 91 66 02 	lds	r19, 0x0266
    115e:	28 17       	cp	r18, r24
    1160:	39 07       	cpc	r19, r25
    1162:	69 f4       	brne	.+26     	; 0x117e <free+0x118>
    1164:	30 97       	sbiw	r30, 0x00	; 0
    1166:	29 f4       	brne	.+10     	; 0x1172 <free+0x10c>
    1168:	10 92 68 02 	sts	0x0268, r1
    116c:	10 92 67 02 	sts	0x0267, r1
    1170:	02 c0       	rjmp	.+4      	; 0x1176 <free+0x110>
    1172:	13 82       	std	Z+3, r1	; 0x03
    1174:	12 82       	std	Z+2, r1	; 0x02
    1176:	d0 93 66 02 	sts	0x0266, r29
    117a:	c0 93 65 02 	sts	0x0265, r28
    117e:	df 91       	pop	r29
    1180:	cf 91       	pop	r28
    1182:	08 95       	ret

00001184 <strnlen_P>:
    1184:	fc 01       	movw	r30, r24
    1186:	05 90       	lpm	r0, Z+
    1188:	61 50       	subi	r22, 0x01	; 1
    118a:	70 40       	sbci	r23, 0x00	; 0
    118c:	01 10       	cpse	r0, r1
    118e:	d8 f7       	brcc	.-10     	; 0x1186 <strnlen_P+0x2>
    1190:	80 95       	com	r24
    1192:	90 95       	com	r25
    1194:	8e 0f       	add	r24, r30
    1196:	9f 1f       	adc	r25, r31
    1198:	08 95       	ret

0000119a <memset>:
    119a:	dc 01       	movw	r26, r24
    119c:	01 c0       	rjmp	.+2      	; 0x11a0 <memset+0x6>
    119e:	6d 93       	st	X+, r22
    11a0:	41 50       	subi	r20, 0x01	; 1
    11a2:	50 40       	sbci	r21, 0x00	; 0
    11a4:	e0 f7       	brcc	.-8      	; 0x119e <memset+0x4>
    11a6:	08 95       	ret

000011a8 <strnlen>:
    11a8:	fc 01       	movw	r30, r24
    11aa:	61 50       	subi	r22, 0x01	; 1
    11ac:	70 40       	sbci	r23, 0x00	; 0
    11ae:	01 90       	ld	r0, Z+
    11b0:	01 10       	cpse	r0, r1
    11b2:	d8 f7       	brcc	.-10     	; 0x11aa <strnlen+0x2>
    11b4:	80 95       	com	r24
    11b6:	90 95       	com	r25
    11b8:	8e 0f       	add	r24, r30
    11ba:	9f 1f       	adc	r25, r31
    11bc:	08 95       	ret

000011be <fputc>:
    11be:	0f 93       	push	r16
    11c0:	1f 93       	push	r17
    11c2:	cf 93       	push	r28
    11c4:	df 93       	push	r29
    11c6:	18 2f       	mov	r17, r24
    11c8:	09 2f       	mov	r16, r25
    11ca:	eb 01       	movw	r28, r22
    11cc:	8b 81       	ldd	r24, Y+3	; 0x03
    11ce:	81 fd       	sbrc	r24, 1
    11d0:	03 c0       	rjmp	.+6      	; 0x11d8 <fputc+0x1a>
    11d2:	8f ef       	ldi	r24, 0xFF	; 255
    11d4:	9f ef       	ldi	r25, 0xFF	; 255
    11d6:	20 c0       	rjmp	.+64     	; 0x1218 <fputc+0x5a>
    11d8:	82 ff       	sbrs	r24, 2
    11da:	10 c0       	rjmp	.+32     	; 0x11fc <fputc+0x3e>
    11dc:	4e 81       	ldd	r20, Y+6	; 0x06
    11de:	5f 81       	ldd	r21, Y+7	; 0x07
    11e0:	2c 81       	ldd	r18, Y+4	; 0x04
    11e2:	3d 81       	ldd	r19, Y+5	; 0x05
    11e4:	42 17       	cp	r20, r18
    11e6:	53 07       	cpc	r21, r19
    11e8:	7c f4       	brge	.+30     	; 0x1208 <fputc+0x4a>
    11ea:	e8 81       	ld	r30, Y
    11ec:	f9 81       	ldd	r31, Y+1	; 0x01
    11ee:	9f 01       	movw	r18, r30
    11f0:	2f 5f       	subi	r18, 0xFF	; 255
    11f2:	3f 4f       	sbci	r19, 0xFF	; 255
    11f4:	39 83       	std	Y+1, r19	; 0x01
    11f6:	28 83       	st	Y, r18
    11f8:	10 83       	st	Z, r17
    11fa:	06 c0       	rjmp	.+12     	; 0x1208 <fputc+0x4a>
    11fc:	e8 85       	ldd	r30, Y+8	; 0x08
    11fe:	f9 85       	ldd	r31, Y+9	; 0x09
    1200:	81 2f       	mov	r24, r17
    1202:	09 95       	icall
    1204:	89 2b       	or	r24, r25
    1206:	29 f7       	brne	.-54     	; 0x11d2 <fputc+0x14>
    1208:	2e 81       	ldd	r18, Y+6	; 0x06
    120a:	3f 81       	ldd	r19, Y+7	; 0x07
    120c:	2f 5f       	subi	r18, 0xFF	; 255
    120e:	3f 4f       	sbci	r19, 0xFF	; 255
    1210:	3f 83       	std	Y+7, r19	; 0x07
    1212:	2e 83       	std	Y+6, r18	; 0x06
    1214:	81 2f       	mov	r24, r17
    1216:	90 2f       	mov	r25, r16
    1218:	df 91       	pop	r29
    121a:	cf 91       	pop	r28
    121c:	1f 91       	pop	r17
    121e:	0f 91       	pop	r16
    1220:	08 95       	ret

00001222 <__ultoa_invert>:
    1222:	fa 01       	movw	r30, r20
    1224:	aa 27       	eor	r26, r26
    1226:	28 30       	cpi	r18, 0x08	; 8
    1228:	51 f1       	breq	.+84     	; 0x127e <__ultoa_invert+0x5c>
    122a:	20 31       	cpi	r18, 0x10	; 16
    122c:	81 f1       	breq	.+96     	; 0x128e <__ultoa_invert+0x6c>
    122e:	e8 94       	clt
    1230:	6f 93       	push	r22
    1232:	6e 7f       	andi	r22, 0xFE	; 254
    1234:	6e 5f       	subi	r22, 0xFE	; 254
    1236:	7f 4f       	sbci	r23, 0xFF	; 255
    1238:	8f 4f       	sbci	r24, 0xFF	; 255
    123a:	9f 4f       	sbci	r25, 0xFF	; 255
    123c:	af 4f       	sbci	r26, 0xFF	; 255
    123e:	b1 e0       	ldi	r27, 0x01	; 1
    1240:	3e d0       	rcall	.+124    	; 0x12be <__ultoa_invert+0x9c>
    1242:	b4 e0       	ldi	r27, 0x04	; 4
    1244:	3c d0       	rcall	.+120    	; 0x12be <__ultoa_invert+0x9c>
    1246:	67 0f       	add	r22, r23
    1248:	78 1f       	adc	r23, r24
    124a:	89 1f       	adc	r24, r25
    124c:	9a 1f       	adc	r25, r26
    124e:	a1 1d       	adc	r26, r1
    1250:	68 0f       	add	r22, r24
    1252:	79 1f       	adc	r23, r25
    1254:	8a 1f       	adc	r24, r26
    1256:	91 1d       	adc	r25, r1
    1258:	a1 1d       	adc	r26, r1
    125a:	6a 0f       	add	r22, r26
    125c:	71 1d       	adc	r23, r1
    125e:	81 1d       	adc	r24, r1
    1260:	91 1d       	adc	r25, r1
    1262:	a1 1d       	adc	r26, r1
    1264:	20 d0       	rcall	.+64     	; 0x12a6 <__ultoa_invert+0x84>
    1266:	09 f4       	brne	.+2      	; 0x126a <__ultoa_invert+0x48>
    1268:	68 94       	set
    126a:	3f 91       	pop	r19
    126c:	2a e0       	ldi	r18, 0x0A	; 10
    126e:	26 9f       	mul	r18, r22
    1270:	11 24       	eor	r1, r1
    1272:	30 19       	sub	r19, r0
    1274:	30 5d       	subi	r19, 0xD0	; 208
    1276:	31 93       	st	Z+, r19
    1278:	de f6       	brtc	.-74     	; 0x1230 <__ultoa_invert+0xe>
    127a:	cf 01       	movw	r24, r30
    127c:	08 95       	ret
    127e:	46 2f       	mov	r20, r22
    1280:	47 70       	andi	r20, 0x07	; 7
    1282:	40 5d       	subi	r20, 0xD0	; 208
    1284:	41 93       	st	Z+, r20
    1286:	b3 e0       	ldi	r27, 0x03	; 3
    1288:	0f d0       	rcall	.+30     	; 0x12a8 <__ultoa_invert+0x86>
    128a:	c9 f7       	brne	.-14     	; 0x127e <__ultoa_invert+0x5c>
    128c:	f6 cf       	rjmp	.-20     	; 0x127a <__ultoa_invert+0x58>
    128e:	46 2f       	mov	r20, r22
    1290:	4f 70       	andi	r20, 0x0F	; 15
    1292:	40 5d       	subi	r20, 0xD0	; 208
    1294:	4a 33       	cpi	r20, 0x3A	; 58
    1296:	18 f0       	brcs	.+6      	; 0x129e <__ultoa_invert+0x7c>
    1298:	49 5d       	subi	r20, 0xD9	; 217
    129a:	31 fd       	sbrc	r19, 1
    129c:	40 52       	subi	r20, 0x20	; 32
    129e:	41 93       	st	Z+, r20
    12a0:	02 d0       	rcall	.+4      	; 0x12a6 <__ultoa_invert+0x84>
    12a2:	a9 f7       	brne	.-22     	; 0x128e <__ultoa_invert+0x6c>
    12a4:	ea cf       	rjmp	.-44     	; 0x127a <__ultoa_invert+0x58>
    12a6:	b4 e0       	ldi	r27, 0x04	; 4
    12a8:	a6 95       	lsr	r26
    12aa:	97 95       	ror	r25
    12ac:	87 95       	ror	r24
    12ae:	77 95       	ror	r23
    12b0:	67 95       	ror	r22
    12b2:	ba 95       	dec	r27
    12b4:	c9 f7       	brne	.-14     	; 0x12a8 <__ultoa_invert+0x86>
    12b6:	00 97       	sbiw	r24, 0x00	; 0
    12b8:	61 05       	cpc	r22, r1
    12ba:	71 05       	cpc	r23, r1
    12bc:	08 95       	ret
    12be:	9b 01       	movw	r18, r22
    12c0:	ac 01       	movw	r20, r24
    12c2:	0a 2e       	mov	r0, r26
    12c4:	06 94       	lsr	r0
    12c6:	57 95       	ror	r21
    12c8:	47 95       	ror	r20
    12ca:	37 95       	ror	r19
    12cc:	27 95       	ror	r18
    12ce:	ba 95       	dec	r27
    12d0:	c9 f7       	brne	.-14     	; 0x12c4 <__ultoa_invert+0xa2>
    12d2:	62 0f       	add	r22, r18
    12d4:	73 1f       	adc	r23, r19
    12d6:	84 1f       	adc	r24, r20
    12d8:	95 1f       	adc	r25, r21
    12da:	a0 1d       	adc	r26, r0
    12dc:	08 95       	ret

000012de <__prologue_saves__>:
    12de:	2f 92       	push	r2
    12e0:	3f 92       	push	r3
    12e2:	4f 92       	push	r4
    12e4:	5f 92       	push	r5
    12e6:	6f 92       	push	r6
    12e8:	7f 92       	push	r7
    12ea:	8f 92       	push	r8
    12ec:	9f 92       	push	r9
    12ee:	af 92       	push	r10
    12f0:	bf 92       	push	r11
    12f2:	cf 92       	push	r12
    12f4:	df 92       	push	r13
    12f6:	ef 92       	push	r14
    12f8:	ff 92       	push	r15
    12fa:	0f 93       	push	r16
    12fc:	1f 93       	push	r17
    12fe:	cf 93       	push	r28
    1300:	df 93       	push	r29
    1302:	cd b7       	in	r28, 0x3d	; 61
    1304:	de b7       	in	r29, 0x3e	; 62
    1306:	ca 1b       	sub	r28, r26
    1308:	db 0b       	sbc	r29, r27
    130a:	0f b6       	in	r0, 0x3f	; 63
    130c:	f8 94       	cli
    130e:	de bf       	out	0x3e, r29	; 62
    1310:	0f be       	out	0x3f, r0	; 63
    1312:	cd bf       	out	0x3d, r28	; 61
    1314:	09 94       	ijmp

00001316 <__epilogue_restores__>:
    1316:	2a 88       	ldd	r2, Y+18	; 0x12
    1318:	39 88       	ldd	r3, Y+17	; 0x11
    131a:	48 88       	ldd	r4, Y+16	; 0x10
    131c:	5f 84       	ldd	r5, Y+15	; 0x0f
    131e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1320:	7d 84       	ldd	r7, Y+13	; 0x0d
    1322:	8c 84       	ldd	r8, Y+12	; 0x0c
    1324:	9b 84       	ldd	r9, Y+11	; 0x0b
    1326:	aa 84       	ldd	r10, Y+10	; 0x0a
    1328:	b9 84       	ldd	r11, Y+9	; 0x09
    132a:	c8 84       	ldd	r12, Y+8	; 0x08
    132c:	df 80       	ldd	r13, Y+7	; 0x07
    132e:	ee 80       	ldd	r14, Y+6	; 0x06
    1330:	fd 80       	ldd	r15, Y+5	; 0x05
    1332:	0c 81       	ldd	r16, Y+4	; 0x04
    1334:	1b 81       	ldd	r17, Y+3	; 0x03
    1336:	aa 81       	ldd	r26, Y+2	; 0x02
    1338:	b9 81       	ldd	r27, Y+1	; 0x01
    133a:	ce 0f       	add	r28, r30
    133c:	d1 1d       	adc	r29, r1
    133e:	0f b6       	in	r0, 0x3f	; 63
    1340:	f8 94       	cli
    1342:	de bf       	out	0x3e, r29	; 62
    1344:	0f be       	out	0x3f, r0	; 63
    1346:	cd bf       	out	0x3d, r28	; 61
    1348:	ed 01       	movw	r28, r26
    134a:	08 95       	ret

0000134c <_exit>:
    134c:	f8 94       	cli

0000134e <__stop_program>:
    134e:	ff cf       	rjmp	.-2      	; 0x134e <__stop_program>
