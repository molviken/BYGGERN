
Lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  000012f4  00001388  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  0080017a  0080017a  00001402  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001402  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000238  00000000  00000000  0000145e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002213  00000000  00000000  00001696  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000cbf  00000000  00000000  000038a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c7e  00000000  00000000  00004568  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000580  00000000  00000000  000051e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006a3  00000000  00000000  00005768  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000110c  00000000  00000000  00005e0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000208  00000000  00000000  00006f17  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__vector_1>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <vfprintf+0x44>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e4 ef       	ldi	r30, 0xF4	; 244
     37c:	f2 e1       	ldi	r31, 0x12	; 18
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	aa 37       	cpi	r26, 0x7A	; 122
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	aa e7       	ldi	r26, 0x7A	; 122
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	aa 38       	cpi	r26, 0x8A	; 138
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <main>
     39e:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <adc_init>:
#include <string.h>
#include "uart.h"
#include <avr/io.h>
#include <util/delay.h>
void adc_init(void){
	set_bit(MCUCR,SRE);
     3a6:	85 b7       	in	r24, 0x35	; 53
     3a8:	80 68       	ori	r24, 0x80	; 128
     3aa:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR,XMM2);
     3ac:	80 b7       	in	r24, 0x30	; 48
     3ae:	80 62       	ori	r24, 0x20	; 32
     3b0:	80 bf       	out	0x30, r24	; 48
	clear_bit(DDRE,DDE0);
     3b2:	30 98       	cbi	0x06, 0	; 6
     3b4:	08 95       	ret

000003b6 <adc_read>:
}

uint8_t adc_read(uint8_t channel){
	
	volatile char* adc_adr = (char *) 0x1400;
	adc_adr[0] = channel;
     3b6:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ba:	90 e1       	ldi	r25, 0x10	; 16
     3bc:	9a 95       	dec	r25
     3be:	f1 f7       	brne	.-4      	; 0x3bc <adc_read+0x6>
     3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <adc_read+0xc>
	_delay_us(50);
	uint8_t retreived_value = adc_adr[channel];
     3c2:	e8 2f       	mov	r30, r24
     3c4:	f0 e0       	ldi	r31, 0x00	; 0
     3c6:	fc 5e       	subi	r31, 0xEC	; 236
     3c8:	80 81       	ld	r24, Z
	return retreived_value;
	
}
     3ca:	08 95       	ret

000003cc <CAN_init>:
#include "MCPkontroll.h"

uint8_t rx_flag = 0;

void CAN_init(){
	MCP_init();
     3cc:	0e 94 b3 02 	call	0x566	; 0x566 <MCP_init>
	// Turn mask/filters off
	MCP_bit_mod(MCP_RXB0CTRL, 0b01100100, 0xFF);
     3d0:	4f ef       	ldi	r20, 0xFF	; 255
     3d2:	64 e6       	ldi	r22, 0x64	; 100
     3d4:	80 e6       	ldi	r24, 0x60	; 96
     3d6:	0e 94 82 02 	call	0x504	; 0x504 <MCP_bit_mod>
	
	// Set LoopBack mode on
	MCP_bit_mod(MCP_CANCTRL, MODE_MASK, MODE_NORMAL); // MCP_CANCTRL = MODE_LOOPBACK;
     3da:	40 e0       	ldi	r20, 0x00	; 0
     3dc:	60 ee       	ldi	r22, 0xE0	; 224
     3de:	8f e0       	ldi	r24, 0x0F	; 15
     3e0:	0e 94 82 02 	call	0x504	; 0x504 <MCP_bit_mod>
	
	// Enable interrupt when a valid message has been received
	MCP_bit_mod(MCP_CANINTE, MCP_RX0IF, 1);
     3e4:	41 e0       	ldi	r20, 0x01	; 1
     3e6:	61 e0       	ldi	r22, 0x01	; 1
     3e8:	8b e2       	ldi	r24, 0x2B	; 43
     3ea:	0e 94 82 02 	call	0x504	; 0x504 <MCP_bit_mod>
	if ((MCP_read(MCP_CANSTAT) & MODE_MASK) != MODE_NORMAL)
     3ee:	8e e0       	ldi	r24, 0x0E	; 14
     3f0:	0e 94 6e 02 	call	0x4dc	; 0x4dc <MCP_read>
     3f4:	80 7e       	andi	r24, 0xE0	; 224
     3f6:	21 f0       	breq	.+8      	; 0x400 <CAN_init+0x34>
	{
		printf("NOT in loopback mode!\n");
     3f8:	86 e0       	ldi	r24, 0x06	; 6
     3fa:	91 e0       	ldi	r25, 0x01	; 1
     3fc:	0e 94 52 05 	call	0xaa4	; 0xaa4 <puts>
	}
	
	char temp = MCP_read(MCP_CANCTRL);
     400:	8f e0       	ldi	r24, 0x0F	; 15
     402:	0e 94 6e 02 	call	0x4dc	; 0x4dc <MCP_read>
     406:	08 95       	ret

00000408 <CAN_int_vect>:
	}
}

void CAN_int_vect(void){
	// clear interrupt flag in buffer 0
	MCP_bit_mod(MCP_CANINTF, 0x01, 0);
     408:	40 e0       	ldi	r20, 0x00	; 0
     40a:	61 e0       	ldi	r22, 0x01	; 1
     40c:	8c e2       	ldi	r24, 0x2C	; 44
     40e:	0e 94 82 02 	call	0x504	; 0x504 <MCP_bit_mod>
	rx_flag = 1;
     412:	81 e0       	ldi	r24, 0x01	; 1
     414:	80 93 7a 01 	sts	0x017A, r24
     418:	08 95       	ret

0000041a <__vector_1>:
	}
	return new_message;
}

// Interrupt service
ISR(INT0_vect){
     41a:	1f 92       	push	r1
     41c:	0f 92       	push	r0
     41e:	0f b6       	in	r0, 0x3f	; 63
     420:	0f 92       	push	r0
     422:	11 24       	eor	r1, r1
     424:	2f 93       	push	r18
     426:	3f 93       	push	r19
     428:	4f 93       	push	r20
     42a:	5f 93       	push	r21
     42c:	6f 93       	push	r22
     42e:	7f 93       	push	r23
     430:	8f 93       	push	r24
     432:	9f 93       	push	r25
     434:	af 93       	push	r26
     436:	bf 93       	push	r27
     438:	ef 93       	push	r30
     43a:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     43c:	83 ec       	ldi	r24, 0xC3	; 195
     43e:	99 e0       	ldi	r25, 0x09	; 9
     440:	01 97       	sbiw	r24, 0x01	; 1
     442:	f1 f7       	brne	.-4      	; 0x440 <__vector_1+0x26>
     444:	00 c0       	rjmp	.+0      	; 0x446 <__vector_1+0x2c>
     446:	00 00       	nop
	_delay_ms(10);
	CAN_int_vect();
     448:	0e 94 04 02 	call	0x408	; 0x408 <CAN_int_vect>
     44c:	ff 91       	pop	r31
     44e:	ef 91       	pop	r30
     450:	bf 91       	pop	r27
     452:	af 91       	pop	r26
     454:	9f 91       	pop	r25
     456:	8f 91       	pop	r24
     458:	7f 91       	pop	r23
     45a:	6f 91       	pop	r22
     45c:	5f 91       	pop	r21
     45e:	4f 91       	pop	r20
     460:	3f 91       	pop	r19
     462:	2f 91       	pop	r18
     464:	0f 90       	pop	r0
     466:	0f be       	out	0x3f, r0	; 63
     468:	0f 90       	pop	r0
     46a:	1f 90       	pop	r1
     46c:	18 95       	reti

0000046e <read_slider_position>:
	global_joystick.y_pos = y_pos;
	//printf("X: %i, Y: %i \n", x_pos,y_pos);

	return global_joystick;
}
struct Slider read_slider_position(uint8_t channel_one, uint8_t channel_two){
     46e:	cf 92       	push	r12
     470:	df 92       	push	r13
     472:	ef 92       	push	r14
     474:	ff 92       	push	r15
     476:	cf 93       	push	r28
     478:	c6 2f       	mov	r28, r22
	int slider1 = adc_read(channel_one)*0.392156862745098;
     47a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <adc_read>
     47e:	f8 2e       	mov	r15, r24
	int slider2 = adc_read(channel_two)*0.392156862745098;
     480:	8c 2f       	mov	r24, r28
     482:	0e 94 db 01 	call	0x3b6	; 0x3b6 <adc_read>
     486:	c8 2f       	mov	r28, r24
	//printf("X: %i, Y: %i \n", x_pos,y_pos);

	return global_joystick;
}
struct Slider read_slider_position(uint8_t channel_one, uint8_t channel_two){
	int slider1 = adc_read(channel_one)*0.392156862745098;
     488:	6f 2d       	mov	r22, r15
     48a:	70 e0       	ldi	r23, 0x00	; 0
     48c:	80 e0       	ldi	r24, 0x00	; 0
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	0e 94 04 04 	call	0x808	; 0x808 <__floatsisf>
     494:	29 ec       	ldi	r18, 0xC9	; 201
     496:	38 ec       	ldi	r19, 0xC8	; 200
     498:	48 ec       	ldi	r20, 0xC8	; 200
     49a:	5e e3       	ldi	r21, 0x3E	; 62
     49c:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__mulsf3>
     4a0:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__fixsfsi>
	int slider2 = adc_read(channel_two)*0.392156862745098;
	struct Slider global_slider;
	global_slider.slider1 = slider1;
	global_slider.slider2 = slider2;
	return global_slider;
     4a4:	6b 01       	movw	r12, r22

	return global_joystick;
}
struct Slider read_slider_position(uint8_t channel_one, uint8_t channel_two){
	int slider1 = adc_read(channel_one)*0.392156862745098;
	int slider2 = adc_read(channel_two)*0.392156862745098;
     4a6:	6c 2f       	mov	r22, r28
     4a8:	70 e0       	ldi	r23, 0x00	; 0
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	0e 94 04 04 	call	0x808	; 0x808 <__floatsisf>
     4b2:	29 ec       	ldi	r18, 0xC9	; 201
     4b4:	38 ec       	ldi	r19, 0xC8	; 200
     4b6:	48 ec       	ldi	r20, 0xC8	; 200
     4b8:	5e e3       	ldi	r21, 0x3E	; 62
     4ba:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__mulsf3>
     4be:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__fixsfsi>
	struct Slider global_slider;
	global_slider.slider1 = slider1;
	global_slider.slider2 = slider2;
	return global_slider;
     4c2:	7b 01       	movw	r14, r22
	//printf("Slider 1: %i, Slider 2: %i \n", slider1,slider2);
}
     4c4:	c7 01       	movw	r24, r14
     4c6:	b6 01       	movw	r22, r12
     4c8:	cf 91       	pop	r28
     4ca:	ff 90       	pop	r15
     4cc:	ef 90       	pop	r14
     4ce:	df 90       	pop	r13
     4d0:	cf 90       	pop	r12
     4d2:	08 95       	ret

000004d4 <select_CAN>:
#else
	#define DD_SS PB4
#endif

void select_CAN(void){
	clear_bit(PORTB, DD_SS);
     4d4:	c4 98       	cbi	0x18, 4	; 24
     4d6:	08 95       	ret

000004d8 <deselect_CAN>:
}

void deselect_CAN(void){
	set_bit(PORTB, DD_SS);
     4d8:	c4 9a       	sbi	0x18, 4	; 24
     4da:	08 95       	ret

000004dc <MCP_read>:
	SPI_MasterTransmit(address);
	SPI_MasterTransmit(data);
	deselect_CAN();
}

uint8_t MCP_read(uint8_t address){
     4dc:	cf 93       	push	r28
     4de:	c8 2f       	mov	r28, r24
	uint8_t temp;
	
	select_CAN();
     4e0:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <select_CAN>
	
	SPI_MasterTransmit(MCP_READ);
     4e4:	83 e0       	ldi	r24, 0x03	; 3
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	0e 94 bd 02 	call	0x57a	; 0x57a <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
     4ec:	8c 2f       	mov	r24, r28
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	0e 94 bd 02 	call	0x57a	; 0x57a <SPI_MasterTransmit>
	temp = SPI_MasterReceive();
     4f4:	0e 94 c1 02 	call	0x582	; 0x582 <SPI_MasterReceive>
     4f8:	c8 2f       	mov	r28, r24
	deselect_CAN();
     4fa:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <deselect_CAN>
	// printf("I MCP_read, temp = %x, address = %x \n", temp, address);
	return temp;
}
     4fe:	8c 2f       	mov	r24, r28
     500:	cf 91       	pop	r28
     502:	08 95       	ret

00000504 <MCP_bit_mod>:
	SPI_MasterTransmit(MCP_READ_STATUS);
	deselect_CAN();
	return SPI_MasterReceive();
}

void MCP_bit_mod(uint8_t address, uint8_t m_byte, uint8_t d_byte){
     504:	1f 93       	push	r17
     506:	cf 93       	push	r28
     508:	df 93       	push	r29
     50a:	18 2f       	mov	r17, r24
     50c:	d6 2f       	mov	r29, r22
     50e:	c4 2f       	mov	r28, r20
	select_CAN();
     510:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <select_CAN>
	SPI_MasterTransmit(MCP_BITMOD);
     514:	85 e0       	ldi	r24, 0x05	; 5
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	0e 94 bd 02 	call	0x57a	; 0x57a <SPI_MasterTransmit>
	SPI_MasterTransmit(address);
     51c:	81 2f       	mov	r24, r17
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	0e 94 bd 02 	call	0x57a	; 0x57a <SPI_MasterTransmit>
	SPI_MasterTransmit(m_byte);
     524:	8d 2f       	mov	r24, r29
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	0e 94 bd 02 	call	0x57a	; 0x57a <SPI_MasterTransmit>
	SPI_MasterTransmit(d_byte);
     52c:	8c 2f       	mov	r24, r28
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	0e 94 bd 02 	call	0x57a	; 0x57a <SPI_MasterTransmit>
	deselect_CAN();
     534:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <deselect_CAN>
}
     538:	df 91       	pop	r29
     53a:	cf 91       	pop	r28
     53c:	1f 91       	pop	r17
     53e:	08 95       	ret

00000540 <MCP_reset>:

void MCP_reset(){
	select_CAN();
     540:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <select_CAN>
	SPI_MasterTransmit(MCP_RESET);
     544:	80 ec       	ldi	r24, 0xC0	; 192
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	0e 94 bd 02 	call	0x57a	; 0x57a <SPI_MasterTransmit>
	deselect_CAN();
     54c:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <deselect_CAN>
	uint8_t mode = MCP_read(MCP_CANSTAT);
     550:	8e e0       	ldi	r24, 0x0E	; 14
     552:	0e 94 6e 02 	call	0x4dc	; 0x4dc <MCP_read>
	if ((mode&MODE_MASK)!=MODE_CONFIG)
     556:	80 7e       	andi	r24, 0xE0	; 224
     558:	80 38       	cpi	r24, 0x80	; 128
     55a:	21 f0       	breq	.+8      	; 0x564 <MCP_reset+0x24>
	{
		printf("Not in config after reset\n");
     55c:	8c e1       	ldi	r24, 0x1C	; 28
     55e:	91 e0       	ldi	r25, 0x01	; 1
     560:	0e 94 52 05 	call	0xaa4	; 0xaa4 <puts>
     564:	08 95       	ret

00000566 <MCP_init>:
void deselect_CAN(void){
	set_bit(PORTB, DD_SS);
}

void MCP_init(){
	SPI_MasterInit();
     566:	0e 94 b8 02 	call	0x570	; 0x570 <SPI_MasterInit>
	MCP_reset();
     56a:	0e 94 a0 02 	call	0x540	; 0x540 <MCP_reset>
     56e:	08 95       	ret

00000570 <SPI_MasterInit>:

#include "SPI.h"

void SPI_MasterInit(void){
	/* Set MOSI,SCK and SS output, all others input */
	DDRB = (1<<DD_MOSI) | (1<<DD_SCK) | (1 << DD_SS) | (1 << PB0);
     570:	81 eb       	ldi	r24, 0xB1	; 177
     572:	87 bb       	out	0x17, r24	; 23
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE) | (1<<MSTR) | (1<<SPR0);
     574:	81 e5       	ldi	r24, 0x51	; 81
     576:	8d b9       	out	0x0d, r24	; 13
     578:	08 95       	ret

0000057a <SPI_MasterTransmit>:
}
void SPI_MasterTransmit(char cData){
	/* Start transmission */
	SPDR = cData;
     57a:	8f b9       	out	0x0f, r24	; 15
	
	/* Wait for transmission complete */
	while	(!(SPSR & (1<<SPIF)));
     57c:	77 9b       	sbis	0x0e, 7	; 14
     57e:	fe cf       	rjmp	.-4      	; 0x57c <SPI_MasterTransmit+0x2>
}
     580:	08 95       	ret

00000582 <SPI_MasterReceive>:

char SPI_MasterReceive(void){
	/* Send dummy data to read from slave */	
	SPI_MasterTransmit(0);
     582:	80 e0       	ldi	r24, 0x00	; 0
     584:	0e 94 bd 02 	call	0x57a	; 0x57a <SPI_MasterTransmit>
	
	/* Wait for reception complete */
	// while	(!(SPSR & (1<<SPIF)));
	
	/* Return data register */
	return	SPDR;
     588:	8f b1       	in	r24, 0x0f	; 15
     58a:	08 95       	ret

0000058c <USART_Transmit>:
}

void USART_Transmit( unsigned char data ){

// Wait for empty transmit buffer
	while( !( UCSR0A & (1<<UDRE0)) );
     58c:	5d 9b       	sbis	0x0b, 5	; 11
     58e:	fe cf       	rjmp	.-4      	; 0x58c <USART_Transmit>
  
//Put data into buffer, sends the data
	UDR0 = data;
     590:	8c b9       	out	0x0c, r24	; 12
     592:	08 95       	ret

00000594 <USART_Receive>:
}

unsigned char USART_Receive( void ){

//Wait for data to be received
	while ( !(UCSR0A & (1<<RXC0)) );
     594:	5f 9b       	sbis	0x0b, 7	; 11
     596:	fe cf       	rjmp	.-4      	; 0x594 <USART_Receive>
//Get and return received data from buffer
	return UDR0;
     598:	8c b1       	in	r24, 0x0c	; 12
     59a:	08 95       	ret

0000059c <USART_Init>:
	//set_bit(SFIOR,XMM2);
	////set_bit(SFIOR,XMM0);
//}
void USART_Init( unsigned int ubrr){
	// Set baud rate
	UBRR0H = (unsigned char) (ubrr>>8);
     59c:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) ubrr;
     59e:	89 b9       	out	0x09, r24	; 9
	
	/* Enable receiver and transmitter	*/
	UCSR0B = (1<<TXEN0)|(1<<RXEN0);
     5a0:	88 e1       	ldi	r24, 0x18	; 24
     5a2:	8a b9       	out	0x0a, r24	; 10
	fdevopen(USART_Transmit,USART_Receive);
     5a4:	6a ec       	ldi	r22, 0xCA	; 202
     5a6:	72 e0       	ldi	r23, 0x02	; 2
     5a8:	86 ec       	ldi	r24, 0xC6	; 198
     5aa:	92 e0       	ldi	r25, 0x02	; 2
     5ac:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <fdevopen>
     5b0:	08 95       	ret

000005b2 <main>:
volatile char* oled_adresse = 0x1200;
volatile char* adc_adresse = 0x1400;
volatile char* ram_adresse = 0x1800;
int main(void)
{
	printf("inni main");
     5b2:	86 e3       	ldi	r24, 0x36	; 54
     5b4:	91 e0       	ldi	r25, 0x01	; 1
     5b6:	9f 93       	push	r25
     5b8:	8f 93       	push	r24
     5ba:	0e 94 3e 05 	call	0xa7c	; 0xa7c <printf>
	EXT_MEM_Init();
     5be:	0e 94 ca 03 	call	0x794	; 0x794 <EXT_MEM_Init>
	USART_Init(31);
     5c2:	8f e1       	ldi	r24, 0x1F	; 31
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	0e 94 ce 02 	call	0x59c	; 0x59c <USART_Init>
	oled_init();
     5ca:	0e 94 0d 03 	call	0x61a	; 0x61a <oled_init>
	oled_reset();
     5ce:	0e 94 47 03 	call	0x68e	; 0x68e <oled_reset>
	adc_init();
     5d2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <adc_init>
	initialize_menu();
     5d6:	0e 94 bc 03 	call	0x778	; 0x778 <initialize_menu>
	
	DDRB = 0b00000000;
     5da:	17 ba       	out	0x17, r1	; 23
	
	CAN_init();
     5dc:	0e 94 e6 01 	call	0x3cc	; 0x3cc <CAN_init>
     5e0:	0f 90       	pop	r0
     5e2:	0f 90       	pop	r0
		//slider_button();
		//joystick_pressed();
		//joystick_navigate_vertical();
		//struct Joystick temp = read_joystick_position(channel1,channel2);
		struct Slider temp2 = read_slider_position(channel3,channel4);
		printf("slider1: %i, slider2: %i \n",temp2.slider1,temp2.slider2);
     5e4:	c0 e4       	ldi	r28, 0x40	; 64
     5e6:	d1 e0       	ldi	r29, 0x01	; 1
		
		//slider_button();
		//joystick_pressed();
		//joystick_navigate_vertical();
		//struct Joystick temp = read_joystick_position(channel1,channel2);
		struct Slider temp2 = read_slider_position(channel3,channel4);
     5e8:	67 e0       	ldi	r22, 0x07	; 7
     5ea:	86 e0       	ldi	r24, 0x06	; 6
     5ec:	0e 94 37 02 	call	0x46e	; 0x46e <read_slider_position>
		printf("slider1: %i, slider2: %i \n",temp2.slider1,temp2.slider2);
     5f0:	9f 93       	push	r25
     5f2:	8f 93       	push	r24
     5f4:	7f 93       	push	r23
     5f6:	6f 93       	push	r22
     5f8:	df 93       	push	r29
     5fa:	cf 93       	push	r28
     5fc:	0e 94 3e 05 	call	0xa7c	; 0xa7c <printf>
     600:	87 ea       	ldi	r24, 0xA7	; 167
     602:	91 e6       	ldi	r25, 0x61	; 97
     604:	01 97       	sbiw	r24, 0x01	; 1
     606:	f1 f7       	brne	.-4      	; 0x604 <main+0x52>
     608:	00 c0       	rjmp	.+0      	; 0x60a <main+0x58>
     60a:	00 00       	nop
     60c:	0f 90       	pop	r0
     60e:	0f 90       	pop	r0
     610:	0f 90       	pop	r0
     612:	0f 90       	pop	r0
     614:	0f 90       	pop	r0
     616:	0f 90       	pop	r0
     618:	e7 cf       	rjmp	.-50     	; 0x5e8 <main+0x36>

0000061a <oled_init>:
#include "../../delte filer/joystick.h"
#include "../../delte filer/fonts.h"
int coloumn_counter = 0;
void write_c(uint8_t command){
	volatile char *oled_c = (char *) 0x1000;
	oled_c[0] = command;
     61a:	e0 e0       	ldi	r30, 0x00	; 0
     61c:	f0 e1       	ldi	r31, 0x10	; 16
     61e:	8e ea       	ldi	r24, 0xAE	; 174
     620:	80 83       	st	Z, r24
     622:	81 ea       	ldi	r24, 0xA1	; 161
     624:	80 83       	st	Z, r24
     626:	8a ed       	ldi	r24, 0xDA	; 218
     628:	80 83       	st	Z, r24
     62a:	82 e1       	ldi	r24, 0x12	; 18
     62c:	80 83       	st	Z, r24
     62e:	88 ec       	ldi	r24, 0xC8	; 200
     630:	80 83       	st	Z, r24
     632:	88 ea       	ldi	r24, 0xA8	; 168
     634:	80 83       	st	Z, r24
     636:	8f e3       	ldi	r24, 0x3F	; 63
     638:	80 83       	st	Z, r24
     63a:	85 ed       	ldi	r24, 0xD5	; 213
     63c:	80 83       	st	Z, r24
     63e:	80 e8       	ldi	r24, 0x80	; 128
     640:	80 83       	st	Z, r24
     642:	81 e8       	ldi	r24, 0x81	; 129
     644:	80 83       	st	Z, r24
     646:	80 e5       	ldi	r24, 0x50	; 80
     648:	80 83       	st	Z, r24
     64a:	89 ed       	ldi	r24, 0xD9	; 217
     64c:	80 83       	st	Z, r24
     64e:	81 e2       	ldi	r24, 0x21	; 33
     650:	80 83       	st	Z, r24
     652:	80 e2       	ldi	r24, 0x20	; 32
     654:	80 83       	st	Z, r24
     656:	82 e0       	ldi	r24, 0x02	; 2
     658:	80 83       	st	Z, r24
     65a:	8b ed       	ldi	r24, 0xDB	; 219
     65c:	80 83       	st	Z, r24
     65e:	80 e3       	ldi	r24, 0x30	; 48
     660:	80 83       	st	Z, r24
     662:	8d ea       	ldi	r24, 0xAD	; 173
     664:	80 83       	st	Z, r24
     666:	10 82       	st	Z, r1
     668:	84 ea       	ldi	r24, 0xA4	; 164
     66a:	80 83       	st	Z, r24
     66c:	86 ea       	ldi	r24, 0xA6	; 166
     66e:	80 83       	st	Z, r24
     670:	8f ea       	ldi	r24, 0xAF	; 175
     672:	80 83       	st	Z, r24
     674:	08 95       	ret

00000676 <oled_clear_page>:
		oled_clear_page(i);
	}
	//oled_init();
}
void oled_goto_page(uint8_t page){
	uint8_t goto2 = 0xb0+page;
     676:	80 55       	subi	r24, 0x50	; 80
#include "../../delte filer/joystick.h"
#include "../../delte filer/fonts.h"
int coloumn_counter = 0;
void write_c(uint8_t command){
	volatile char *oled_c = (char *) 0x1000;
	oled_c[0] = command;
     678:	80 93 00 10 	sts	0x1000, r24
     67c:	80 e8       	ldi	r24, 0x80	; 128
     67e:	90 e0       	ldi	r25, 0x00	; 0
}
void write_d(uint8_t data){
	volatile char *oled_d = (char *) 0x1200;
	oled_d[0] = data;
     680:	e0 e0       	ldi	r30, 0x00	; 0
     682:	f2 e1       	ldi	r31, 0x12	; 18
     684:	10 82       	st	Z, r1
     686:	01 97       	sbiw	r24, 0x01	; 1
	write_c(coloumn_start);
	write_c(coloumn_end);
}
void oled_clear_page(page){
	oled_goto_page(page);
		for (int i = 0;i<128;i++){
     688:	00 97       	sbiw	r24, 0x00	; 0
     68a:	e1 f7       	brne	.-8      	; 0x684 <oled_clear_page+0xe>
			write_d(0x00);
		}
}
     68c:	08 95       	ret

0000068e <oled_reset>:
	write_c(0xa4);        //out  follows  RAM  content
	write_c(0xa6);        //set  normal  display
	write_c(0xaf);        //  display  on
}

void oled_reset(void){
     68e:	cf 93       	push	r28
     690:	df 93       	push	r29
	for (int i=0; i<8;i++){
     692:	c0 e0       	ldi	r28, 0x00	; 0
     694:	d0 e0       	ldi	r29, 0x00	; 0
		oled_clear_page(i);
     696:	ce 01       	movw	r24, r28
     698:	0e 94 3b 03 	call	0x676	; 0x676 <oled_clear_page>
	write_c(0xa6);        //set  normal  display
	write_c(0xaf);        //  display  on
}

void oled_reset(void){
	for (int i=0; i<8;i++){
     69c:	21 96       	adiw	r28, 0x01	; 1
     69e:	c8 30       	cpi	r28, 0x08	; 8
     6a0:	d1 05       	cpc	r29, r1
     6a2:	c9 f7       	brne	.-14     	; 0x696 <oled_reset+0x8>
		oled_clear_page(i);
	}
	//oled_init();
}
     6a4:	df 91       	pop	r29
     6a6:	cf 91       	pop	r28
     6a8:	08 95       	ret

000006aa <oled_pos>:
void oled_goto_page(uint8_t page){
	uint8_t goto2 = 0xb0+page;
     6aa:	80 55       	subi	r24, 0x50	; 80
#include "../../delte filer/joystick.h"
#include "../../delte filer/fonts.h"
int coloumn_counter = 0;
void write_c(uint8_t command){
	volatile char *oled_c = (char *) 0x1000;
	oled_c[0] = command;
     6ac:	e0 e0       	ldi	r30, 0x00	; 0
     6ae:	f0 e1       	ldi	r31, 0x10	; 16
     6b0:	80 83       	st	Z, r24
     6b2:	81 e2       	ldi	r24, 0x21	; 33
     6b4:	80 83       	st	Z, r24
     6b6:	60 83       	st	Z, r22
     6b8:	40 83       	st	Z, r20
     6ba:	08 95       	ret

000006bc <oled_print_letter>:
		for (int i = 0;i<128;i++){
			write_d(0x00);
		}
}

void oled_print_letter(char letter,uint8_t page, uint8_t coloumn_start,uint8_t coloumn_end){
     6bc:	cf 93       	push	r28
     6be:	c8 2f       	mov	r28, r24
     6c0:	86 2f       	mov	r24, r22
     6c2:	64 2f       	mov	r22, r20
	
	//uint8_t char_alfa[8] = font8[34];
	oled_pos(page, coloumn_start, coloumn_end);
     6c4:	42 2f       	mov	r20, r18
     6c6:	0e 94 55 03 	call	0x6aa	; 0x6aa <oled_pos>
     6ca:	ec 2f       	mov	r30, r28
     6cc:	f0 e0       	ldi	r31, 0x00	; 0
     6ce:	ee 0f       	add	r30, r30
     6d0:	ff 1f       	adc	r31, r31
     6d2:	ee 0f       	add	r30, r30
     6d4:	ff 1f       	adc	r31, r31
     6d6:	ee 0f       	add	r30, r30
     6d8:	ff 1f       	adc	r31, r31
     6da:	e0 59       	subi	r30, 0x90	; 144
     6dc:	f0 40       	sbci	r31, 0x00	; 0
	int ltr;
	for (int i = 0;i<8;i++){
     6de:	80 e0       	ldi	r24, 0x00	; 0
     6e0:	90 e0       	ldi	r25, 0x00	; 0
	volatile char *oled_c = (char *) 0x1000;
	oled_c[0] = command;
}
void write_d(uint8_t data){
	volatile char *oled_d = (char *) 0x1200;
	oled_d[0] = data;
     6e2:	a0 e0       	ldi	r26, 0x00	; 0
     6e4:	b2 e1       	ldi	r27, 0x12	; 18
	
	//uint8_t char_alfa[8] = font8[34];
	oled_pos(page, coloumn_start, coloumn_end);
	int ltr;
	for (int i = 0;i<8;i++){
		ltr = pgm_read_byte(&(font8[letter-32][i]));
     6e6:	24 91       	lpm	r18, Z
	volatile char *oled_c = (char *) 0x1000;
	oled_c[0] = command;
}
void write_d(uint8_t data){
	volatile char *oled_d = (char *) 0x1200;
	oled_d[0] = data;
     6e8:	2c 93       	st	X, r18
void oled_print_letter(char letter,uint8_t page, uint8_t coloumn_start,uint8_t coloumn_end){
	
	//uint8_t char_alfa[8] = font8[34];
	oled_pos(page, coloumn_start, coloumn_end);
	int ltr;
	for (int i = 0;i<8;i++){
     6ea:	01 96       	adiw	r24, 0x01	; 1
     6ec:	31 96       	adiw	r30, 0x01	; 1
     6ee:	88 30       	cpi	r24, 0x08	; 8
     6f0:	91 05       	cpc	r25, r1
     6f2:	c9 f7       	brne	.-14     	; 0x6e6 <oled_print_letter+0x2a>
		ltr = pgm_read_byte(&(font8[letter-32][i]));
		write_d(ltr);
	}
}
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <oled_print>:
void oled_pos(uint8_t page,uint8_t coloumn_start,uint8_t coloumn_end){
	oled_goto_page(page);
	oled_goto_coloumn(coloumn_start,coloumn_end);
}
void oled_print(char* word ){
     6f8:	bf 92       	push	r11
     6fa:	cf 92       	push	r12
     6fc:	df 92       	push	r13
     6fe:	ef 92       	push	r14
     700:	ff 92       	push	r15
     702:	0f 93       	push	r16
     704:	1f 93       	push	r17
     706:	cf 93       	push	r28
     708:	df 93       	push	r29
     70a:	fc 01       	movw	r30, r24
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x01;	
	for (int i = 0; word[i] != '\0'; i++){
     70c:	80 81       	ld	r24, Z
     70e:	88 23       	and	r24, r24
     710:	49 f1       	breq	.+82     	; 0x764 <oled_print+0x6c>
     712:	ef 01       	movw	r28, r30
     714:	21 96       	adiw	r28, 0x01	; 1
     716:	8f 01       	movw	r16, r30
	oled_goto_coloumn(coloumn_start,coloumn_end);
}
void oled_print(char* word ){
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x01;	
     718:	dd 24       	eor	r13, r13
     71a:	d3 94       	inc	r13
	oled_goto_page(page);
	oled_goto_coloumn(coloumn_start,coloumn_end);
}
void oled_print(char* word ){
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
     71c:	0f 2e       	mov	r0, r31
     71e:	f1 e1       	ldi	r31, 0x11	; 17
     720:	ef 2e       	mov	r14, r31
     722:	f0 2d       	mov	r31, r0
void oled_pos(uint8_t page,uint8_t coloumn_start,uint8_t coloumn_end){
	oled_goto_page(page);
	oled_goto_coloumn(coloumn_start,coloumn_end);
}
void oled_print(char* word ){
	uint8_t coloumn_start = 0x09;
     724:	0f 2e       	mov	r0, r31
     726:	f9 e0       	ldi	r31, 0x09	; 9
     728:	ff 2e       	mov	r15, r31
     72a:	f0 2d       	mov	r31, r0
		coloumn_end += 0x09;
		//printf("Bokstaven er: %c , coloumn_start: %u , coloumn_end: %u \n",word[i], coloumn_start, coloumn_end);
		if(word[i] == 32){
			page +=0x01;
			coloumn_start = 0x09;
			coloumn_end = 0x11;
     72c:	0f 2e       	mov	r0, r31
     72e:	f1 e1       	ldi	r31, 0x11	; 17
     730:	bf 2e       	mov	r11, r31
     732:	f0 2d       	mov	r31, r0
		coloumn_start += 0x09;
		coloumn_end += 0x09;
		//printf("Bokstaven er: %c , coloumn_start: %u , coloumn_end: %u \n",word[i], coloumn_start, coloumn_end);
		if(word[i] == 32){
			page +=0x01;
			coloumn_start = 0x09;
     734:	0f 2e       	mov	r0, r31
     736:	f9 e0       	ldi	r31, 0x09	; 9
     738:	cf 2e       	mov	r12, r31
     73a:	f0 2d       	mov	r31, r0
void oled_print(char* word ){
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x01;	
	for (int i = 0; word[i] != '\0'; i++){
		oled_print_letter(word[i], page, coloumn_start,coloumn_end);
     73c:	2e 2d       	mov	r18, r14
     73e:	4f 2d       	mov	r20, r15
     740:	6d 2d       	mov	r22, r13
     742:	0e 94 5e 03 	call	0x6bc	; 0x6bc <oled_print_letter>
		coloumn_start += 0x09;
		coloumn_end += 0x09;
		//printf("Bokstaven er: %c , coloumn_start: %u , coloumn_end: %u \n",word[i], coloumn_start, coloumn_end);
		if(word[i] == 32){
     746:	f8 01       	movw	r30, r16
     748:	80 81       	ld	r24, Z
     74a:	80 32       	cpi	r24, 0x20	; 32
     74c:	21 f0       	breq	.+8      	; 0x756 <oled_print+0x5e>
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x01;	
	for (int i = 0; word[i] != '\0'; i++){
		oled_print_letter(word[i], page, coloumn_start,coloumn_end);
		coloumn_start += 0x09;
     74e:	f9 e0       	ldi	r31, 0x09	; 9
     750:	ff 0e       	add	r15, r31
		coloumn_end += 0x09;
     752:	ef 0e       	add	r14, r31
     754:	03 c0       	rjmp	.+6      	; 0x75c <oled_print+0x64>
		//printf("Bokstaven er: %c , coloumn_start: %u , coloumn_end: %u \n",word[i], coloumn_start, coloumn_end);
		if(word[i] == 32){
			page +=0x01;
     756:	d3 94       	inc	r13
			coloumn_start = 0x09;
			coloumn_end = 0x11;
     758:	eb 2c       	mov	r14, r11
		coloumn_start += 0x09;
		coloumn_end += 0x09;
		//printf("Bokstaven er: %c , coloumn_start: %u , coloumn_end: %u \n",word[i], coloumn_start, coloumn_end);
		if(word[i] == 32){
			page +=0x01;
			coloumn_start = 0x09;
     75a:	fc 2c       	mov	r15, r12
}
void oled_print(char* word ){
	uint8_t coloumn_start = 0x09;
	uint8_t coloumn_end = 0x11;
	uint8_t page = 0x01;	
	for (int i = 0; word[i] != '\0'; i++){
     75c:	8e 01       	movw	r16, r28
     75e:	89 91       	ld	r24, Y+
     760:	81 11       	cpse	r24, r1
     762:	ec cf       	rjmp	.-40     	; 0x73c <oled_print+0x44>
			coloumn_start = 0x09;
			coloumn_end = 0x11;
		}
	}
	
}
     764:	df 91       	pop	r29
     766:	cf 91       	pop	r28
     768:	1f 91       	pop	r17
     76a:	0f 91       	pop	r16
     76c:	ff 90       	pop	r15
     76e:	ef 90       	pop	r14
     770:	df 90       	pop	r13
     772:	cf 90       	pop	r12
     774:	bf 90       	pop	r11
     776:	08 95       	ret

00000778 <initialize_menu>:
	oled_goto_page(0x00);
	oled_goto_coloumn(0x00,0x00);
}

void initialize_menu(){
	oled_print("Meny1 Meny2 Meny3 Meny4 Meny5");
     778:	8b e5       	ldi	r24, 0x5B	; 91
     77a:	91 e0       	ldi	r25, 0x01	; 1
     77c:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <oled_print>
	oled_print_letter('#',0x01,0x00,0x08);
     780:	28 e0       	ldi	r18, 0x08	; 8
     782:	40 e0       	ldi	r20, 0x00	; 0
     784:	61 e0       	ldi	r22, 0x01	; 1
     786:	83 e2       	ldi	r24, 0x23	; 35
     788:	0e 94 5e 03 	call	0x6bc	; 0x6bc <oled_print_letter>
	pos.current_page = 0x01;
     78c:	81 e0       	ldi	r24, 0x01	; 1
     78e:	80 93 7b 01 	sts	0x017B, r24
     792:	08 95       	ret

00000794 <EXT_MEM_Init>:
#include <avr/io.h>
#include <stdlib.h>
#include "../../delte filer/uart.h"

void EXT_MEM_Init(void){
	set_bit(MCUCR,SRE);
     794:	85 b7       	in	r24, 0x35	; 53
     796:	80 68       	ori	r24, 0x80	; 128
     798:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR,XMM2);
     79a:	80 b7       	in	r24, 0x30	; 48
     79c:	80 62       	ori	r24, 0x20	; 32
     79e:	80 bf       	out	0x30, r24	; 48
     7a0:	08 95       	ret

000007a2 <__fixsfsi>:
     7a2:	04 d0       	rcall	.+8      	; 0x7ac <__fixunssfsi>
     7a4:	68 94       	set
     7a6:	b1 11       	cpse	r27, r1
     7a8:	8d c0       	rjmp	.+282    	; 0x8c4 <__fp_szero>
     7aa:	08 95       	ret

000007ac <__fixunssfsi>:
     7ac:	70 d0       	rcall	.+224    	; 0x88e <__fp_splitA>
     7ae:	88 f0       	brcs	.+34     	; 0x7d2 <__fixunssfsi+0x26>
     7b0:	9f 57       	subi	r25, 0x7F	; 127
     7b2:	90 f0       	brcs	.+36     	; 0x7d8 <__fixunssfsi+0x2c>
     7b4:	b9 2f       	mov	r27, r25
     7b6:	99 27       	eor	r25, r25
     7b8:	b7 51       	subi	r27, 0x17	; 23
     7ba:	a0 f0       	brcs	.+40     	; 0x7e4 <__fixunssfsi+0x38>
     7bc:	d1 f0       	breq	.+52     	; 0x7f2 <__fixunssfsi+0x46>
     7be:	66 0f       	add	r22, r22
     7c0:	77 1f       	adc	r23, r23
     7c2:	88 1f       	adc	r24, r24
     7c4:	99 1f       	adc	r25, r25
     7c6:	1a f0       	brmi	.+6      	; 0x7ce <__fixunssfsi+0x22>
     7c8:	ba 95       	dec	r27
     7ca:	c9 f7       	brne	.-14     	; 0x7be <__fixunssfsi+0x12>
     7cc:	12 c0       	rjmp	.+36     	; 0x7f2 <__fixunssfsi+0x46>
     7ce:	b1 30       	cpi	r27, 0x01	; 1
     7d0:	81 f0       	breq	.+32     	; 0x7f2 <__fixunssfsi+0x46>
     7d2:	77 d0       	rcall	.+238    	; 0x8c2 <__fp_zero>
     7d4:	b1 e0       	ldi	r27, 0x01	; 1
     7d6:	08 95       	ret
     7d8:	74 c0       	rjmp	.+232    	; 0x8c2 <__fp_zero>
     7da:	67 2f       	mov	r22, r23
     7dc:	78 2f       	mov	r23, r24
     7de:	88 27       	eor	r24, r24
     7e0:	b8 5f       	subi	r27, 0xF8	; 248
     7e2:	39 f0       	breq	.+14     	; 0x7f2 <__fixunssfsi+0x46>
     7e4:	b9 3f       	cpi	r27, 0xF9	; 249
     7e6:	cc f3       	brlt	.-14     	; 0x7da <__fixunssfsi+0x2e>
     7e8:	86 95       	lsr	r24
     7ea:	77 95       	ror	r23
     7ec:	67 95       	ror	r22
     7ee:	b3 95       	inc	r27
     7f0:	d9 f7       	brne	.-10     	; 0x7e8 <__fixunssfsi+0x3c>
     7f2:	3e f4       	brtc	.+14     	; 0x802 <__fixunssfsi+0x56>
     7f4:	90 95       	com	r25
     7f6:	80 95       	com	r24
     7f8:	70 95       	com	r23
     7fa:	61 95       	neg	r22
     7fc:	7f 4f       	sbci	r23, 0xFF	; 255
     7fe:	8f 4f       	sbci	r24, 0xFF	; 255
     800:	9f 4f       	sbci	r25, 0xFF	; 255
     802:	08 95       	ret

00000804 <__floatunsisf>:
     804:	e8 94       	clt
     806:	09 c0       	rjmp	.+18     	; 0x81a <__floatsisf+0x12>

00000808 <__floatsisf>:
     808:	97 fb       	bst	r25, 7
     80a:	3e f4       	brtc	.+14     	; 0x81a <__floatsisf+0x12>
     80c:	90 95       	com	r25
     80e:	80 95       	com	r24
     810:	70 95       	com	r23
     812:	61 95       	neg	r22
     814:	7f 4f       	sbci	r23, 0xFF	; 255
     816:	8f 4f       	sbci	r24, 0xFF	; 255
     818:	9f 4f       	sbci	r25, 0xFF	; 255
     81a:	99 23       	and	r25, r25
     81c:	a9 f0       	breq	.+42     	; 0x848 <__floatsisf+0x40>
     81e:	f9 2f       	mov	r31, r25
     820:	96 e9       	ldi	r25, 0x96	; 150
     822:	bb 27       	eor	r27, r27
     824:	93 95       	inc	r25
     826:	f6 95       	lsr	r31
     828:	87 95       	ror	r24
     82a:	77 95       	ror	r23
     82c:	67 95       	ror	r22
     82e:	b7 95       	ror	r27
     830:	f1 11       	cpse	r31, r1
     832:	f8 cf       	rjmp	.-16     	; 0x824 <__floatsisf+0x1c>
     834:	fa f4       	brpl	.+62     	; 0x874 <__floatsisf+0x6c>
     836:	bb 0f       	add	r27, r27
     838:	11 f4       	brne	.+4      	; 0x83e <__floatsisf+0x36>
     83a:	60 ff       	sbrs	r22, 0
     83c:	1b c0       	rjmp	.+54     	; 0x874 <__floatsisf+0x6c>
     83e:	6f 5f       	subi	r22, 0xFF	; 255
     840:	7f 4f       	sbci	r23, 0xFF	; 255
     842:	8f 4f       	sbci	r24, 0xFF	; 255
     844:	9f 4f       	sbci	r25, 0xFF	; 255
     846:	16 c0       	rjmp	.+44     	; 0x874 <__floatsisf+0x6c>
     848:	88 23       	and	r24, r24
     84a:	11 f0       	breq	.+4      	; 0x850 <__floatsisf+0x48>
     84c:	96 e9       	ldi	r25, 0x96	; 150
     84e:	11 c0       	rjmp	.+34     	; 0x872 <__floatsisf+0x6a>
     850:	77 23       	and	r23, r23
     852:	21 f0       	breq	.+8      	; 0x85c <__floatsisf+0x54>
     854:	9e e8       	ldi	r25, 0x8E	; 142
     856:	87 2f       	mov	r24, r23
     858:	76 2f       	mov	r23, r22
     85a:	05 c0       	rjmp	.+10     	; 0x866 <__floatsisf+0x5e>
     85c:	66 23       	and	r22, r22
     85e:	71 f0       	breq	.+28     	; 0x87c <__floatsisf+0x74>
     860:	96 e8       	ldi	r25, 0x86	; 134
     862:	86 2f       	mov	r24, r22
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	60 e0       	ldi	r22, 0x00	; 0
     868:	2a f0       	brmi	.+10     	; 0x874 <__floatsisf+0x6c>
     86a:	9a 95       	dec	r25
     86c:	66 0f       	add	r22, r22
     86e:	77 1f       	adc	r23, r23
     870:	88 1f       	adc	r24, r24
     872:	da f7       	brpl	.-10     	; 0x86a <__floatsisf+0x62>
     874:	88 0f       	add	r24, r24
     876:	96 95       	lsr	r25
     878:	87 95       	ror	r24
     87a:	97 f9       	bld	r25, 7
     87c:	08 95       	ret

0000087e <__fp_split3>:
     87e:	57 fd       	sbrc	r21, 7
     880:	90 58       	subi	r25, 0x80	; 128
     882:	44 0f       	add	r20, r20
     884:	55 1f       	adc	r21, r21
     886:	59 f0       	breq	.+22     	; 0x89e <__fp_splitA+0x10>
     888:	5f 3f       	cpi	r21, 0xFF	; 255
     88a:	71 f0       	breq	.+28     	; 0x8a8 <__fp_splitA+0x1a>
     88c:	47 95       	ror	r20

0000088e <__fp_splitA>:
     88e:	88 0f       	add	r24, r24
     890:	97 fb       	bst	r25, 7
     892:	99 1f       	adc	r25, r25
     894:	61 f0       	breq	.+24     	; 0x8ae <__fp_splitA+0x20>
     896:	9f 3f       	cpi	r25, 0xFF	; 255
     898:	79 f0       	breq	.+30     	; 0x8b8 <__fp_splitA+0x2a>
     89a:	87 95       	ror	r24
     89c:	08 95       	ret
     89e:	12 16       	cp	r1, r18
     8a0:	13 06       	cpc	r1, r19
     8a2:	14 06       	cpc	r1, r20
     8a4:	55 1f       	adc	r21, r21
     8a6:	f2 cf       	rjmp	.-28     	; 0x88c <__fp_split3+0xe>
     8a8:	46 95       	lsr	r20
     8aa:	f1 df       	rcall	.-30     	; 0x88e <__fp_splitA>
     8ac:	08 c0       	rjmp	.+16     	; 0x8be <__fp_splitA+0x30>
     8ae:	16 16       	cp	r1, r22
     8b0:	17 06       	cpc	r1, r23
     8b2:	18 06       	cpc	r1, r24
     8b4:	99 1f       	adc	r25, r25
     8b6:	f1 cf       	rjmp	.-30     	; 0x89a <__fp_splitA+0xc>
     8b8:	86 95       	lsr	r24
     8ba:	71 05       	cpc	r23, r1
     8bc:	61 05       	cpc	r22, r1
     8be:	08 94       	sec
     8c0:	08 95       	ret

000008c2 <__fp_zero>:
     8c2:	e8 94       	clt

000008c4 <__fp_szero>:
     8c4:	bb 27       	eor	r27, r27
     8c6:	66 27       	eor	r22, r22
     8c8:	77 27       	eor	r23, r23
     8ca:	cb 01       	movw	r24, r22
     8cc:	97 f9       	bld	r25, 7
     8ce:	08 95       	ret

000008d0 <__mulsf3>:
     8d0:	0b d0       	rcall	.+22     	; 0x8e8 <__mulsf3x>
     8d2:	78 c0       	rjmp	.+240    	; 0x9c4 <__fp_round>
     8d4:	69 d0       	rcall	.+210    	; 0x9a8 <__fp_pscA>
     8d6:	28 f0       	brcs	.+10     	; 0x8e2 <__mulsf3+0x12>
     8d8:	6e d0       	rcall	.+220    	; 0x9b6 <__fp_pscB>
     8da:	18 f0       	brcs	.+6      	; 0x8e2 <__mulsf3+0x12>
     8dc:	95 23       	and	r25, r21
     8de:	09 f0       	breq	.+2      	; 0x8e2 <__mulsf3+0x12>
     8e0:	5a c0       	rjmp	.+180    	; 0x996 <__fp_inf>
     8e2:	5f c0       	rjmp	.+190    	; 0x9a2 <__fp_nan>
     8e4:	11 24       	eor	r1, r1
     8e6:	ee cf       	rjmp	.-36     	; 0x8c4 <__fp_szero>

000008e8 <__mulsf3x>:
     8e8:	ca df       	rcall	.-108    	; 0x87e <__fp_split3>
     8ea:	a0 f3       	brcs	.-24     	; 0x8d4 <__mulsf3+0x4>

000008ec <__mulsf3_pse>:
     8ec:	95 9f       	mul	r25, r21
     8ee:	d1 f3       	breq	.-12     	; 0x8e4 <__mulsf3+0x14>
     8f0:	95 0f       	add	r25, r21
     8f2:	50 e0       	ldi	r21, 0x00	; 0
     8f4:	55 1f       	adc	r21, r21
     8f6:	62 9f       	mul	r22, r18
     8f8:	f0 01       	movw	r30, r0
     8fa:	72 9f       	mul	r23, r18
     8fc:	bb 27       	eor	r27, r27
     8fe:	f0 0d       	add	r31, r0
     900:	b1 1d       	adc	r27, r1
     902:	63 9f       	mul	r22, r19
     904:	aa 27       	eor	r26, r26
     906:	f0 0d       	add	r31, r0
     908:	b1 1d       	adc	r27, r1
     90a:	aa 1f       	adc	r26, r26
     90c:	64 9f       	mul	r22, r20
     90e:	66 27       	eor	r22, r22
     910:	b0 0d       	add	r27, r0
     912:	a1 1d       	adc	r26, r1
     914:	66 1f       	adc	r22, r22
     916:	82 9f       	mul	r24, r18
     918:	22 27       	eor	r18, r18
     91a:	b0 0d       	add	r27, r0
     91c:	a1 1d       	adc	r26, r1
     91e:	62 1f       	adc	r22, r18
     920:	73 9f       	mul	r23, r19
     922:	b0 0d       	add	r27, r0
     924:	a1 1d       	adc	r26, r1
     926:	62 1f       	adc	r22, r18
     928:	83 9f       	mul	r24, r19
     92a:	a0 0d       	add	r26, r0
     92c:	61 1d       	adc	r22, r1
     92e:	22 1f       	adc	r18, r18
     930:	74 9f       	mul	r23, r20
     932:	33 27       	eor	r19, r19
     934:	a0 0d       	add	r26, r0
     936:	61 1d       	adc	r22, r1
     938:	23 1f       	adc	r18, r19
     93a:	84 9f       	mul	r24, r20
     93c:	60 0d       	add	r22, r0
     93e:	21 1d       	adc	r18, r1
     940:	82 2f       	mov	r24, r18
     942:	76 2f       	mov	r23, r22
     944:	6a 2f       	mov	r22, r26
     946:	11 24       	eor	r1, r1
     948:	9f 57       	subi	r25, 0x7F	; 127
     94a:	50 40       	sbci	r21, 0x00	; 0
     94c:	8a f0       	brmi	.+34     	; 0x970 <__mulsf3_pse+0x84>
     94e:	e1 f0       	breq	.+56     	; 0x988 <__mulsf3_pse+0x9c>
     950:	88 23       	and	r24, r24
     952:	4a f0       	brmi	.+18     	; 0x966 <__mulsf3_pse+0x7a>
     954:	ee 0f       	add	r30, r30
     956:	ff 1f       	adc	r31, r31
     958:	bb 1f       	adc	r27, r27
     95a:	66 1f       	adc	r22, r22
     95c:	77 1f       	adc	r23, r23
     95e:	88 1f       	adc	r24, r24
     960:	91 50       	subi	r25, 0x01	; 1
     962:	50 40       	sbci	r21, 0x00	; 0
     964:	a9 f7       	brne	.-22     	; 0x950 <__mulsf3_pse+0x64>
     966:	9e 3f       	cpi	r25, 0xFE	; 254
     968:	51 05       	cpc	r21, r1
     96a:	70 f0       	brcs	.+28     	; 0x988 <__mulsf3_pse+0x9c>
     96c:	14 c0       	rjmp	.+40     	; 0x996 <__fp_inf>
     96e:	aa cf       	rjmp	.-172    	; 0x8c4 <__fp_szero>
     970:	5f 3f       	cpi	r21, 0xFF	; 255
     972:	ec f3       	brlt	.-6      	; 0x96e <__mulsf3_pse+0x82>
     974:	98 3e       	cpi	r25, 0xE8	; 232
     976:	dc f3       	brlt	.-10     	; 0x96e <__mulsf3_pse+0x82>
     978:	86 95       	lsr	r24
     97a:	77 95       	ror	r23
     97c:	67 95       	ror	r22
     97e:	b7 95       	ror	r27
     980:	f7 95       	ror	r31
     982:	e7 95       	ror	r30
     984:	9f 5f       	subi	r25, 0xFF	; 255
     986:	c1 f7       	brne	.-16     	; 0x978 <__mulsf3_pse+0x8c>
     988:	fe 2b       	or	r31, r30
     98a:	88 0f       	add	r24, r24
     98c:	91 1d       	adc	r25, r1
     98e:	96 95       	lsr	r25
     990:	87 95       	ror	r24
     992:	97 f9       	bld	r25, 7
     994:	08 95       	ret

00000996 <__fp_inf>:
     996:	97 f9       	bld	r25, 7
     998:	9f 67       	ori	r25, 0x7F	; 127
     99a:	80 e8       	ldi	r24, 0x80	; 128
     99c:	70 e0       	ldi	r23, 0x00	; 0
     99e:	60 e0       	ldi	r22, 0x00	; 0
     9a0:	08 95       	ret

000009a2 <__fp_nan>:
     9a2:	9f ef       	ldi	r25, 0xFF	; 255
     9a4:	80 ec       	ldi	r24, 0xC0	; 192
     9a6:	08 95       	ret

000009a8 <__fp_pscA>:
     9a8:	00 24       	eor	r0, r0
     9aa:	0a 94       	dec	r0
     9ac:	16 16       	cp	r1, r22
     9ae:	17 06       	cpc	r1, r23
     9b0:	18 06       	cpc	r1, r24
     9b2:	09 06       	cpc	r0, r25
     9b4:	08 95       	ret

000009b6 <__fp_pscB>:
     9b6:	00 24       	eor	r0, r0
     9b8:	0a 94       	dec	r0
     9ba:	12 16       	cp	r1, r18
     9bc:	13 06       	cpc	r1, r19
     9be:	14 06       	cpc	r1, r20
     9c0:	05 06       	cpc	r0, r21
     9c2:	08 95       	ret

000009c4 <__fp_round>:
     9c4:	09 2e       	mov	r0, r25
     9c6:	03 94       	inc	r0
     9c8:	00 0c       	add	r0, r0
     9ca:	11 f4       	brne	.+4      	; 0x9d0 <__fp_round+0xc>
     9cc:	88 23       	and	r24, r24
     9ce:	52 f0       	brmi	.+20     	; 0x9e4 <__fp_round+0x20>
     9d0:	bb 0f       	add	r27, r27
     9d2:	40 f4       	brcc	.+16     	; 0x9e4 <__fp_round+0x20>
     9d4:	bf 2b       	or	r27, r31
     9d6:	11 f4       	brne	.+4      	; 0x9dc <__fp_round+0x18>
     9d8:	60 ff       	sbrs	r22, 0
     9da:	04 c0       	rjmp	.+8      	; 0x9e4 <__fp_round+0x20>
     9dc:	6f 5f       	subi	r22, 0xFF	; 255
     9de:	7f 4f       	sbci	r23, 0xFF	; 255
     9e0:	8f 4f       	sbci	r24, 0xFF	; 255
     9e2:	9f 4f       	sbci	r25, 0xFF	; 255
     9e4:	08 95       	ret

000009e6 <fdevopen>:
     9e6:	0f 93       	push	r16
     9e8:	1f 93       	push	r17
     9ea:	cf 93       	push	r28
     9ec:	df 93       	push	r29
     9ee:	ec 01       	movw	r28, r24
     9f0:	8b 01       	movw	r16, r22
     9f2:	00 97       	sbiw	r24, 0x00	; 0
     9f4:	31 f4       	brne	.+12     	; 0xa02 <fdevopen+0x1c>
     9f6:	61 15       	cp	r22, r1
     9f8:	71 05       	cpc	r23, r1
     9fa:	19 f4       	brne	.+6      	; 0xa02 <fdevopen+0x1c>
     9fc:	80 e0       	ldi	r24, 0x00	; 0
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	38 c0       	rjmp	.+112    	; 0xa72 <fdevopen+0x8c>
     a02:	6e e0       	ldi	r22, 0x0E	; 14
     a04:	70 e0       	ldi	r23, 0x00	; 0
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	0e 94 51 07 	call	0xea2	; 0xea2 <calloc>
     a0e:	fc 01       	movw	r30, r24
     a10:	00 97       	sbiw	r24, 0x00	; 0
     a12:	a1 f3       	breq	.-24     	; 0x9fc <fdevopen+0x16>
     a14:	80 e8       	ldi	r24, 0x80	; 128
     a16:	83 83       	std	Z+3, r24	; 0x03
     a18:	01 15       	cp	r16, r1
     a1a:	11 05       	cpc	r17, r1
     a1c:	71 f0       	breq	.+28     	; 0xa3a <fdevopen+0x54>
     a1e:	13 87       	std	Z+11, r17	; 0x0b
     a20:	02 87       	std	Z+10, r16	; 0x0a
     a22:	81 e8       	ldi	r24, 0x81	; 129
     a24:	83 83       	std	Z+3, r24	; 0x03
     a26:	80 91 80 01 	lds	r24, 0x0180
     a2a:	90 91 81 01 	lds	r25, 0x0181
     a2e:	89 2b       	or	r24, r25
     a30:	21 f4       	brne	.+8      	; 0xa3a <fdevopen+0x54>
     a32:	f0 93 81 01 	sts	0x0181, r31
     a36:	e0 93 80 01 	sts	0x0180, r30
     a3a:	20 97       	sbiw	r28, 0x00	; 0
     a3c:	c9 f0       	breq	.+50     	; 0xa70 <fdevopen+0x8a>
     a3e:	d1 87       	std	Z+9, r29	; 0x09
     a40:	c0 87       	std	Z+8, r28	; 0x08
     a42:	83 81       	ldd	r24, Z+3	; 0x03
     a44:	82 60       	ori	r24, 0x02	; 2
     a46:	83 83       	std	Z+3, r24	; 0x03
     a48:	80 91 82 01 	lds	r24, 0x0182
     a4c:	90 91 83 01 	lds	r25, 0x0183
     a50:	89 2b       	or	r24, r25
     a52:	71 f4       	brne	.+28     	; 0xa70 <fdevopen+0x8a>
     a54:	f0 93 83 01 	sts	0x0183, r31
     a58:	e0 93 82 01 	sts	0x0182, r30
     a5c:	80 91 84 01 	lds	r24, 0x0184
     a60:	90 91 85 01 	lds	r25, 0x0185
     a64:	89 2b       	or	r24, r25
     a66:	21 f4       	brne	.+8      	; 0xa70 <fdevopen+0x8a>
     a68:	f0 93 85 01 	sts	0x0185, r31
     a6c:	e0 93 84 01 	sts	0x0184, r30
     a70:	cf 01       	movw	r24, r30
     a72:	df 91       	pop	r29
     a74:	cf 91       	pop	r28
     a76:	1f 91       	pop	r17
     a78:	0f 91       	pop	r16
     a7a:	08 95       	ret

00000a7c <printf>:
     a7c:	a0 e0       	ldi	r26, 0x00	; 0
     a7e:	b0 e0       	ldi	r27, 0x00	; 0
     a80:	e4 e4       	ldi	r30, 0x44	; 68
     a82:	f5 e0       	ldi	r31, 0x05	; 5
     a84:	0c 94 51 09 	jmp	0x12a2	; 0x12a2 <__prologue_saves__+0x20>
     a88:	fe 01       	movw	r30, r28
     a8a:	35 96       	adiw	r30, 0x05	; 5
     a8c:	61 91       	ld	r22, Z+
     a8e:	71 91       	ld	r23, Z+
     a90:	af 01       	movw	r20, r30
     a92:	80 91 82 01 	lds	r24, 0x0182
     a96:	90 91 83 01 	lds	r25, 0x0183
     a9a:	0e 94 7f 05 	call	0xafe	; 0xafe <vfprintf>
     a9e:	e2 e0       	ldi	r30, 0x02	; 2
     aa0:	0c 94 6d 09 	jmp	0x12da	; 0x12da <__epilogue_restores__+0x20>

00000aa4 <puts>:
     aa4:	0f 93       	push	r16
     aa6:	1f 93       	push	r17
     aa8:	cf 93       	push	r28
     aaa:	df 93       	push	r29
     aac:	e0 91 82 01 	lds	r30, 0x0182
     ab0:	f0 91 83 01 	lds	r31, 0x0183
     ab4:	23 81       	ldd	r18, Z+3	; 0x03
     ab6:	21 ff       	sbrs	r18, 1
     ab8:	1b c0       	rjmp	.+54     	; 0xaf0 <puts+0x4c>
     aba:	ec 01       	movw	r28, r24
     abc:	00 e0       	ldi	r16, 0x00	; 0
     abe:	10 e0       	ldi	r17, 0x00	; 0
     ac0:	89 91       	ld	r24, Y+
     ac2:	60 91 82 01 	lds	r22, 0x0182
     ac6:	70 91 83 01 	lds	r23, 0x0183
     aca:	db 01       	movw	r26, r22
     acc:	18 96       	adiw	r26, 0x08	; 8
     ace:	ed 91       	ld	r30, X+
     ad0:	fc 91       	ld	r31, X
     ad2:	19 97       	sbiw	r26, 0x09	; 9
     ad4:	88 23       	and	r24, r24
     ad6:	31 f0       	breq	.+12     	; 0xae4 <puts+0x40>
     ad8:	09 95       	icall
     ada:	89 2b       	or	r24, r25
     adc:	89 f3       	breq	.-30     	; 0xac0 <puts+0x1c>
     ade:	0f ef       	ldi	r16, 0xFF	; 255
     ae0:	1f ef       	ldi	r17, 0xFF	; 255
     ae2:	ee cf       	rjmp	.-36     	; 0xac0 <puts+0x1c>
     ae4:	8a e0       	ldi	r24, 0x0A	; 10
     ae6:	09 95       	icall
     ae8:	89 2b       	or	r24, r25
     aea:	11 f4       	brne	.+4      	; 0xaf0 <puts+0x4c>
     aec:	c8 01       	movw	r24, r16
     aee:	02 c0       	rjmp	.+4      	; 0xaf4 <puts+0x50>
     af0:	8f ef       	ldi	r24, 0xFF	; 255
     af2:	9f ef       	ldi	r25, 0xFF	; 255
     af4:	df 91       	pop	r29
     af6:	cf 91       	pop	r28
     af8:	1f 91       	pop	r17
     afa:	0f 91       	pop	r16
     afc:	08 95       	ret

00000afe <vfprintf>:
     afe:	ac e0       	ldi	r26, 0x0C	; 12
     b00:	b0 e0       	ldi	r27, 0x00	; 0
     b02:	e5 e8       	ldi	r30, 0x85	; 133
     b04:	f5 e0       	ldi	r31, 0x05	; 5
     b06:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__prologue_saves__>
     b0a:	7c 01       	movw	r14, r24
     b0c:	6b 01       	movw	r12, r22
     b0e:	8a 01       	movw	r16, r20
     b10:	fc 01       	movw	r30, r24
     b12:	17 82       	std	Z+7, r1	; 0x07
     b14:	16 82       	std	Z+6, r1	; 0x06
     b16:	83 81       	ldd	r24, Z+3	; 0x03
     b18:	81 ff       	sbrs	r24, 1
     b1a:	bd c1       	rjmp	.+890    	; 0xe96 <vfprintf+0x398>
     b1c:	ce 01       	movw	r24, r28
     b1e:	01 96       	adiw	r24, 0x01	; 1
     b20:	4c 01       	movw	r8, r24
     b22:	f7 01       	movw	r30, r14
     b24:	93 81       	ldd	r25, Z+3	; 0x03
     b26:	f6 01       	movw	r30, r12
     b28:	93 fd       	sbrc	r25, 3
     b2a:	85 91       	lpm	r24, Z+
     b2c:	93 ff       	sbrs	r25, 3
     b2e:	81 91       	ld	r24, Z+
     b30:	6f 01       	movw	r12, r30
     b32:	88 23       	and	r24, r24
     b34:	09 f4       	brne	.+2      	; 0xb38 <vfprintf+0x3a>
     b36:	ab c1       	rjmp	.+854    	; 0xe8e <vfprintf+0x390>
     b38:	85 32       	cpi	r24, 0x25	; 37
     b3a:	39 f4       	brne	.+14     	; 0xb4a <vfprintf+0x4c>
     b3c:	93 fd       	sbrc	r25, 3
     b3e:	85 91       	lpm	r24, Z+
     b40:	93 ff       	sbrs	r25, 3
     b42:	81 91       	ld	r24, Z+
     b44:	6f 01       	movw	r12, r30
     b46:	85 32       	cpi	r24, 0x25	; 37
     b48:	29 f4       	brne	.+10     	; 0xb54 <vfprintf+0x56>
     b4a:	b7 01       	movw	r22, r14
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	0e 94 b1 08 	call	0x1162	; 0x1162 <fputc>
     b52:	e7 cf       	rjmp	.-50     	; 0xb22 <vfprintf+0x24>
     b54:	51 2c       	mov	r5, r1
     b56:	31 2c       	mov	r3, r1
     b58:	20 e0       	ldi	r18, 0x00	; 0
     b5a:	20 32       	cpi	r18, 0x20	; 32
     b5c:	a0 f4       	brcc	.+40     	; 0xb86 <vfprintf+0x88>
     b5e:	8b 32       	cpi	r24, 0x2B	; 43
     b60:	69 f0       	breq	.+26     	; 0xb7c <vfprintf+0x7e>
     b62:	30 f4       	brcc	.+12     	; 0xb70 <vfprintf+0x72>
     b64:	80 32       	cpi	r24, 0x20	; 32
     b66:	59 f0       	breq	.+22     	; 0xb7e <vfprintf+0x80>
     b68:	83 32       	cpi	r24, 0x23	; 35
     b6a:	69 f4       	brne	.+26     	; 0xb86 <vfprintf+0x88>
     b6c:	20 61       	ori	r18, 0x10	; 16
     b6e:	2c c0       	rjmp	.+88     	; 0xbc8 <vfprintf+0xca>
     b70:	8d 32       	cpi	r24, 0x2D	; 45
     b72:	39 f0       	breq	.+14     	; 0xb82 <vfprintf+0x84>
     b74:	80 33       	cpi	r24, 0x30	; 48
     b76:	39 f4       	brne	.+14     	; 0xb86 <vfprintf+0x88>
     b78:	21 60       	ori	r18, 0x01	; 1
     b7a:	26 c0       	rjmp	.+76     	; 0xbc8 <vfprintf+0xca>
     b7c:	22 60       	ori	r18, 0x02	; 2
     b7e:	24 60       	ori	r18, 0x04	; 4
     b80:	23 c0       	rjmp	.+70     	; 0xbc8 <vfprintf+0xca>
     b82:	28 60       	ori	r18, 0x08	; 8
     b84:	21 c0       	rjmp	.+66     	; 0xbc8 <vfprintf+0xca>
     b86:	27 fd       	sbrc	r18, 7
     b88:	27 c0       	rjmp	.+78     	; 0xbd8 <vfprintf+0xda>
     b8a:	30 ed       	ldi	r19, 0xD0	; 208
     b8c:	38 0f       	add	r19, r24
     b8e:	3a 30       	cpi	r19, 0x0A	; 10
     b90:	78 f4       	brcc	.+30     	; 0xbb0 <vfprintf+0xb2>
     b92:	26 ff       	sbrs	r18, 6
     b94:	06 c0       	rjmp	.+12     	; 0xba2 <vfprintf+0xa4>
     b96:	fa e0       	ldi	r31, 0x0A	; 10
     b98:	5f 9e       	mul	r5, r31
     b9a:	30 0d       	add	r19, r0
     b9c:	11 24       	eor	r1, r1
     b9e:	53 2e       	mov	r5, r19
     ba0:	13 c0       	rjmp	.+38     	; 0xbc8 <vfprintf+0xca>
     ba2:	8a e0       	ldi	r24, 0x0A	; 10
     ba4:	38 9e       	mul	r3, r24
     ba6:	30 0d       	add	r19, r0
     ba8:	11 24       	eor	r1, r1
     baa:	33 2e       	mov	r3, r19
     bac:	20 62       	ori	r18, 0x20	; 32
     bae:	0c c0       	rjmp	.+24     	; 0xbc8 <vfprintf+0xca>
     bb0:	8e 32       	cpi	r24, 0x2E	; 46
     bb2:	21 f4       	brne	.+8      	; 0xbbc <vfprintf+0xbe>
     bb4:	26 fd       	sbrc	r18, 6
     bb6:	6b c1       	rjmp	.+726    	; 0xe8e <vfprintf+0x390>
     bb8:	20 64       	ori	r18, 0x40	; 64
     bba:	06 c0       	rjmp	.+12     	; 0xbc8 <vfprintf+0xca>
     bbc:	8c 36       	cpi	r24, 0x6C	; 108
     bbe:	11 f4       	brne	.+4      	; 0xbc4 <vfprintf+0xc6>
     bc0:	20 68       	ori	r18, 0x80	; 128
     bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <vfprintf+0xca>
     bc4:	88 36       	cpi	r24, 0x68	; 104
     bc6:	41 f4       	brne	.+16     	; 0xbd8 <vfprintf+0xda>
     bc8:	f6 01       	movw	r30, r12
     bca:	93 fd       	sbrc	r25, 3
     bcc:	85 91       	lpm	r24, Z+
     bce:	93 ff       	sbrs	r25, 3
     bd0:	81 91       	ld	r24, Z+
     bd2:	6f 01       	movw	r12, r30
     bd4:	81 11       	cpse	r24, r1
     bd6:	c1 cf       	rjmp	.-126    	; 0xb5a <vfprintf+0x5c>
     bd8:	98 2f       	mov	r25, r24
     bda:	9f 7d       	andi	r25, 0xDF	; 223
     bdc:	95 54       	subi	r25, 0x45	; 69
     bde:	93 30       	cpi	r25, 0x03	; 3
     be0:	28 f4       	brcc	.+10     	; 0xbec <vfprintf+0xee>
     be2:	0c 5f       	subi	r16, 0xFC	; 252
     be4:	1f 4f       	sbci	r17, 0xFF	; 255
     be6:	ff e3       	ldi	r31, 0x3F	; 63
     be8:	f9 83       	std	Y+1, r31	; 0x01
     bea:	0d c0       	rjmp	.+26     	; 0xc06 <vfprintf+0x108>
     bec:	83 36       	cpi	r24, 0x63	; 99
     bee:	31 f0       	breq	.+12     	; 0xbfc <vfprintf+0xfe>
     bf0:	83 37       	cpi	r24, 0x73	; 115
     bf2:	71 f0       	breq	.+28     	; 0xc10 <vfprintf+0x112>
     bf4:	83 35       	cpi	r24, 0x53	; 83
     bf6:	09 f0       	breq	.+2      	; 0xbfa <vfprintf+0xfc>
     bf8:	5b c0       	rjmp	.+182    	; 0xcb0 <vfprintf+0x1b2>
     bfa:	22 c0       	rjmp	.+68     	; 0xc40 <vfprintf+0x142>
     bfc:	f8 01       	movw	r30, r16
     bfe:	80 81       	ld	r24, Z
     c00:	89 83       	std	Y+1, r24	; 0x01
     c02:	0e 5f       	subi	r16, 0xFE	; 254
     c04:	1f 4f       	sbci	r17, 0xFF	; 255
     c06:	44 24       	eor	r4, r4
     c08:	43 94       	inc	r4
     c0a:	51 2c       	mov	r5, r1
     c0c:	54 01       	movw	r10, r8
     c0e:	15 c0       	rjmp	.+42     	; 0xc3a <vfprintf+0x13c>
     c10:	38 01       	movw	r6, r16
     c12:	f2 e0       	ldi	r31, 0x02	; 2
     c14:	6f 0e       	add	r6, r31
     c16:	71 1c       	adc	r7, r1
     c18:	f8 01       	movw	r30, r16
     c1a:	a0 80       	ld	r10, Z
     c1c:	b1 80       	ldd	r11, Z+1	; 0x01
     c1e:	26 ff       	sbrs	r18, 6
     c20:	03 c0       	rjmp	.+6      	; 0xc28 <vfprintf+0x12a>
     c22:	65 2d       	mov	r22, r5
     c24:	70 e0       	ldi	r23, 0x00	; 0
     c26:	02 c0       	rjmp	.+4      	; 0xc2c <vfprintf+0x12e>
     c28:	6f ef       	ldi	r22, 0xFF	; 255
     c2a:	7f ef       	ldi	r23, 0xFF	; 255
     c2c:	c5 01       	movw	r24, r10
     c2e:	2c 87       	std	Y+12, r18	; 0x0c
     c30:	0e 94 a6 08 	call	0x114c	; 0x114c <strnlen>
     c34:	2c 01       	movw	r4, r24
     c36:	83 01       	movw	r16, r6
     c38:	2c 85       	ldd	r18, Y+12	; 0x0c
     c3a:	2f 77       	andi	r18, 0x7F	; 127
     c3c:	22 2e       	mov	r2, r18
     c3e:	17 c0       	rjmp	.+46     	; 0xc6e <vfprintf+0x170>
     c40:	38 01       	movw	r6, r16
     c42:	f2 e0       	ldi	r31, 0x02	; 2
     c44:	6f 0e       	add	r6, r31
     c46:	71 1c       	adc	r7, r1
     c48:	f8 01       	movw	r30, r16
     c4a:	a0 80       	ld	r10, Z
     c4c:	b1 80       	ldd	r11, Z+1	; 0x01
     c4e:	26 ff       	sbrs	r18, 6
     c50:	03 c0       	rjmp	.+6      	; 0xc58 <vfprintf+0x15a>
     c52:	65 2d       	mov	r22, r5
     c54:	70 e0       	ldi	r23, 0x00	; 0
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <vfprintf+0x15e>
     c58:	6f ef       	ldi	r22, 0xFF	; 255
     c5a:	7f ef       	ldi	r23, 0xFF	; 255
     c5c:	c5 01       	movw	r24, r10
     c5e:	2c 87       	std	Y+12, r18	; 0x0c
     c60:	0e 94 94 08 	call	0x1128	; 0x1128 <strnlen_P>
     c64:	2c 01       	movw	r4, r24
     c66:	2c 85       	ldd	r18, Y+12	; 0x0c
     c68:	20 68       	ori	r18, 0x80	; 128
     c6a:	22 2e       	mov	r2, r18
     c6c:	83 01       	movw	r16, r6
     c6e:	23 fc       	sbrc	r2, 3
     c70:	1b c0       	rjmp	.+54     	; 0xca8 <vfprintf+0x1aa>
     c72:	83 2d       	mov	r24, r3
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	48 16       	cp	r4, r24
     c78:	59 06       	cpc	r5, r25
     c7a:	b0 f4       	brcc	.+44     	; 0xca8 <vfprintf+0x1aa>
     c7c:	b7 01       	movw	r22, r14
     c7e:	80 e2       	ldi	r24, 0x20	; 32
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	0e 94 b1 08 	call	0x1162	; 0x1162 <fputc>
     c86:	3a 94       	dec	r3
     c88:	f4 cf       	rjmp	.-24     	; 0xc72 <vfprintf+0x174>
     c8a:	f5 01       	movw	r30, r10
     c8c:	27 fc       	sbrc	r2, 7
     c8e:	85 91       	lpm	r24, Z+
     c90:	27 fe       	sbrs	r2, 7
     c92:	81 91       	ld	r24, Z+
     c94:	5f 01       	movw	r10, r30
     c96:	b7 01       	movw	r22, r14
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	0e 94 b1 08 	call	0x1162	; 0x1162 <fputc>
     c9e:	31 10       	cpse	r3, r1
     ca0:	3a 94       	dec	r3
     ca2:	f1 e0       	ldi	r31, 0x01	; 1
     ca4:	4f 1a       	sub	r4, r31
     ca6:	51 08       	sbc	r5, r1
     ca8:	41 14       	cp	r4, r1
     caa:	51 04       	cpc	r5, r1
     cac:	71 f7       	brne	.-36     	; 0xc8a <vfprintf+0x18c>
     cae:	e5 c0       	rjmp	.+458    	; 0xe7a <vfprintf+0x37c>
     cb0:	84 36       	cpi	r24, 0x64	; 100
     cb2:	11 f0       	breq	.+4      	; 0xcb8 <vfprintf+0x1ba>
     cb4:	89 36       	cpi	r24, 0x69	; 105
     cb6:	39 f5       	brne	.+78     	; 0xd06 <vfprintf+0x208>
     cb8:	f8 01       	movw	r30, r16
     cba:	27 ff       	sbrs	r18, 7
     cbc:	07 c0       	rjmp	.+14     	; 0xccc <vfprintf+0x1ce>
     cbe:	60 81       	ld	r22, Z
     cc0:	71 81       	ldd	r23, Z+1	; 0x01
     cc2:	82 81       	ldd	r24, Z+2	; 0x02
     cc4:	93 81       	ldd	r25, Z+3	; 0x03
     cc6:	0c 5f       	subi	r16, 0xFC	; 252
     cc8:	1f 4f       	sbci	r17, 0xFF	; 255
     cca:	08 c0       	rjmp	.+16     	; 0xcdc <vfprintf+0x1de>
     ccc:	60 81       	ld	r22, Z
     cce:	71 81       	ldd	r23, Z+1	; 0x01
     cd0:	88 27       	eor	r24, r24
     cd2:	77 fd       	sbrc	r23, 7
     cd4:	80 95       	com	r24
     cd6:	98 2f       	mov	r25, r24
     cd8:	0e 5f       	subi	r16, 0xFE	; 254
     cda:	1f 4f       	sbci	r17, 0xFF	; 255
     cdc:	2f 76       	andi	r18, 0x6F	; 111
     cde:	b2 2e       	mov	r11, r18
     ce0:	97 ff       	sbrs	r25, 7
     ce2:	09 c0       	rjmp	.+18     	; 0xcf6 <vfprintf+0x1f8>
     ce4:	90 95       	com	r25
     ce6:	80 95       	com	r24
     ce8:	70 95       	com	r23
     cea:	61 95       	neg	r22
     cec:	7f 4f       	sbci	r23, 0xFF	; 255
     cee:	8f 4f       	sbci	r24, 0xFF	; 255
     cf0:	9f 4f       	sbci	r25, 0xFF	; 255
     cf2:	20 68       	ori	r18, 0x80	; 128
     cf4:	b2 2e       	mov	r11, r18
     cf6:	2a e0       	ldi	r18, 0x0A	; 10
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	a4 01       	movw	r20, r8
     cfc:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__ultoa_invert>
     d00:	a8 2e       	mov	r10, r24
     d02:	a8 18       	sub	r10, r8
     d04:	44 c0       	rjmp	.+136    	; 0xd8e <vfprintf+0x290>
     d06:	85 37       	cpi	r24, 0x75	; 117
     d08:	29 f4       	brne	.+10     	; 0xd14 <vfprintf+0x216>
     d0a:	2f 7e       	andi	r18, 0xEF	; 239
     d0c:	b2 2e       	mov	r11, r18
     d0e:	2a e0       	ldi	r18, 0x0A	; 10
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	25 c0       	rjmp	.+74     	; 0xd5e <vfprintf+0x260>
     d14:	f2 2f       	mov	r31, r18
     d16:	f9 7f       	andi	r31, 0xF9	; 249
     d18:	bf 2e       	mov	r11, r31
     d1a:	8f 36       	cpi	r24, 0x6F	; 111
     d1c:	c1 f0       	breq	.+48     	; 0xd4e <vfprintf+0x250>
     d1e:	18 f4       	brcc	.+6      	; 0xd26 <vfprintf+0x228>
     d20:	88 35       	cpi	r24, 0x58	; 88
     d22:	79 f0       	breq	.+30     	; 0xd42 <vfprintf+0x244>
     d24:	b4 c0       	rjmp	.+360    	; 0xe8e <vfprintf+0x390>
     d26:	80 37       	cpi	r24, 0x70	; 112
     d28:	19 f0       	breq	.+6      	; 0xd30 <vfprintf+0x232>
     d2a:	88 37       	cpi	r24, 0x78	; 120
     d2c:	21 f0       	breq	.+8      	; 0xd36 <vfprintf+0x238>
     d2e:	af c0       	rjmp	.+350    	; 0xe8e <vfprintf+0x390>
     d30:	2f 2f       	mov	r18, r31
     d32:	20 61       	ori	r18, 0x10	; 16
     d34:	b2 2e       	mov	r11, r18
     d36:	b4 fe       	sbrs	r11, 4
     d38:	0d c0       	rjmp	.+26     	; 0xd54 <vfprintf+0x256>
     d3a:	8b 2d       	mov	r24, r11
     d3c:	84 60       	ori	r24, 0x04	; 4
     d3e:	b8 2e       	mov	r11, r24
     d40:	09 c0       	rjmp	.+18     	; 0xd54 <vfprintf+0x256>
     d42:	24 ff       	sbrs	r18, 4
     d44:	0a c0       	rjmp	.+20     	; 0xd5a <vfprintf+0x25c>
     d46:	9f 2f       	mov	r25, r31
     d48:	96 60       	ori	r25, 0x06	; 6
     d4a:	b9 2e       	mov	r11, r25
     d4c:	06 c0       	rjmp	.+12     	; 0xd5a <vfprintf+0x25c>
     d4e:	28 e0       	ldi	r18, 0x08	; 8
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	05 c0       	rjmp	.+10     	; 0xd5e <vfprintf+0x260>
     d54:	20 e1       	ldi	r18, 0x10	; 16
     d56:	30 e0       	ldi	r19, 0x00	; 0
     d58:	02 c0       	rjmp	.+4      	; 0xd5e <vfprintf+0x260>
     d5a:	20 e1       	ldi	r18, 0x10	; 16
     d5c:	32 e0       	ldi	r19, 0x02	; 2
     d5e:	f8 01       	movw	r30, r16
     d60:	b7 fe       	sbrs	r11, 7
     d62:	07 c0       	rjmp	.+14     	; 0xd72 <vfprintf+0x274>
     d64:	60 81       	ld	r22, Z
     d66:	71 81       	ldd	r23, Z+1	; 0x01
     d68:	82 81       	ldd	r24, Z+2	; 0x02
     d6a:	93 81       	ldd	r25, Z+3	; 0x03
     d6c:	0c 5f       	subi	r16, 0xFC	; 252
     d6e:	1f 4f       	sbci	r17, 0xFF	; 255
     d70:	06 c0       	rjmp	.+12     	; 0xd7e <vfprintf+0x280>
     d72:	60 81       	ld	r22, Z
     d74:	71 81       	ldd	r23, Z+1	; 0x01
     d76:	80 e0       	ldi	r24, 0x00	; 0
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	0e 5f       	subi	r16, 0xFE	; 254
     d7c:	1f 4f       	sbci	r17, 0xFF	; 255
     d7e:	a4 01       	movw	r20, r8
     d80:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__ultoa_invert>
     d84:	a8 2e       	mov	r10, r24
     d86:	a8 18       	sub	r10, r8
     d88:	fb 2d       	mov	r31, r11
     d8a:	ff 77       	andi	r31, 0x7F	; 127
     d8c:	bf 2e       	mov	r11, r31
     d8e:	b6 fe       	sbrs	r11, 6
     d90:	0b c0       	rjmp	.+22     	; 0xda8 <vfprintf+0x2aa>
     d92:	2b 2d       	mov	r18, r11
     d94:	2e 7f       	andi	r18, 0xFE	; 254
     d96:	a5 14       	cp	r10, r5
     d98:	50 f4       	brcc	.+20     	; 0xdae <vfprintf+0x2b0>
     d9a:	b4 fe       	sbrs	r11, 4
     d9c:	0a c0       	rjmp	.+20     	; 0xdb2 <vfprintf+0x2b4>
     d9e:	b2 fc       	sbrc	r11, 2
     da0:	08 c0       	rjmp	.+16     	; 0xdb2 <vfprintf+0x2b4>
     da2:	2b 2d       	mov	r18, r11
     da4:	2e 7e       	andi	r18, 0xEE	; 238
     da6:	05 c0       	rjmp	.+10     	; 0xdb2 <vfprintf+0x2b4>
     da8:	7a 2c       	mov	r7, r10
     daa:	2b 2d       	mov	r18, r11
     dac:	03 c0       	rjmp	.+6      	; 0xdb4 <vfprintf+0x2b6>
     dae:	7a 2c       	mov	r7, r10
     db0:	01 c0       	rjmp	.+2      	; 0xdb4 <vfprintf+0x2b6>
     db2:	75 2c       	mov	r7, r5
     db4:	24 ff       	sbrs	r18, 4
     db6:	0d c0       	rjmp	.+26     	; 0xdd2 <vfprintf+0x2d4>
     db8:	fe 01       	movw	r30, r28
     dba:	ea 0d       	add	r30, r10
     dbc:	f1 1d       	adc	r31, r1
     dbe:	80 81       	ld	r24, Z
     dc0:	80 33       	cpi	r24, 0x30	; 48
     dc2:	11 f4       	brne	.+4      	; 0xdc8 <vfprintf+0x2ca>
     dc4:	29 7e       	andi	r18, 0xE9	; 233
     dc6:	09 c0       	rjmp	.+18     	; 0xdda <vfprintf+0x2dc>
     dc8:	22 ff       	sbrs	r18, 2
     dca:	06 c0       	rjmp	.+12     	; 0xdd8 <vfprintf+0x2da>
     dcc:	73 94       	inc	r7
     dce:	73 94       	inc	r7
     dd0:	04 c0       	rjmp	.+8      	; 0xdda <vfprintf+0x2dc>
     dd2:	82 2f       	mov	r24, r18
     dd4:	86 78       	andi	r24, 0x86	; 134
     dd6:	09 f0       	breq	.+2      	; 0xdda <vfprintf+0x2dc>
     dd8:	73 94       	inc	r7
     dda:	23 fd       	sbrc	r18, 3
     ddc:	13 c0       	rjmp	.+38     	; 0xe04 <vfprintf+0x306>
     dde:	20 ff       	sbrs	r18, 0
     de0:	06 c0       	rjmp	.+12     	; 0xdee <vfprintf+0x2f0>
     de2:	5a 2c       	mov	r5, r10
     de4:	73 14       	cp	r7, r3
     de6:	18 f4       	brcc	.+6      	; 0xdee <vfprintf+0x2f0>
     de8:	53 0c       	add	r5, r3
     dea:	57 18       	sub	r5, r7
     dec:	73 2c       	mov	r7, r3
     dee:	73 14       	cp	r7, r3
     df0:	68 f4       	brcc	.+26     	; 0xe0c <vfprintf+0x30e>
     df2:	b7 01       	movw	r22, r14
     df4:	80 e2       	ldi	r24, 0x20	; 32
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	2c 87       	std	Y+12, r18	; 0x0c
     dfa:	0e 94 b1 08 	call	0x1162	; 0x1162 <fputc>
     dfe:	73 94       	inc	r7
     e00:	2c 85       	ldd	r18, Y+12	; 0x0c
     e02:	f5 cf       	rjmp	.-22     	; 0xdee <vfprintf+0x2f0>
     e04:	73 14       	cp	r7, r3
     e06:	10 f4       	brcc	.+4      	; 0xe0c <vfprintf+0x30e>
     e08:	37 18       	sub	r3, r7
     e0a:	01 c0       	rjmp	.+2      	; 0xe0e <vfprintf+0x310>
     e0c:	31 2c       	mov	r3, r1
     e0e:	24 ff       	sbrs	r18, 4
     e10:	12 c0       	rjmp	.+36     	; 0xe36 <vfprintf+0x338>
     e12:	b7 01       	movw	r22, r14
     e14:	80 e3       	ldi	r24, 0x30	; 48
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	2c 87       	std	Y+12, r18	; 0x0c
     e1a:	0e 94 b1 08 	call	0x1162	; 0x1162 <fputc>
     e1e:	2c 85       	ldd	r18, Y+12	; 0x0c
     e20:	22 ff       	sbrs	r18, 2
     e22:	17 c0       	rjmp	.+46     	; 0xe52 <vfprintf+0x354>
     e24:	21 ff       	sbrs	r18, 1
     e26:	03 c0       	rjmp	.+6      	; 0xe2e <vfprintf+0x330>
     e28:	88 e5       	ldi	r24, 0x58	; 88
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	02 c0       	rjmp	.+4      	; 0xe32 <vfprintf+0x334>
     e2e:	88 e7       	ldi	r24, 0x78	; 120
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	b7 01       	movw	r22, r14
     e34:	0c c0       	rjmp	.+24     	; 0xe4e <vfprintf+0x350>
     e36:	82 2f       	mov	r24, r18
     e38:	86 78       	andi	r24, 0x86	; 134
     e3a:	59 f0       	breq	.+22     	; 0xe52 <vfprintf+0x354>
     e3c:	21 fd       	sbrc	r18, 1
     e3e:	02 c0       	rjmp	.+4      	; 0xe44 <vfprintf+0x346>
     e40:	80 e2       	ldi	r24, 0x20	; 32
     e42:	01 c0       	rjmp	.+2      	; 0xe46 <vfprintf+0x348>
     e44:	8b e2       	ldi	r24, 0x2B	; 43
     e46:	27 fd       	sbrc	r18, 7
     e48:	8d e2       	ldi	r24, 0x2D	; 45
     e4a:	b7 01       	movw	r22, r14
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	0e 94 b1 08 	call	0x1162	; 0x1162 <fputc>
     e52:	a5 14       	cp	r10, r5
     e54:	38 f4       	brcc	.+14     	; 0xe64 <vfprintf+0x366>
     e56:	b7 01       	movw	r22, r14
     e58:	80 e3       	ldi	r24, 0x30	; 48
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	0e 94 b1 08 	call	0x1162	; 0x1162 <fputc>
     e60:	5a 94       	dec	r5
     e62:	f7 cf       	rjmp	.-18     	; 0xe52 <vfprintf+0x354>
     e64:	aa 94       	dec	r10
     e66:	f4 01       	movw	r30, r8
     e68:	ea 0d       	add	r30, r10
     e6a:	f1 1d       	adc	r31, r1
     e6c:	80 81       	ld	r24, Z
     e6e:	b7 01       	movw	r22, r14
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	0e 94 b1 08 	call	0x1162	; 0x1162 <fputc>
     e76:	a1 10       	cpse	r10, r1
     e78:	f5 cf       	rjmp	.-22     	; 0xe64 <vfprintf+0x366>
     e7a:	33 20       	and	r3, r3
     e7c:	09 f4       	brne	.+2      	; 0xe80 <vfprintf+0x382>
     e7e:	51 ce       	rjmp	.-862    	; 0xb22 <vfprintf+0x24>
     e80:	b7 01       	movw	r22, r14
     e82:	80 e2       	ldi	r24, 0x20	; 32
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	0e 94 b1 08 	call	0x1162	; 0x1162 <fputc>
     e8a:	3a 94       	dec	r3
     e8c:	f6 cf       	rjmp	.-20     	; 0xe7a <vfprintf+0x37c>
     e8e:	f7 01       	movw	r30, r14
     e90:	86 81       	ldd	r24, Z+6	; 0x06
     e92:	97 81       	ldd	r25, Z+7	; 0x07
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <vfprintf+0x39c>
     e96:	8f ef       	ldi	r24, 0xFF	; 255
     e98:	9f ef       	ldi	r25, 0xFF	; 255
     e9a:	2c 96       	adiw	r28, 0x0c	; 12
     e9c:	e2 e1       	ldi	r30, 0x12	; 18
     e9e:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__epilogue_restores__>

00000ea2 <calloc>:
     ea2:	0f 93       	push	r16
     ea4:	1f 93       	push	r17
     ea6:	cf 93       	push	r28
     ea8:	df 93       	push	r29
     eaa:	86 9f       	mul	r24, r22
     eac:	80 01       	movw	r16, r0
     eae:	87 9f       	mul	r24, r23
     eb0:	10 0d       	add	r17, r0
     eb2:	96 9f       	mul	r25, r22
     eb4:	10 0d       	add	r17, r0
     eb6:	11 24       	eor	r1, r1
     eb8:	c8 01       	movw	r24, r16
     eba:	0e 94 6d 07 	call	0xeda	; 0xeda <malloc>
     ebe:	ec 01       	movw	r28, r24
     ec0:	00 97       	sbiw	r24, 0x00	; 0
     ec2:	29 f0       	breq	.+10     	; 0xece <calloc+0x2c>
     ec4:	a8 01       	movw	r20, r16
     ec6:	60 e0       	ldi	r22, 0x00	; 0
     ec8:	70 e0       	ldi	r23, 0x00	; 0
     eca:	0e 94 9f 08 	call	0x113e	; 0x113e <memset>
     ece:	ce 01       	movw	r24, r28
     ed0:	df 91       	pop	r29
     ed2:	cf 91       	pop	r28
     ed4:	1f 91       	pop	r17
     ed6:	0f 91       	pop	r16
     ed8:	08 95       	ret

00000eda <malloc>:
     eda:	cf 93       	push	r28
     edc:	df 93       	push	r29
     ede:	82 30       	cpi	r24, 0x02	; 2
     ee0:	91 05       	cpc	r25, r1
     ee2:	10 f4       	brcc	.+4      	; 0xee8 <malloc+0xe>
     ee4:	82 e0       	ldi	r24, 0x02	; 2
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	e0 91 88 01 	lds	r30, 0x0188
     eec:	f0 91 89 01 	lds	r31, 0x0189
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	a0 e0       	ldi	r26, 0x00	; 0
     ef6:	b0 e0       	ldi	r27, 0x00	; 0
     ef8:	30 97       	sbiw	r30, 0x00	; 0
     efa:	39 f1       	breq	.+78     	; 0xf4a <malloc+0x70>
     efc:	40 81       	ld	r20, Z
     efe:	51 81       	ldd	r21, Z+1	; 0x01
     f00:	48 17       	cp	r20, r24
     f02:	59 07       	cpc	r21, r25
     f04:	b8 f0       	brcs	.+46     	; 0xf34 <malloc+0x5a>
     f06:	48 17       	cp	r20, r24
     f08:	59 07       	cpc	r21, r25
     f0a:	71 f4       	brne	.+28     	; 0xf28 <malloc+0x4e>
     f0c:	82 81       	ldd	r24, Z+2	; 0x02
     f0e:	93 81       	ldd	r25, Z+3	; 0x03
     f10:	10 97       	sbiw	r26, 0x00	; 0
     f12:	29 f0       	breq	.+10     	; 0xf1e <malloc+0x44>
     f14:	13 96       	adiw	r26, 0x03	; 3
     f16:	9c 93       	st	X, r25
     f18:	8e 93       	st	-X, r24
     f1a:	12 97       	sbiw	r26, 0x02	; 2
     f1c:	2c c0       	rjmp	.+88     	; 0xf76 <malloc+0x9c>
     f1e:	90 93 89 01 	sts	0x0189, r25
     f22:	80 93 88 01 	sts	0x0188, r24
     f26:	27 c0       	rjmp	.+78     	; 0xf76 <malloc+0x9c>
     f28:	21 15       	cp	r18, r1
     f2a:	31 05       	cpc	r19, r1
     f2c:	31 f0       	breq	.+12     	; 0xf3a <malloc+0x60>
     f2e:	42 17       	cp	r20, r18
     f30:	53 07       	cpc	r21, r19
     f32:	18 f0       	brcs	.+6      	; 0xf3a <malloc+0x60>
     f34:	a9 01       	movw	r20, r18
     f36:	db 01       	movw	r26, r22
     f38:	01 c0       	rjmp	.+2      	; 0xf3c <malloc+0x62>
     f3a:	ef 01       	movw	r28, r30
     f3c:	9a 01       	movw	r18, r20
     f3e:	bd 01       	movw	r22, r26
     f40:	df 01       	movw	r26, r30
     f42:	02 80       	ldd	r0, Z+2	; 0x02
     f44:	f3 81       	ldd	r31, Z+3	; 0x03
     f46:	e0 2d       	mov	r30, r0
     f48:	d7 cf       	rjmp	.-82     	; 0xef8 <malloc+0x1e>
     f4a:	21 15       	cp	r18, r1
     f4c:	31 05       	cpc	r19, r1
     f4e:	f9 f0       	breq	.+62     	; 0xf8e <malloc+0xb4>
     f50:	28 1b       	sub	r18, r24
     f52:	39 0b       	sbc	r19, r25
     f54:	24 30       	cpi	r18, 0x04	; 4
     f56:	31 05       	cpc	r19, r1
     f58:	80 f4       	brcc	.+32     	; 0xf7a <malloc+0xa0>
     f5a:	8a 81       	ldd	r24, Y+2	; 0x02
     f5c:	9b 81       	ldd	r25, Y+3	; 0x03
     f5e:	61 15       	cp	r22, r1
     f60:	71 05       	cpc	r23, r1
     f62:	21 f0       	breq	.+8      	; 0xf6c <malloc+0x92>
     f64:	fb 01       	movw	r30, r22
     f66:	93 83       	std	Z+3, r25	; 0x03
     f68:	82 83       	std	Z+2, r24	; 0x02
     f6a:	04 c0       	rjmp	.+8      	; 0xf74 <malloc+0x9a>
     f6c:	90 93 89 01 	sts	0x0189, r25
     f70:	80 93 88 01 	sts	0x0188, r24
     f74:	fe 01       	movw	r30, r28
     f76:	32 96       	adiw	r30, 0x02	; 2
     f78:	44 c0       	rjmp	.+136    	; 0x1002 <malloc+0x128>
     f7a:	fe 01       	movw	r30, r28
     f7c:	e2 0f       	add	r30, r18
     f7e:	f3 1f       	adc	r31, r19
     f80:	81 93       	st	Z+, r24
     f82:	91 93       	st	Z+, r25
     f84:	22 50       	subi	r18, 0x02	; 2
     f86:	31 09       	sbc	r19, r1
     f88:	39 83       	std	Y+1, r19	; 0x01
     f8a:	28 83       	st	Y, r18
     f8c:	3a c0       	rjmp	.+116    	; 0x1002 <malloc+0x128>
     f8e:	20 91 86 01 	lds	r18, 0x0186
     f92:	30 91 87 01 	lds	r19, 0x0187
     f96:	23 2b       	or	r18, r19
     f98:	41 f4       	brne	.+16     	; 0xfaa <malloc+0xd0>
     f9a:	20 91 02 01 	lds	r18, 0x0102
     f9e:	30 91 03 01 	lds	r19, 0x0103
     fa2:	30 93 87 01 	sts	0x0187, r19
     fa6:	20 93 86 01 	sts	0x0186, r18
     faa:	20 91 00 01 	lds	r18, 0x0100
     fae:	30 91 01 01 	lds	r19, 0x0101
     fb2:	21 15       	cp	r18, r1
     fb4:	31 05       	cpc	r19, r1
     fb6:	41 f4       	brne	.+16     	; 0xfc8 <malloc+0xee>
     fb8:	2d b7       	in	r18, 0x3d	; 61
     fba:	3e b7       	in	r19, 0x3e	; 62
     fbc:	40 91 04 01 	lds	r20, 0x0104
     fc0:	50 91 05 01 	lds	r21, 0x0105
     fc4:	24 1b       	sub	r18, r20
     fc6:	35 0b       	sbc	r19, r21
     fc8:	e0 91 86 01 	lds	r30, 0x0186
     fcc:	f0 91 87 01 	lds	r31, 0x0187
     fd0:	e2 17       	cp	r30, r18
     fd2:	f3 07       	cpc	r31, r19
     fd4:	a0 f4       	brcc	.+40     	; 0xffe <malloc+0x124>
     fd6:	2e 1b       	sub	r18, r30
     fd8:	3f 0b       	sbc	r19, r31
     fda:	28 17       	cp	r18, r24
     fdc:	39 07       	cpc	r19, r25
     fde:	78 f0       	brcs	.+30     	; 0xffe <malloc+0x124>
     fe0:	ac 01       	movw	r20, r24
     fe2:	4e 5f       	subi	r20, 0xFE	; 254
     fe4:	5f 4f       	sbci	r21, 0xFF	; 255
     fe6:	24 17       	cp	r18, r20
     fe8:	35 07       	cpc	r19, r21
     fea:	48 f0       	brcs	.+18     	; 0xffe <malloc+0x124>
     fec:	4e 0f       	add	r20, r30
     fee:	5f 1f       	adc	r21, r31
     ff0:	50 93 87 01 	sts	0x0187, r21
     ff4:	40 93 86 01 	sts	0x0186, r20
     ff8:	81 93       	st	Z+, r24
     ffa:	91 93       	st	Z+, r25
     ffc:	02 c0       	rjmp	.+4      	; 0x1002 <malloc+0x128>
     ffe:	e0 e0       	ldi	r30, 0x00	; 0
    1000:	f0 e0       	ldi	r31, 0x00	; 0
    1002:	cf 01       	movw	r24, r30
    1004:	df 91       	pop	r29
    1006:	cf 91       	pop	r28
    1008:	08 95       	ret

0000100a <free>:
    100a:	cf 93       	push	r28
    100c:	df 93       	push	r29
    100e:	00 97       	sbiw	r24, 0x00	; 0
    1010:	09 f4       	brne	.+2      	; 0x1014 <free+0xa>
    1012:	87 c0       	rjmp	.+270    	; 0x1122 <free+0x118>
    1014:	fc 01       	movw	r30, r24
    1016:	32 97       	sbiw	r30, 0x02	; 2
    1018:	13 82       	std	Z+3, r1	; 0x03
    101a:	12 82       	std	Z+2, r1	; 0x02
    101c:	c0 91 88 01 	lds	r28, 0x0188
    1020:	d0 91 89 01 	lds	r29, 0x0189
    1024:	20 97       	sbiw	r28, 0x00	; 0
    1026:	81 f4       	brne	.+32     	; 0x1048 <free+0x3e>
    1028:	20 81       	ld	r18, Z
    102a:	31 81       	ldd	r19, Z+1	; 0x01
    102c:	28 0f       	add	r18, r24
    102e:	39 1f       	adc	r19, r25
    1030:	80 91 86 01 	lds	r24, 0x0186
    1034:	90 91 87 01 	lds	r25, 0x0187
    1038:	82 17       	cp	r24, r18
    103a:	93 07       	cpc	r25, r19
    103c:	79 f5       	brne	.+94     	; 0x109c <free+0x92>
    103e:	f0 93 87 01 	sts	0x0187, r31
    1042:	e0 93 86 01 	sts	0x0186, r30
    1046:	6d c0       	rjmp	.+218    	; 0x1122 <free+0x118>
    1048:	de 01       	movw	r26, r28
    104a:	20 e0       	ldi	r18, 0x00	; 0
    104c:	30 e0       	ldi	r19, 0x00	; 0
    104e:	ae 17       	cp	r26, r30
    1050:	bf 07       	cpc	r27, r31
    1052:	50 f4       	brcc	.+20     	; 0x1068 <free+0x5e>
    1054:	12 96       	adiw	r26, 0x02	; 2
    1056:	4d 91       	ld	r20, X+
    1058:	5c 91       	ld	r21, X
    105a:	13 97       	sbiw	r26, 0x03	; 3
    105c:	9d 01       	movw	r18, r26
    105e:	41 15       	cp	r20, r1
    1060:	51 05       	cpc	r21, r1
    1062:	09 f1       	breq	.+66     	; 0x10a6 <free+0x9c>
    1064:	da 01       	movw	r26, r20
    1066:	f3 cf       	rjmp	.-26     	; 0x104e <free+0x44>
    1068:	b3 83       	std	Z+3, r27	; 0x03
    106a:	a2 83       	std	Z+2, r26	; 0x02
    106c:	40 81       	ld	r20, Z
    106e:	51 81       	ldd	r21, Z+1	; 0x01
    1070:	84 0f       	add	r24, r20
    1072:	95 1f       	adc	r25, r21
    1074:	8a 17       	cp	r24, r26
    1076:	9b 07       	cpc	r25, r27
    1078:	71 f4       	brne	.+28     	; 0x1096 <free+0x8c>
    107a:	8d 91       	ld	r24, X+
    107c:	9c 91       	ld	r25, X
    107e:	11 97       	sbiw	r26, 0x01	; 1
    1080:	84 0f       	add	r24, r20
    1082:	95 1f       	adc	r25, r21
    1084:	02 96       	adiw	r24, 0x02	; 2
    1086:	91 83       	std	Z+1, r25	; 0x01
    1088:	80 83       	st	Z, r24
    108a:	12 96       	adiw	r26, 0x02	; 2
    108c:	8d 91       	ld	r24, X+
    108e:	9c 91       	ld	r25, X
    1090:	13 97       	sbiw	r26, 0x03	; 3
    1092:	93 83       	std	Z+3, r25	; 0x03
    1094:	82 83       	std	Z+2, r24	; 0x02
    1096:	21 15       	cp	r18, r1
    1098:	31 05       	cpc	r19, r1
    109a:	29 f4       	brne	.+10     	; 0x10a6 <free+0x9c>
    109c:	f0 93 89 01 	sts	0x0189, r31
    10a0:	e0 93 88 01 	sts	0x0188, r30
    10a4:	3e c0       	rjmp	.+124    	; 0x1122 <free+0x118>
    10a6:	d9 01       	movw	r26, r18
    10a8:	13 96       	adiw	r26, 0x03	; 3
    10aa:	fc 93       	st	X, r31
    10ac:	ee 93       	st	-X, r30
    10ae:	12 97       	sbiw	r26, 0x02	; 2
    10b0:	4d 91       	ld	r20, X+
    10b2:	5d 91       	ld	r21, X+
    10b4:	a4 0f       	add	r26, r20
    10b6:	b5 1f       	adc	r27, r21
    10b8:	ea 17       	cp	r30, r26
    10ba:	fb 07       	cpc	r31, r27
    10bc:	79 f4       	brne	.+30     	; 0x10dc <free+0xd2>
    10be:	80 81       	ld	r24, Z
    10c0:	91 81       	ldd	r25, Z+1	; 0x01
    10c2:	84 0f       	add	r24, r20
    10c4:	95 1f       	adc	r25, r21
    10c6:	02 96       	adiw	r24, 0x02	; 2
    10c8:	d9 01       	movw	r26, r18
    10ca:	11 96       	adiw	r26, 0x01	; 1
    10cc:	9c 93       	st	X, r25
    10ce:	8e 93       	st	-X, r24
    10d0:	82 81       	ldd	r24, Z+2	; 0x02
    10d2:	93 81       	ldd	r25, Z+3	; 0x03
    10d4:	13 96       	adiw	r26, 0x03	; 3
    10d6:	9c 93       	st	X, r25
    10d8:	8e 93       	st	-X, r24
    10da:	12 97       	sbiw	r26, 0x02	; 2
    10dc:	e0 e0       	ldi	r30, 0x00	; 0
    10de:	f0 e0       	ldi	r31, 0x00	; 0
    10e0:	8a 81       	ldd	r24, Y+2	; 0x02
    10e2:	9b 81       	ldd	r25, Y+3	; 0x03
    10e4:	00 97       	sbiw	r24, 0x00	; 0
    10e6:	19 f0       	breq	.+6      	; 0x10ee <free+0xe4>
    10e8:	fe 01       	movw	r30, r28
    10ea:	ec 01       	movw	r28, r24
    10ec:	f9 cf       	rjmp	.-14     	; 0x10e0 <free+0xd6>
    10ee:	ce 01       	movw	r24, r28
    10f0:	02 96       	adiw	r24, 0x02	; 2
    10f2:	28 81       	ld	r18, Y
    10f4:	39 81       	ldd	r19, Y+1	; 0x01
    10f6:	82 0f       	add	r24, r18
    10f8:	93 1f       	adc	r25, r19
    10fa:	20 91 86 01 	lds	r18, 0x0186
    10fe:	30 91 87 01 	lds	r19, 0x0187
    1102:	28 17       	cp	r18, r24
    1104:	39 07       	cpc	r19, r25
    1106:	69 f4       	brne	.+26     	; 0x1122 <free+0x118>
    1108:	30 97       	sbiw	r30, 0x00	; 0
    110a:	29 f4       	brne	.+10     	; 0x1116 <free+0x10c>
    110c:	10 92 89 01 	sts	0x0189, r1
    1110:	10 92 88 01 	sts	0x0188, r1
    1114:	02 c0       	rjmp	.+4      	; 0x111a <free+0x110>
    1116:	13 82       	std	Z+3, r1	; 0x03
    1118:	12 82       	std	Z+2, r1	; 0x02
    111a:	d0 93 87 01 	sts	0x0187, r29
    111e:	c0 93 86 01 	sts	0x0186, r28
    1122:	df 91       	pop	r29
    1124:	cf 91       	pop	r28
    1126:	08 95       	ret

00001128 <strnlen_P>:
    1128:	fc 01       	movw	r30, r24
    112a:	05 90       	lpm	r0, Z+
    112c:	61 50       	subi	r22, 0x01	; 1
    112e:	70 40       	sbci	r23, 0x00	; 0
    1130:	01 10       	cpse	r0, r1
    1132:	d8 f7       	brcc	.-10     	; 0x112a <strnlen_P+0x2>
    1134:	80 95       	com	r24
    1136:	90 95       	com	r25
    1138:	8e 0f       	add	r24, r30
    113a:	9f 1f       	adc	r25, r31
    113c:	08 95       	ret

0000113e <memset>:
    113e:	dc 01       	movw	r26, r24
    1140:	01 c0       	rjmp	.+2      	; 0x1144 <memset+0x6>
    1142:	6d 93       	st	X+, r22
    1144:	41 50       	subi	r20, 0x01	; 1
    1146:	50 40       	sbci	r21, 0x00	; 0
    1148:	e0 f7       	brcc	.-8      	; 0x1142 <memset+0x4>
    114a:	08 95       	ret

0000114c <strnlen>:
    114c:	fc 01       	movw	r30, r24
    114e:	61 50       	subi	r22, 0x01	; 1
    1150:	70 40       	sbci	r23, 0x00	; 0
    1152:	01 90       	ld	r0, Z+
    1154:	01 10       	cpse	r0, r1
    1156:	d8 f7       	brcc	.-10     	; 0x114e <strnlen+0x2>
    1158:	80 95       	com	r24
    115a:	90 95       	com	r25
    115c:	8e 0f       	add	r24, r30
    115e:	9f 1f       	adc	r25, r31
    1160:	08 95       	ret

00001162 <fputc>:
    1162:	0f 93       	push	r16
    1164:	1f 93       	push	r17
    1166:	cf 93       	push	r28
    1168:	df 93       	push	r29
    116a:	18 2f       	mov	r17, r24
    116c:	09 2f       	mov	r16, r25
    116e:	eb 01       	movw	r28, r22
    1170:	8b 81       	ldd	r24, Y+3	; 0x03
    1172:	81 fd       	sbrc	r24, 1
    1174:	03 c0       	rjmp	.+6      	; 0x117c <fputc+0x1a>
    1176:	8f ef       	ldi	r24, 0xFF	; 255
    1178:	9f ef       	ldi	r25, 0xFF	; 255
    117a:	20 c0       	rjmp	.+64     	; 0x11bc <fputc+0x5a>
    117c:	82 ff       	sbrs	r24, 2
    117e:	10 c0       	rjmp	.+32     	; 0x11a0 <fputc+0x3e>
    1180:	4e 81       	ldd	r20, Y+6	; 0x06
    1182:	5f 81       	ldd	r21, Y+7	; 0x07
    1184:	2c 81       	ldd	r18, Y+4	; 0x04
    1186:	3d 81       	ldd	r19, Y+5	; 0x05
    1188:	42 17       	cp	r20, r18
    118a:	53 07       	cpc	r21, r19
    118c:	7c f4       	brge	.+30     	; 0x11ac <fputc+0x4a>
    118e:	e8 81       	ld	r30, Y
    1190:	f9 81       	ldd	r31, Y+1	; 0x01
    1192:	9f 01       	movw	r18, r30
    1194:	2f 5f       	subi	r18, 0xFF	; 255
    1196:	3f 4f       	sbci	r19, 0xFF	; 255
    1198:	39 83       	std	Y+1, r19	; 0x01
    119a:	28 83       	st	Y, r18
    119c:	10 83       	st	Z, r17
    119e:	06 c0       	rjmp	.+12     	; 0x11ac <fputc+0x4a>
    11a0:	e8 85       	ldd	r30, Y+8	; 0x08
    11a2:	f9 85       	ldd	r31, Y+9	; 0x09
    11a4:	81 2f       	mov	r24, r17
    11a6:	09 95       	icall
    11a8:	89 2b       	or	r24, r25
    11aa:	29 f7       	brne	.-54     	; 0x1176 <fputc+0x14>
    11ac:	2e 81       	ldd	r18, Y+6	; 0x06
    11ae:	3f 81       	ldd	r19, Y+7	; 0x07
    11b0:	2f 5f       	subi	r18, 0xFF	; 255
    11b2:	3f 4f       	sbci	r19, 0xFF	; 255
    11b4:	3f 83       	std	Y+7, r19	; 0x07
    11b6:	2e 83       	std	Y+6, r18	; 0x06
    11b8:	81 2f       	mov	r24, r17
    11ba:	90 2f       	mov	r25, r16
    11bc:	df 91       	pop	r29
    11be:	cf 91       	pop	r28
    11c0:	1f 91       	pop	r17
    11c2:	0f 91       	pop	r16
    11c4:	08 95       	ret

000011c6 <__ultoa_invert>:
    11c6:	fa 01       	movw	r30, r20
    11c8:	aa 27       	eor	r26, r26
    11ca:	28 30       	cpi	r18, 0x08	; 8
    11cc:	51 f1       	breq	.+84     	; 0x1222 <__ultoa_invert+0x5c>
    11ce:	20 31       	cpi	r18, 0x10	; 16
    11d0:	81 f1       	breq	.+96     	; 0x1232 <__ultoa_invert+0x6c>
    11d2:	e8 94       	clt
    11d4:	6f 93       	push	r22
    11d6:	6e 7f       	andi	r22, 0xFE	; 254
    11d8:	6e 5f       	subi	r22, 0xFE	; 254
    11da:	7f 4f       	sbci	r23, 0xFF	; 255
    11dc:	8f 4f       	sbci	r24, 0xFF	; 255
    11de:	9f 4f       	sbci	r25, 0xFF	; 255
    11e0:	af 4f       	sbci	r26, 0xFF	; 255
    11e2:	b1 e0       	ldi	r27, 0x01	; 1
    11e4:	3e d0       	rcall	.+124    	; 0x1262 <__ultoa_invert+0x9c>
    11e6:	b4 e0       	ldi	r27, 0x04	; 4
    11e8:	3c d0       	rcall	.+120    	; 0x1262 <__ultoa_invert+0x9c>
    11ea:	67 0f       	add	r22, r23
    11ec:	78 1f       	adc	r23, r24
    11ee:	89 1f       	adc	r24, r25
    11f0:	9a 1f       	adc	r25, r26
    11f2:	a1 1d       	adc	r26, r1
    11f4:	68 0f       	add	r22, r24
    11f6:	79 1f       	adc	r23, r25
    11f8:	8a 1f       	adc	r24, r26
    11fa:	91 1d       	adc	r25, r1
    11fc:	a1 1d       	adc	r26, r1
    11fe:	6a 0f       	add	r22, r26
    1200:	71 1d       	adc	r23, r1
    1202:	81 1d       	adc	r24, r1
    1204:	91 1d       	adc	r25, r1
    1206:	a1 1d       	adc	r26, r1
    1208:	20 d0       	rcall	.+64     	; 0x124a <__ultoa_invert+0x84>
    120a:	09 f4       	brne	.+2      	; 0x120e <__ultoa_invert+0x48>
    120c:	68 94       	set
    120e:	3f 91       	pop	r19
    1210:	2a e0       	ldi	r18, 0x0A	; 10
    1212:	26 9f       	mul	r18, r22
    1214:	11 24       	eor	r1, r1
    1216:	30 19       	sub	r19, r0
    1218:	30 5d       	subi	r19, 0xD0	; 208
    121a:	31 93       	st	Z+, r19
    121c:	de f6       	brtc	.-74     	; 0x11d4 <__ultoa_invert+0xe>
    121e:	cf 01       	movw	r24, r30
    1220:	08 95       	ret
    1222:	46 2f       	mov	r20, r22
    1224:	47 70       	andi	r20, 0x07	; 7
    1226:	40 5d       	subi	r20, 0xD0	; 208
    1228:	41 93       	st	Z+, r20
    122a:	b3 e0       	ldi	r27, 0x03	; 3
    122c:	0f d0       	rcall	.+30     	; 0x124c <__ultoa_invert+0x86>
    122e:	c9 f7       	brne	.-14     	; 0x1222 <__ultoa_invert+0x5c>
    1230:	f6 cf       	rjmp	.-20     	; 0x121e <__ultoa_invert+0x58>
    1232:	46 2f       	mov	r20, r22
    1234:	4f 70       	andi	r20, 0x0F	; 15
    1236:	40 5d       	subi	r20, 0xD0	; 208
    1238:	4a 33       	cpi	r20, 0x3A	; 58
    123a:	18 f0       	brcs	.+6      	; 0x1242 <__ultoa_invert+0x7c>
    123c:	49 5d       	subi	r20, 0xD9	; 217
    123e:	31 fd       	sbrc	r19, 1
    1240:	40 52       	subi	r20, 0x20	; 32
    1242:	41 93       	st	Z+, r20
    1244:	02 d0       	rcall	.+4      	; 0x124a <__ultoa_invert+0x84>
    1246:	a9 f7       	brne	.-22     	; 0x1232 <__ultoa_invert+0x6c>
    1248:	ea cf       	rjmp	.-44     	; 0x121e <__ultoa_invert+0x58>
    124a:	b4 e0       	ldi	r27, 0x04	; 4
    124c:	a6 95       	lsr	r26
    124e:	97 95       	ror	r25
    1250:	87 95       	ror	r24
    1252:	77 95       	ror	r23
    1254:	67 95       	ror	r22
    1256:	ba 95       	dec	r27
    1258:	c9 f7       	brne	.-14     	; 0x124c <__ultoa_invert+0x86>
    125a:	00 97       	sbiw	r24, 0x00	; 0
    125c:	61 05       	cpc	r22, r1
    125e:	71 05       	cpc	r23, r1
    1260:	08 95       	ret
    1262:	9b 01       	movw	r18, r22
    1264:	ac 01       	movw	r20, r24
    1266:	0a 2e       	mov	r0, r26
    1268:	06 94       	lsr	r0
    126a:	57 95       	ror	r21
    126c:	47 95       	ror	r20
    126e:	37 95       	ror	r19
    1270:	27 95       	ror	r18
    1272:	ba 95       	dec	r27
    1274:	c9 f7       	brne	.-14     	; 0x1268 <__ultoa_invert+0xa2>
    1276:	62 0f       	add	r22, r18
    1278:	73 1f       	adc	r23, r19
    127a:	84 1f       	adc	r24, r20
    127c:	95 1f       	adc	r25, r21
    127e:	a0 1d       	adc	r26, r0
    1280:	08 95       	ret

00001282 <__prologue_saves__>:
    1282:	2f 92       	push	r2
    1284:	3f 92       	push	r3
    1286:	4f 92       	push	r4
    1288:	5f 92       	push	r5
    128a:	6f 92       	push	r6
    128c:	7f 92       	push	r7
    128e:	8f 92       	push	r8
    1290:	9f 92       	push	r9
    1292:	af 92       	push	r10
    1294:	bf 92       	push	r11
    1296:	cf 92       	push	r12
    1298:	df 92       	push	r13
    129a:	ef 92       	push	r14
    129c:	ff 92       	push	r15
    129e:	0f 93       	push	r16
    12a0:	1f 93       	push	r17
    12a2:	cf 93       	push	r28
    12a4:	df 93       	push	r29
    12a6:	cd b7       	in	r28, 0x3d	; 61
    12a8:	de b7       	in	r29, 0x3e	; 62
    12aa:	ca 1b       	sub	r28, r26
    12ac:	db 0b       	sbc	r29, r27
    12ae:	0f b6       	in	r0, 0x3f	; 63
    12b0:	f8 94       	cli
    12b2:	de bf       	out	0x3e, r29	; 62
    12b4:	0f be       	out	0x3f, r0	; 63
    12b6:	cd bf       	out	0x3d, r28	; 61
    12b8:	09 94       	ijmp

000012ba <__epilogue_restores__>:
    12ba:	2a 88       	ldd	r2, Y+18	; 0x12
    12bc:	39 88       	ldd	r3, Y+17	; 0x11
    12be:	48 88       	ldd	r4, Y+16	; 0x10
    12c0:	5f 84       	ldd	r5, Y+15	; 0x0f
    12c2:	6e 84       	ldd	r6, Y+14	; 0x0e
    12c4:	7d 84       	ldd	r7, Y+13	; 0x0d
    12c6:	8c 84       	ldd	r8, Y+12	; 0x0c
    12c8:	9b 84       	ldd	r9, Y+11	; 0x0b
    12ca:	aa 84       	ldd	r10, Y+10	; 0x0a
    12cc:	b9 84       	ldd	r11, Y+9	; 0x09
    12ce:	c8 84       	ldd	r12, Y+8	; 0x08
    12d0:	df 80       	ldd	r13, Y+7	; 0x07
    12d2:	ee 80       	ldd	r14, Y+6	; 0x06
    12d4:	fd 80       	ldd	r15, Y+5	; 0x05
    12d6:	0c 81       	ldd	r16, Y+4	; 0x04
    12d8:	1b 81       	ldd	r17, Y+3	; 0x03
    12da:	aa 81       	ldd	r26, Y+2	; 0x02
    12dc:	b9 81       	ldd	r27, Y+1	; 0x01
    12de:	ce 0f       	add	r28, r30
    12e0:	d1 1d       	adc	r29, r1
    12e2:	0f b6       	in	r0, 0x3f	; 63
    12e4:	f8 94       	cli
    12e6:	de bf       	out	0x3e, r29	; 62
    12e8:	0f be       	out	0x3f, r0	; 63
    12ea:	cd bf       	out	0x3d, r28	; 61
    12ec:	ed 01       	movw	r28, r26
    12ee:	08 95       	ret

000012f0 <_exit>:
    12f0:	f8 94       	cli

000012f2 <__stop_program>:
    12f2:	ff cf       	rjmp	.-2      	; 0x12f2 <__stop_program>
